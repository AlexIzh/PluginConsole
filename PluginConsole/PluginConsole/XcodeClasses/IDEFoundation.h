/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma GCC system_header

#import "DVTKit.h"

@class IDEActivityLogSection;
@class IDETypeIdentifier;
@class IDEIndexDatabase;
@class IDEActivityLogSectionRecorder;
@class IDEBreakpoint;
@class IDEScheme;
@class IDESchemeBuildableReference;
@protocol IDETestableProvider;
@class IDEBreakpointBucket;
@class IDEConcreteClientTracker;
@class IDEArchivedApplication;
@class IDEBuildOperationGroup;
@class IDEContainer;
@class IDEWorkspace;
@class IDEBuildSchemeAction;
@class IDEBuilder;
@class IDEIssueManager;
@class IDEIssueProviederSession;
@class IDEBuildOperation;
@class IDELogStore;
@class IDEExecutionEnvironment;
@class IDEExecutionOperationTracker;
@class IDEExecutionEnvironment;
@class IDEBuildOperationDescription;
@class IDEIsssueProviderSession;
@class IDEBuildParameters;
@class IDEBuildOperationStatus;
@class IDEBuildOperationQueueSet;
@class IDEOverridingBuildProperties;
@class IDEWorkspaceArenaSnapshot;
@class IDEIssueProviderSession;
@class IDERunDestination;
@class IDELaunchSession;
@class IDEGroup;
@protocol IDEConsoleAdaptorDelegateProtocol;
@class IDEDependencyGraph;
@class IDEWorkspaceArena;
@class IDEExecutionTracker;
@protocol IDEPreBuildSavingDelegate;
@class IDERunOperationWorker;
@class IDEInMemoryLogStore_Impl;
@class IDEIndexQPManager;
@class IDEIndexSymbolOccurrence;
@class IDEIndexNewMainFile;
@class IDEIndexNewFile;
@class IDEIndexingEngine;
@class IDEIndexingJob;
@class IDEIndexCollection;
@class IDEIndexDBTempTable;
@class IDEIndexDBConnection;
@class IDEIndexDBTransaction;
@class IDEIndexImporter;
@class IDEIndexDatabaseQueryProvider;
@class IDEIndexUniqueStringMap;
@class IDELocationScenarioReference;
@protocol IDEDebugSession;
@class IDELocationSimulator;
@protocol IDETraceInferiorSession;
@class IDELocationScenario;
@class IDESimulateLocationService;
@class IDEOCUnitTestRunner;
@class IDEOCUnitTestOutputParser;
@class IDETestableReference;
@class IDEOnDiskLogStore_Impl;
@class IDETestSchemeAction;
@class IDESourceControlTree;
@class IDESourceControlRequest;
@class IDESourceControlTreeGroup;
@protocol IDEAnalysisToolService;
@class IDESourceControlProtocol;
@class IDETestManager;
@class IDEWorkspaceUserSettings;
@class IDEWorkspaceSnapshotManager;
@protocol IDESourceControlProtocol;
@class IDEWorkspaceSharedSettings;
@class IDEWorkspaceArenaInfo;
@protocol IDESnapshotConfirmationDelegate;





#pragma mark Named Structures

#pragma mark Typedef'd Structures
/*
typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;
 */

typedef struct {
    int _field1;
    int _field2;
    void *_field3[3];
} CDStruct_a94d320b;

#pragma mark -
 
/*
 * File: /Developer/Applications/Xcode.app/Contents/Frameworks/IDEFoundation.framework/Versions/A/IDEFoundation
 * UUID: 1A2C2BAD-91CE-31A1-A739-37F928BBF1B9
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 1192.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 *       Run path: @loader_path/../../../../Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
 *               = /Developer/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
 */

@protocol IDEIntegrityLogDataSource
@property(readonly) IDEActivityLogSection *integrityLog;
- (void)analyzeModelIntegrity;
@end
/*
@protocol DVTCancellableToken <NSObject>
@property(readonly, getter=isCancelled) BOOL cancelled;
- (void)cancel;
@end

@protocol DVTCustomDataStoring <NSObject>
@property(readonly) NSString *displayName;
- (BOOL)supportsCustomDataForOwnership:(id)arg1;
- (void)moveCustomDataWithSpecifier:(id)arg1 toSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
- (void)removeCustomDataWithSpecifier:(id)arg1 completionQueue:(id)arg2 completionBlock:(id)arg3;
- (void)writeCustomData:(id)arg1 withSpecifier:(id)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (id)readCustomDataWithSpecifier:(id)arg1 error:(id *)arg2;
- (id)customDataOwnershipsForGrouping:(id)arg1;
- (id)customDataSpecifiersForGrouping:(id)arg1 ownership:(id)arg2;
@end
*/
@protocol DVTDirectoryBasedCustomDataStoreDelegate <NSObject>

@optional
- (void)customDataStore:(id)arg1 removeItemAtFilePath:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
- (void)customDataStore:(id)arg1 moveItemAtFilePath:(id)arg2 toFilePath:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (void)customDataStore:(id)arg1 writeData:(id)arg2 toFilePath:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (void)customDataStore:(id)arg1 makeFilePathsWritable:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
@end
/*
@protocol DVTInvalidation <NSObject>
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end
*/
@protocol DVTObservingToken <DVTCancellableToken>
@end

@protocol DVTPerformanceTestParser
- (BOOL)performanceTestOutput:(id *)arg1 forInputString:(id)arg2;
@end

@protocol DVTReferenceResolverClient
- (void)resolverStrategiesDidChange:(id)arg1;
@end

@protocol DVTSimpleSerialization
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@end

@protocol DVTXMLUnarchiverDelegate <NSObject>

@optional
- (void)XMLUnarchiver:(id)arg1 didReadToPosition:(long long)arg2 ofTotal:(long long)arg3;
@end

@protocol DVTXMLUnarchiving <NSObject>
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@end

@protocol IDEBlueprint <NSObject, IDEIntegrityLogDataSource>
@property(readonly) NSString *blueprintIdentifier;
@property(readonly) NSString *name;
- (void)addFileReference:(id)arg1 toBuildablesContainingFileReference:(id)arg2;
- (BOOL)containsFilePath:(id)arg1;
- (BOOL)containsFileReference:(id)arg1;
- (id)buildableProducts;
- (id)buildables;
- (id)primaryBuildable;
- (id)buildableForIdentifier:(id)arg1;
- (id)localizedDescription;
- (id)customDataStore;
- (id)blueprintProvider;

@optional
- (id)valueForOverridingBuildSettingKey:(id)arg1 sourceCodeBuildFileReferences:(id)arg2;
- (void)setValue:(id)arg1 forOverridingBuildSettingKey:(id)arg2 sourceCodeBuildFileReference:(id)arg3;
- (id)valueForBuildSettingKey:(id)arg1 sourceCodeBuildFileReferences:(id)arg2;
- (void)setValue:(id)arg1 forBuildSettingKey:(id)arg2 sourceCodeBuildFileReference:(id)arg3;
- (id)sourceCodeBuildFileReferences;
- (void)convertToUseARC;
- (BOOL)canConvertToUseARC;
- (void)convertToBuild64bitOnly;
- (void)convertToUseClang;
- (id)deviceSDKFor:(id)arg1 SDKs:(id)arg2;
- (id)simulatorSDKFor:(id)arg1 SDKs:(id)arg2;
- (id)specifiedBaseSDKForBuildConfigurationName:(id)arg1;
- (id)baseSDKForBuildConfigurationName:(id)arg1;
- (id)supportedPlatformsForConfiguration:(id)arg1 workspaceArenaSnapshot:(id)arg2;
- (id)compilerSpecificationIdentifier;
- (id)availableArchitecturesForConfiguration:(id)arg1 workspaceArenaSnapshot:(id)arg2;
- (id)defaultConfigurationName;
- (id)availableConfigurationNames;
@end

@protocol IDEBlueprintProvider <NSObject>
- (id)testableProdiver;
- (id)blueprintForName:(id)arg1;
- (id)blueprintForIdentifier:(id)arg1;
- (id)classPrefix;
- (id)organizationName;
- (id)name;
- (id)blueprints;
@end

@protocol IDEBuildable <NSObject>
@property(readonly) NSString *legacyIdentifier;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) BOOL hasRecursiveDependencyCycle;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly) NSString *buildableIdentifier;
- (id)createBuilderForBuildCommand:(int)arg1 withBuildTaskQueueSet:(id)arg2 parameters:(id)arg3 buildOnlyTheseFiles:(id)arg4 restorePersistedBuildResults:(BOOL)arg5;
- (id)implicitDependenciesForBuildParameters:(id)arg1 executionEnvironment:(id)arg2;
- (id)directDependencies;
- (id)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(id)arg2;
- (id)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (id)absolutePathByEvaluatingPropertyString:(id)arg1 withBuildParameters:(id)arg2;
- (id)stringByEvaluatingPropertyString:(id)arg1 withBuildParameters:(id)arg2;
- (id)valueForBuildSetting:(id)arg1 withBuildParameters:(id)arg2;
- (id)allPropertyNamesWithBuildParameters:(id)arg1;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) NSDictionary *copiedFilePathsMap;
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *infoPlistIconPath;
@property(readonly) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (id)filePathForBuildParameters:(id)arg1;
- (id)productTypeIdentifier;
@end

@protocol IDEClientTracking <NSObject>
- (void)cancelTrackedClients;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(id)arg3;
@end

@protocol IDEClientTrackingToken <NSObject>
@property(readonly) NSString *clientName;
- (void)unregisterClient;
@end

@protocol IDEContainerCore <NSObject, DVTInvalidation>
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)containerFileType;
- (int)currentActivity;
- (id)containerExtension;
- (id)filePath;
- (id)rootGroup;
- (id)invalidationBacktrace;
- (BOOL)isValid;
- (void)invalidate;
- (void)releaseContainerCore;
- (void)retainContainerCore;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 error:(id *)arg3;
@end

@protocol IDEContainerDelegate <NSObject>

@optional
- (void)_container:(id)arg1 didChangeFromFilePath:(id)arg2 toFilePath:(id)arg3;
@end

@protocol IDEContainerErrorPresenter
- (BOOL)presentError:(id)arg1;
- (int)handleSaveError:(id)arg1 forContainer:(id)arg2 withAction:(int)arg3;
@end

@protocol IDEContainerItemCore;
@protocol IDEGroupCore <IDEContainerItemCore>
@property(copy) NSArray *subitems;
@property(copy) NSString *name;
@property(retain) id <IDEContainerCore> parentContainer;
@end

@protocol IDEContainerItemCore <NSObject>
@property(readonly) id <IDEContainerCore> parentContainer;
@property(copy) NSString<DVTMacroExpansion> *path;
@property(retain) id <IDEGroupCore> parentGroup;
@end

@protocol IDEContainerReloadingDelegate
- (int)responseToExternalChangesToBackingFileForContainer:(id)arg1 fileWasRemoved:(BOOL)arg2;
@end

@protocol IDEContainerUnlockingDelegate
- (void)container:(id)arg1 attemptToUnlockItems:(id)arg2 workspace:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
@end

@protocol IDEDeferredInitialization
+ (BOOL)ide_deferredInitializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEDiagnosticItemDelegate <NSObject>

@optional
- (void)diagnosticItemWasFixed:(id)arg1;
@end

@protocol IDEExecutingOperationTrackable <NSObject>
- (void)registerTracker:(id)arg1;
@end

@protocol IDEFileReferenceCore <IDEContainerItemCore>
@property(copy) DVTFileDataType *assignedDataType;
@end

@protocol IDEFolderCore <IDEContainerCore>
@end

@protocol IDEFrameworkCore <IDEContainerCore>
@end


@protocol IDEIndexDatabaseDelegate

@optional
- (void)database:(id)arg1 didForgetFiles:(id)arg2;
- (id)databaseProvidersAndVersions:(id)arg1;
- (void)databaseDidReportError:(id)arg1;
- (void)database:(id)arg1 didEndImportSession:(id)arg2;
- (void)databaseDidSave:(id)arg1;
- (void)databaseDidIndexHotFile:(id)arg1;
- (void)databaseDidLoad:(id)arg1;
- (void)databaseDidOpen:(id)arg1;
@end

@protocol IDEIndexQueryProvider <NSObject>
+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(readonly, nonatomic) NSDictionary *settings;
@property(readonly, nonatomic) IDEIndexDatabase *database;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(id)arg3 forIndex:(void)arg4;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(id)arg6 forIndex:(void)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2 forIndex:(void)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2 forIndex:(void)arg3;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 forIndex:(id)arg6;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 sortedUsingBlock:(id)arg3 forIndex:(void)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;
@end

@protocol IDEIndexable <NSObject>
- (id)buildSettingsForMainFile:(id)arg1;
- (id)localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 completionBlock:(id)arg2;
- (BOOL)requiresMainThread;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(id)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
- (id)indexableFiles;
- (id)indexName;
- (id)identifier;

@optional
@property(retain, nonatomic) id <IDEIndexable> proxy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearCachedBuildSettings;
- (void)settingsForFilesInWorkspace:(id)arg1 withCompletionBlock:(id)arg2;
@end

@protocol IDEIndexableProvider <NSObject>
- (id)indexables;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end


@protocol IDELegacyBreakpointProvider
- (id)legacyProjectBreakpoints;
@end

@protocol IDEOCUnitTestOutputParserDelegate <NSObject>
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
@end

@protocol IDEProductTypeProvider <NSObject>
+ (id)productTypeForIdentifier:(id)arg1 platform:(id)arg2;
@end

@protocol IDEReadOnlyItem <NSObject>
@property(readonly) NSURL *readOnlyItemURL;
@property(readonly) int readOnlyStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@end

@protocol IDERunOperationWorkerDelegate <NSObject>
- (void)workerDidComplete:(id)arg1 withError:(id)arg2;
@end

@protocol IDERunOperationWorkerTracker <NSObject>
- (void)runningDidFinish:(id)arg1 withError:(id)arg2;
@end

@protocol IDESourceTreeProvider <NSObject>
+ (id)stringByExpandingSourceTreeReferencesInString:(id)arg1;
@end

@protocol IDEStructureEditing
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
@end

@protocol IDETestable <NSObject>
@property(readonly) BOOL isSearchingForTests;
@property(readonly) NSString *name;
@property(readonly) NSArray *tests;
@property(readonly) id <IDETestableProvider> testableProvider;
- (BOOL)canHaveSubtestsForTestWithIdentifier:(id)arg1;
- (id)supertestForTestWithIdentifier:(id)arg1;
- (id)nameForTestWithIdentifier:(id)arg1;
- (id)testForIdentifier:(id)arg1;
- (id)parentBuildableInWorkspace:(id)arg1;
- (id)testHostBuildableInWorkspace:(id)arg1;
- (id)primaryBuildable;
- (void)waitUntilTestSearchIsFinished;
- (void)searchForTestsInWorkspace:(id)arg1;
- (id)newTestRunner;
@end

@protocol IDETestableProvider <NSObject>
@property(readonly) NSString *name;
@property(readonly) NSArray *testables;
- (id)testableForBlueprint:(id)arg1;
@end

@protocol IDEWorkspaceDelegate <IDEContainerDelegate>
- (void)_workspace:(id)arg1 failedToResolveContainerForProjectFile:(id)arg2;

@optional
- (void)_workspace:(id)arg1 didChangeSimpleFilesFocusedTo:(BOOL)arg2;
- (void)_workspace:(id)arg1 didChangeFinishedLoadingTo:(BOOL)arg2;
@end

@protocol IDEWorkspaceWrappingContainer
- (void)becomeWorkspaceWrappingContainer;
@end

@protocol IDEXMLPackageContainerCore <IDEContainerCore>
- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;
@end

@interface DVTDevice (IDEFoundationAdditions)
- (id)analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 commandLineArgs:(id)arg3 environmentVariables:(id)arg4 workingDirectory:(id)arg5 workspaceFilePath:(id)arg6 projectFilePath:(id)arg7 outError:(id *)arg8;
- (void)createInstallWithName:(id)arg1 path:(id)arg2 buildables:(id)arg3 buildParameters:(id)arg4 killProcesses:(id)arg5;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (id)scriptingEnvironment;
- (id)closestRelativeOfTargetArchitecture:(id)arg1 forBuildArchitectures:(id)arg2;
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (void)didBecomeActiveDeviceForRunContext:(id)arg1;
- (id)supportedSDKsForBuildable:(id)arg1 withConfiguration:(id)arg2 workspaceArena:(id)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 withConfiguration:(id)arg2 workspaceArena:(id)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 withConfiguration:(id)arg2;
- (id)displayNameAdditionsWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
- (id)displayNameWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
@end

@interface DVTDevice (IDEOCUnitTestAdditions)
- (id)deviceForRunningUnitTestsWithHost:(id)arg1 error:(id *)arg2;
- (void)modifyTestingEnvironmentVariables:(id)arg1 host:(id)arg2 testBundlePath:(id)arg3;
@property(readonly) DVTFilePath *defaultTestHostPath;
@property(readonly) BOOL supportsInverseTestScopes;
@property(readonly) BOOL supportsMultipleTestScopes;
@end

@interface DVTExtension (DVTExtensionSortAdditions)
- (long long)nameCompare:(id)arg1;
@end

@interface DVTExtension (DVTExtensionTypeIdentificationUtilities)
+ (id)typeIdentifierExtensionForString:(id)arg1;
- (BOOL)isKindOfExtension:(id)arg1;
- (id)closestRelatedExtensionAmongExtensions:(id)arg1;
@end

@interface DVTFilePath (IDESourceControlStatus)
+ (id)containerTypeIdentifiersKeyedByImportantSubpaths;
+ (id)importantSubpathsKeyedByContainerTypeIdentifier;
@property(readonly) NSArray *IDESourceControl_importantSubpaths;
@property(readonly) DVTFilePath *IDESourceControl_containerFilePath;
- (void)removeAssociatedWorkingTree:(id)arg1;
- (void)associateWorkingTree:(id)arg1;
- (id)workingTree;
- (void)removeAssociatedWorkingTreeItem:(id)arg1;
- (void)associateWorkingTreeItem:(id)arg1;
- (id)workingTreeItem_createIfNecessary:(BOOL)arg1;
- (id)workingTreeItem;
- (void)workingTreeItemWithCompletionBlock:(id)arg1;
@end

@interface DVTFilePath (IDESourceControlStatus_Private)
- (id)IDESourceControl_importantFileReferences;
@end

@interface DVTFilePath (IDESourceControlUtilities)
- (BOOL)idescm_isSameFileAsFilePathCaseSensitive:(id)arg1;
@end

@interface DVTLocalComputer (IDEFoundationAdditions)
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (id)supportedSDKsForBuildable:(id)arg1 withConfiguration:(id)arg2 workspaceArena:(id)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 withConfiguration:(id)arg2 workspaceArena:(id)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 withConfiguration:(id)arg2;
- (id)displayNameWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
- (id)_displayNameForArchitecture:(id)arg1;
@end

@interface IDEActivityLogSection : NSObject
{
    IDEActivityLogSectionRecorder *_recorder;
    IDETypeIdentifier *_domainType;
    NSString *_title;
    double _timeStartedRecording;
    double _timeStoppedRecording;
    NSMutableArray *_subsections;
    NSMutableString *_text;
    NSMutableArray *_messages;
    id _representedObject;
    NSString *_subtitle;
    DVTDocumentLocation *_location;
    NSString *_signature;
    NSString *_commandDetailDesc;
    unsigned short _totalErrorCount;
    unsigned short _totalWarningCount;
    unsigned short _totalAnalyzerWarningCount;
    unsigned short _totalAnalyzerResultCount;
    unsigned short _sectionType;
    unsigned short _resultCode;
    BOOL _wasCancelled;
    BOOL _isQuiet;
    BOOL _wasFetchedFromCache;
    BOOL _hasAddedIssueMessage;
    NSString *_uniqueIdentifier;
    NSString *_localizedResultString;
}

+ (id)sectionWithContentsOfFile:(id)arg1 error:(id *)arg2;
+ (id)sectionByDeserializingData:(id)arg1 error:(id *)arg2;
+ (unsigned long long)serializationFormatVersion;
+ (id)UUIDWithURL:(id)arg1;
+ (id)URLWithUUID:(id)arg1;
+ (id)defaultMainLogDomainType;
+ (id)defaultLogSectionDomainType;
+ (Class)logRecorderClass;
+ (void)initialize;
@property(readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy) NSString *localizedResultString; // @synthesize localizedResultString=_localizedResultString;
@property(readonly) IDETypeIdentifier *domainType; // @synthesize domainType=_domainType;
@property BOOL hasAddedIssueMessage; // @synthesize hasAddedIssueMessage=_hasAddedIssueMessage;
@property(copy) NSString *signature; // @synthesize signature=_signature;
@property BOOL wasFetchedFromCache; // @synthesize wasFetchedFromCache=_wasFetchedFromCache;
- (id)indexPathForMessageOrSection:(id)arg1;
- (id)indexPathForMessageOrSection:(id)arg1 messageOrSectionEqualityTest:(id)arg2;
- (id)messageOrSectionAtIndexPath:(id)arg1;
- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)serializedData;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)addObserverUsingBlock:(id)arg1;
- (id)enumerateMessagesUsingBlock:(id)arg1;
- (id)enumerateSubsectionsRecursivelyUsingPreorderBlock:(id)arg1;
- (void)_enumerateSubsectionsRecursivelyUsingPreorderBlock:(id)arg1 returningFilteredSections:(void)arg2;
@property(readonly) NSURL *logSectionURL;
- (id)emittedOutputText;
- (void)logRecorder:(id)arg1 setCommandDetailDescription:(id)arg2;
@property(readonly) NSString *commandDetailDescription;
@property(readonly) DVTDocumentLocation *location;
- (void)logRecorder:(id)arg1 setWasFetchedFromCache:(BOOL)arg2;
- (void)logRecorder:(id)arg1 setIsQuiet:(BOOL)arg2;
@property(readonly) BOOL isQuiet;
- (void)logRecorder:(id)arg1 adjustMessageCountsWithErrorDelta:(long long)arg2 warningCountDelta:(long long)arg3 analyzerWarningDelta:(long long)arg4 analyzerResultDelta:(long long)arg5;
@property(readonly) unsigned long long totalNumberOfAnalyzerResults;
@property(readonly) unsigned long long totalNumberOfAnalyzerWarnings;
@property(readonly) unsigned long long totalNumberOfWarnings;
@property(readonly) unsigned long long totalNumberOfErrors;
- (id)description;
- (void)logRecorder:(id)arg1 didStopRecordingWithInfo:(id)arg2;
- (void)checkMessageCounts;
@property(readonly) IDEActivityLogSectionRecorder *recorder;
@property(readonly) BOOL isRecording;
- (void)logRecorder:(id)arg1 setWasCancelled:(BOOL)arg2;
@property(readonly) long long resultCode;
@property(readonly) BOOL wasCancelled;
- (void)logRecorder:(id)arg1 addMessage:(id)arg2;
@property(readonly) NSArray *messages;
- (void)logRecorder:(id)arg1 appendText:(id)arg2;
- (void)setAdditionalDescription:(id)arg1;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *text;
- (void)logRecorder:(id)arg1 addSubsection:(id)arg2;
@property(readonly) NSArray *subsections;
@property(readonly) double timeStoppedRecording;
@property(readonly) double timeStartedRecording;
@property(readonly) NSString *title;
@property(readonly) id representedObject;
- (void)setRepresentedObject:(id)arg1;
- (void)finalize;
@property(readonly) unsigned long long sectionType;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (id)initCommandInvocationWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3 filePath:(id)arg4;
- (id)initCommandInvocationWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3 location:(id)arg4;
- (id)initMajorGroupWithDomainType:(id)arg1 title:(id)arg2 representedObject:(id)arg3 subtitle:(id)arg4;
- (id)initMainLogWithDomainType:(id)arg1 title:(id)arg2;
- (id)initWithSectionType:(unsigned long long)arg1 domainType:(id)arg2 title:(id)arg3;

@end

@interface IDEActivityLog : IDEActivityLogSection
{
    id _observer;
}

+ (id)activityLogWithContentsOfFile:(id)arg1 error:(id *)arg2;
+ (unsigned long long)serializationFormatVersion;
+ (id)defaultLogSectionDomainType;
+ (Class)logRecorderClass;
+ (id)UUIDWithURL:(id)arg1;
+ (id)URLWithUUID:(id)arg1;
- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@property(readonly) IDEActivityLogSectionRecorder *recorder;
@property(readonly) NSURL *logURL;
- (id)init;
- (id)initWithTitle:(id)arg1;
- (id)initLogWithTitle:(id)arg1;
- (id)initLogWithDomainType:(id)arg1 title:(id)arg2;
- (id)initWrapperLogWithTitle:(id)arg1 subsection:(id)arg2;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDEActivityLogMessage : NSObject <NSCopying>
{
    NSString *_title;
    NSString *_shortTitle;
    double _timeEmitted;
    IDEActivityLogSection *_supersection;
    struct _NSRange _rangeInSectionText;
    IDEActivityLogMessage *_supermessage;
    NSMutableArray *_submessages;
    unsigned long long _severity;
    IDETypeIdentifier *_type;
    DVTDocumentLocation *_location;
    NSString *_categoryIdent;
    NSArray *_secondaryLocations;
    NSString *_additionalDescription;
}

+ (id)messageWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4 lineNumber:(unsigned long long)arg5;
+ (id)messageWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;
@property(readonly) IDETypeIdentifier *type; // @synthesize type=_type;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@property(readonly) unsigned long long totalNumberOfAnalyzerResults;
@property(readonly) unsigned long long totalNumberOfAnalyzerWarnings;
@property(readonly) unsigned long long totalNumberOfWarnings;
@property(readonly) unsigned long long totalNumberOfErrors;
- (void)setSecondaryLocations:(id)arg1;
@property(readonly) NSArray *secondaryLocations;
@property(readonly) NSString *additionalDescription;
- (void)setCategoryIdentifier:(id)arg1;
@property(readonly) NSString *categoryIdentifier;
@property(readonly) DVTDocumentLocation *location;
- (void)setShortTitle:(id)arg1;
@property(readonly) NSString *shortTitle;
- (void)logRecorder:(id)arg1 addSectionTextRange:(struct _NSRange)arg2;
- (void)logRecorder:(id)arg1 setSectionTextRange:(struct _NSRange)arg2;
@property(readonly) NSString *logMessageString;
- (void)logRecorder:(id)arg1 addSubmessage:(id)arg2;
- (void)addSubmessage:(id)arg1;
@property(readonly) NSArray *submessages;
- (void)_setSupermessage:(id)arg1;
@property(readonly) IDEActivityLogMessage *supermessage;
- (void)setSectionTextRange:(struct _NSRange)arg1;
@property(readonly) struct _NSRange rangeInSectionText;
- (void)_setSupersection:(id)arg1;
@property(readonly) IDEActivityLogSection *supersection;
- (id)description;
@property(readonly) double timeEmitted;
@property(readonly) NSString *title;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 filePath:(id)arg4 lineNumber:(unsigned long long)arg5;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (id)initWithType:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3;

@end

@interface IDEActivityLogActionMessage : IDEActivityLogMessage
{
    NSString *_actionIdentifier;
}

@property(copy) NSString *actionIdentifier; // @synthesize actionIdentifier=_actionIdentifier;
- (id)initWithAction:(id)arg1 severity:(unsigned long long)arg2 title:(id)arg3 location:(id)arg4;

@end

@interface IDEActivityLogChangeEvent : NSObject
{
    IDEActivityLogSection *_section;
}

+ (id)stopRecordingEventWithSection:(id)arg1 supersections:(id)arg2;
+ (id)setValueEventWithSection:(id)arg1 key:(id)arg2 value:(id)arg3;
+ (id)appendTextEventWithSection:(id)arg1 textString:(id)arg2;
+ (id)addSubmessageEventWithSection:(id)arg1 supermessage:(id)arg2 submessage:(id)arg3;
+ (id)addSubsectionEventWithSection:(id)arg1 subsection:(id)arg2;
@property(readonly) IDEActivityLogSection *section; // @synthesize section=_section;
- (id)description;
- (id)addedChild;
- (id)changedParent;
- (id)initWithSection:(id)arg1;

@end

@interface IDEActivityLogAddSubmessageChangeEvent : IDEActivityLogChangeEvent
{
    IDEActivityLogMessage *_supermessage;
    IDEActivityLogMessage *_submessage;
}

@property(readonly) IDEActivityLogMessage *submessage; // @synthesize submessage=_submessage;
@property(readonly) IDEActivityLogMessage *supermessage; // @synthesize supermessage=_supermessage;
- (id)description;
- (id)addedChild;
- (id)changedParent;
- (id)initWithSection:(id)arg1 supermessage:(id)arg2 submessage:(id)arg3;
- (id)initWithSection:(id)arg1 submessage:(id)arg2;

@end

@interface IDEActivityLogAddSubsectionChangeEvent : IDEActivityLogChangeEvent
{
    IDEActivityLogSection *_subsection;
}

@property(readonly) IDEActivityLogSection *subsection; // @synthesize subsection=_subsection;
- (id)description;
- (id)addedChild;
- (id)initWithSection:(id)arg1 subsection:(id)arg2;

@end

@interface IDEActivityLogAnalyzerControlFlowStepEdge : NSObject
{
    DVTTextDocumentLocation *_startLocation;
    DVTTextDocumentLocation *_endLocation;
}

- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)description;
- (id)endLocation;
- (id)startLocation;
- (id)initWithStartLocation:(id)arg1 endLocation:(id)arg2;

@end

@interface IDEActivityLogAnalyzerStepMessage : IDEActivityLogMessage
{
}

- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerStepMessage;

@end

@interface IDEActivityLogAnalyzerControlFlowStepMessage : IDEActivityLogAnalyzerStepMessage
{
    DVTTextDocumentLocation *_endLocation;
    NSArray *_edges;
}

- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (void)setEdges:(id)arg1;
- (id)edges;
- (id)endLocation;
- (id)startLocation;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerControlFlowStepMessage;
- (id)initWithTitle:(id)arg1 startLocation:(id)arg2 endLocation:(id)arg3;

@end

@interface IDEActivityLogAnalyzerEventStepMessage : IDEActivityLogAnalyzerStepMessage
{
    NSString *_description;
}

- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)locations;
- (void)setDescription:(id)arg1;
- (id)description;
- (unsigned long long)totalNumberOfWarnings;

@end

@interface IDEActivityLogAnalyzerResultMessage : IDEActivityLogMessage
{
    NSString *_resultType;
}

+ (id)analyzerMessageType;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)resultCategory;
- (id)resultType;
- (void)setResultType:(id)arg1;
- (unsigned long long)totalNumberOfAnalyzerResults;
- (unsigned long long)totalNumberOfWarnings;

@end

@interface IDEActivityLogAnalyzerWarningMessage : IDEActivityLogMessage
{
}

+ (id)analyzerWarningType;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (unsigned long long)totalNumberOfAnalyzerWarnings;
- (unsigned long long)totalNumberOfWarnings;
- (BOOL)isAnalyzerWarningMessage;

@end

@interface IDEActivityLogAppendTextChangeEvent : IDEActivityLogChangeEvent
{
    NSString *_textString;
}

@property(readonly) NSString *textString; // @synthesize textString=_textString;
- (id)description;
- (id)initWithSection:(id)arg1 textString:(id)arg2;

@end

@interface IDEActivityLogContextInfoMessage : IDEActivityLogMessage
{
}

@end

@interface IDEActivityLogHeaderInclusionMessage : IDEActivityLogMessage
{
}

@end

@interface IDEActivityLogRecord : NSObject
{
}

+ (id)cacheLog:(id)arg1;
+ (void)cacheLogRecord:(id)arg1;
+ (id)cachedLogRecordWithURL:(id)arg1;
- (long long)compareUsingTimeStartedRecording:(id)arg1;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(id)arg1;
@property(readonly) BOOL isRemoved;
@property(readonly) BOOL isRecording;
@property(readonly) NSString *signature;
@property(readonly) DVTFileDataType *documentType;
@property(readonly, nonatomic) double timeStoppedRecording;
@property(readonly) double timeStartedRecording;
@property(readonly) NSString *title;
@property(readonly) IDETypeIdentifier *domainType;
@property(readonly) NSString *uniqueIdentifier;
@property(readonly) NSURL *logURL;

@end

@interface IDEActivityLogSectionRecorder : NSObject
{
    NSMutableArray *_parentRecorders;
    NSMutableArray *_childRecorders;
    IDEActivityLogSection *_section;
    NSMutableArray *_observations;
    NSMutableArray *_changesToPost;
    BOOL _hasScheduledChangePosting;
    NSMapTable *_rememberedMessagesByKey;
    struct _NSRange _mostRecentTextRange;
    id _completionBlock;
    DVTStackBacktrace *_initBacktrace;
    DVTStackBacktrace *_stopBacktrace;
    NSMapTable *_severityToLimitTable;
    NSMapTable *_severityToCountTable;
    int _lock;
    BOOL _hasAddedErrorMessages;
    BOOL _hasRequestedStop;
}

@property BOOL hasAddedAnyErrorMessages; // @synthesize hasAddedAnyErrorMessages=_hasAddedErrorMessages;
- (id)addObserverUsingBlock:(id)arg1;
- (void)setCommandDetailDescription:(id)arg1;
- (void)addContextInfoMessageWithTitle:(id)arg1;
- (void)addAnalyzerResultStepMessageWithTitle:(id)arg1;
- (void)addAnalyzerResultMessageWithTitle:(id)arg1;
- (void)addNoticeMessageWithTitle:(id)arg1;
- (void)addWarningMessageWithTitle:(id)arg1;
- (void)addErrorMessageWithTitle:(id)arg1;
- (void)noteDescendantLogSectionDidClose:(id)arg1 inSupersection:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAppendText:(id)arg2;
- (void)noteDescendantLogSection:(id)arg1 didAddSubsection:(id)arg2;
- (void)stopRecordingWithInfo:(id)arg1;
- (void)_stopRecordingWithInfo:(id)arg1 sync:(BOOL)arg2;
- (void)childRecorderDidStopRecording:(id)arg1;
- (void)addSubmessage:(id)arg1 toMessage:(id)arg2;
- (void)addMessage:(id)arg1 ignoreMessageLimit:(BOOL)arg2;
- (void)addMessage:(id)arg1;
- (struct _NSRange)mostRecentlyAppendedTextRange;
- (struct _NSRange)appendTextUTF8Bytes:(const char *)arg1 length:(unsigned long long)arg2;
- (struct _NSRange)appendTextFormat:(id)arg1;
- (struct _NSRange)appendText:(id)arg1;
- (void)addSubsection:(id)arg1;
- (void)_addSubsection:(id)arg1 sync:(BOOL)arg2;
- (BOOL)_attachToParentRecorderIfStillRecording:(id)arg1;
- (BOOL)hasReachedAllMessageLimits;
- (BOOL)hasReachedMessageLimitForSeverity:(unsigned long long)arg1;
- (void)setMessageLimit:(unsigned long long)arg1 forSeverity:(unsigned long long)arg2;
- (void)setLocalizedResultString:(id)arg1;
- (void)setWasFetchedFromCache:(BOOL)arg1;
- (void)setIsQuiet:(BOOL)arg1;
- (id)addUnitTestSectionWithTitle:(id)arg1;
- (id)addCommandSectionWithTitle:(id)arg1 detailDescription:(id)arg2;
- (id)addCommandSectionWithDomainType:(id)arg1 title:(id)arg2 detailDescription:(id)arg3;
- (void)handleChangeEvent:(id)arg1;
- (void)setRememberedMessage:(id)arg1 forKey:(id)arg2;
- (id)rememberedMessageForKey:(id)arg1;
- (void)addCompletionBlock:(id)arg1;
- (id)section;
- (id)initWithLogSection:(id)arg1;

@end

@interface IDEActivityLogRecorder : IDEActivityLogSectionRecorder
{
}

- (void)setLocalizedResultString:(id)arg1;
- (id)section;
- (id)initWithLogSection:(id)arg1;

@end

// Not exported
@interface IDEActivityLogSectionObservation : NSObject <DVTObservingToken>
{
    id _block;
}

+ (id)sharedNullObservation;
- (id)description;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)block;
- (id)init;
- (id)initWithBlock:(id)arg1;

@end

@interface IDEActivityLogSetKeyValueChangeEvent : IDEActivityLogChangeEvent
{
    NSString *_key;
    NSValue *_value;
}

@property(readonly) NSValue *value; // @synthesize value=_value;
@property(readonly) NSString *key; // @synthesize key=_key;
- (id)description;
- (id)initWithSection:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface IDEActivityLogStopRecordingChangeEvent : IDEActivityLogChangeEvent
{
    NSSet *_supersections;
}

@property(readonly) NSSet *supersections; // @synthesize supersections=_supersections;
- (id)description;
- (id)initWithSection:(id)arg1 supersections:(id)arg2;

@end

@interface IDEActivityLogUnitTestSection : IDEActivityLogSection
{
    NSString *_testsPassedString;
    NSString *_durationString;
    NSString *_summaryString;
    NSString *_testName;
    NSString *_performanceTestOutputString;
}

+ (Class)logRecorderClass;
+ (id)defaultLogSectionDomainType;
@property(copy) NSString *performanceTestOutputString; // @synthesize performanceTestOutputString=_performanceTestOutputString;
@property(copy) NSString *testName; // @synthesize testName=_testName;
@property(copy) NSString *summaryString; // @synthesize summaryString=_summaryString;
@property(copy) NSString *durationString; // @synthesize durationString=_durationString;
@property(copy) NSString *testsPassedString; // @synthesize testsPassedString=_testsPassedString;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)initUnitTestWithTitle:(id)arg1;

@end

@interface IDEActivityLogUnitTestSectionRecorder : IDEActivityLogSectionRecorder
{
    DVTRegularExpression *_endMarker;
    BOOL _canFinish;
    unsigned long long _newEndMarker;
}

@property unsigned long long newEndMarker; // @synthesize newEndMarker=_newEndMarker;
@property BOOL canFinish; // @synthesize canFinish=_canFinish;
@property(copy) DVTRegularExpression *endMarker; // @synthesize endMarker=_endMarker;
- (id)section;
- (id)initWithLogSection:(id)arg1;

@end

@interface IDEBreakpoint : NSObject <DVTXMLUnarchiving, NSCopying>
{
    NSString *_displayName;
    IDEBreakpointBucket *_bucket;
    NSMutableSet *_matchedModuleNames;
    BOOL _shouldBeEnabled;
    int _debuggerState;
    unsigned long long _ignoreCount;
    unsigned long long _hitCount;
    NSString *_condition;
    BOOL _continueAfterRunningActions;
    NSMutableArray *_actions;
    NSMutableArray *_locations;
}

+ (id)propertiesAffectingPersistenceState;
+ (void)initialize;
@property unsigned long long hitCount; // @synthesize hitCount=_hitCount;
@property BOOL continueAfterRunningActions; // @synthesize continueAfterRunningActions=_continueAfterRunningActions;
@property(copy) NSString *condition; // @synthesize condition=_condition;
@property unsigned long long ignoreCount; // @synthesize ignoreCount=_ignoreCount;
@property int debuggerState; // @synthesize debuggerState=_debuggerState;
@property(nonatomic) BOOL shouldBeEnabled; // @synthesize shouldBeEnabled=_shouldBeEnabled;
@property(retain) IDEBreakpointBucket *bucket; // @synthesize bucket=_bucket;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void)addLocations:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (id)_actionArchivingProxiesArray;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)setContinueAfterRunningActionsFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldBeEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (BOOL)_booleanValueFromUTF8String:(char *)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)_listenToActionsPropertyChanges:(id)arg1;
- (void)_handleActionsAdded:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)resetActionExpressionResults;
- (void)locationWasRemoved:(id)arg1;
- (void)_locationWasResolved:(id)arg1 currentLocations:(id)arg2;
- (void)locationWasResolved:(id)arg1;
- (void)setInitialResolvedLocations:(id)arg1;
- (BOOL)locationsProvideAdditionalInformation;
- (void)toggleShouldBeEnabled;
- (void)_notifyPersistencyStateChanged;
- (void)primitiveSetBucket:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)_dvt_commonInit;

// Remaining properties
@property(copy) NSArray *actions; // @dynamic actions;
@property(readonly) NSArray *locations; // @dynamic locations;
@property(copy) NSSet *matchedModuleNames; // @dynamic matchedModuleNames;
@property(readonly) NSMutableArray *mutableActions; // @dynamic mutableActions;
@property(readonly) NSMutableArray *mutableLocations; // @dynamic mutableLocations;
@property(readonly) NSMutableSet *mutableMatchedModuleNames; // @dynamic mutableMatchedModuleNames;

@end

@interface IDESymbolicBreakpoint : IDEBreakpoint
{
    NSString *_symbolName;
    NSString *_moduleName;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *moduleName; // @synthesize moduleName=_moduleName;
@property(copy) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (BOOL)locationsProvideAdditionalInformation;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)initWithSymbolName:(id)arg1 moduleName:(id)arg2;

@end

@interface IDEAddressBreakpoint : IDESymbolicBreakpoint
{
    NSString *_hexAddress;
}

+ (id)_createSymbolNameFromAddress:(id)arg1;
- (id)displayName;
@property(copy) NSString *hexAddress;
- (id)initWithAddress:(id)arg1;

@end

@interface IDEAlert : NSObject
{
    NSString *_identifier;
    double _executionPriority;
    BOOL _enabled;
}

+ (id)createAlertForAlertIdentifier:(id)arg1 propertyList:(id)arg2;
+ (id)createAlertForAlertIdentifier:(id)arg1;
+ (BOOL)canAlertWithIdentifierRunOnCurrentOS:(id)arg1;
+ (id)alertExtensionForAlertIdentifier:(id)arg1;
+ (id)alertIdentifiersForGroup:(id)arg1;
+ (id)alertGroups;
+ (id)alertIdentifiers;
+ (id)alertExtensions;
+ (void)_cacheAlerts;
+ (void)_registerAlert:(id)arg1;
+ (void)initialize;
@property double executionPriority; // @synthesize executionPriority=_executionPriority;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (int)alertPropertyListVersion;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (long long)compare:(id)arg1;
- (id)description;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (void)prepareToRunForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3;
- (BOOL)canRunOnCurrentOS;
- (id)title;
- (id)group;

@end

@interface IDEAlertEvent : NSObject
{
    NSString *_identifier;
    NSString *_title;
    NSString *_titleSortKey;
    NSString *_group;
    NSString *_groupSortKey;
    NSString *_iconName;
    NSMutableDictionary *_alerts;
    NSMutableDictionary *_observationTokensByAlert;
}

+ (id)alertEventsForGroup:(id)arg1;
+ (id)alertEventGroups;
+ (id)alertEvents;
+ (id)alertEventForIdentifier:(id)arg1;
+ (void)_cacheAlertEvents;
+ (void)_registerAlertEventExtension:(id)arg1;
@property(retain) NSString *iconName; // @synthesize iconName=_iconName;
@property(readonly) NSDictionary *alerts; // @synthesize alerts=_alerts;
@property(retain, nonatomic) NSString *groupSortKey; // @synthesize groupSortKey=_groupSortKey;
@property(retain) NSString *group; // @synthesize group=_group;
@property(retain, nonatomic) NSString *titleSortKey; // @synthesize titleSortKey=_titleSortKey;
@property(retain) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void)ide_setIdentifier:(id)arg1;
- (void)saveToUserDefaults;
- (id)propertyList;
- (id)propertyListForVersion:(int)arg1;
- (id)alertDefaults;
- (id)alertDefaultsKey;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)runInWorkspace:(id)arg1 context:(id)arg2;
- (void)runInWorkspace:(id)arg1 context:(id)arg2 completionBlock:(id)arg3;
- (id)ide_initializeAlertContext:(id)arg1 forWorkspace:(id)arg2;
- (BOOL)hasEnabledAlerts;
- (void)removeAlert:(id)arg1;
- (void)addAlert:(id)arg1;
- (id)description;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 group:(id)arg3;
- (id)init;
- (void)ide_initializeAlertsFromDefaults:(id)arg1;

@end

@interface IDEAnalysisTool : NSObject
{
    int _type;
    NSString *_identifier;
    NSString *_displayName;
}

@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) int type; // @synthesize type=_type;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)displayNameCompare:(id)arg1;
- (id)initWithType:(int)arg1 identifer:(id)arg2 displayName:(id)arg3;

@end

@interface IDESchemeAction : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _hasAwoken;
    IDEScheme *_runContext;
    NSMutableArray *_prePhaseExecutionActions;
    NSMutableArray *_postPhaseExecutionActions;
    IDESchemeBuildableReference *_buildableReferenceToUseForMacroExpansion;
}

+ (BOOL)shouldAllowCustomPhaseActions;
+ (void)initialize;
@property(retain) IDESchemeBuildableReference *buildableReferenceToUseForMacroExpansion; // @synthesize buildableReferenceToUseForMacroExpansion=_buildableReferenceToUseForMacroExpansion;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) IDEScheme *runContext; // @synthesize runContext=_runContext;
- (id)updateDYLDSettingInEnvironment:(id)arg1 withBuildProducts:(id)arg2 runDestination:(id)arg3;
- (void)addPostActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPreActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
@property(readonly) NSArray *_postPhaseExecutionActionsProxies;
@property(readonly) NSArray *_prePhaseExecutionActionsProxies;
@property(readonly) BOOL hasAwoken;
- (void)replacePostPhaseExecutionActionsAtIndexes:(id)arg1 withPostPhaseExecutionActions:(id)arg2;
- (void)replaceObjectInPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removePostPhaseExecutionActionsAtIndexes:(id)arg1;
- (void)insertPostPhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inPostPhaseExecutionActionsAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *postPhaseExecutionActions; // @dynamic postPhaseExecutionActions;
- (void)replacePrePhaseExecutionActionsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectInPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removePrePhaseExecutionActionsAtIndexes:(id)arg1;
- (void)insertPrePhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inPrePhaseExecutionActionsAtIndex:(unsigned long long)arg2;
@property(copy) NSArray *prePhaseExecutionActions; // @dynamic prePhaseExecutionActions;
- (void)invalidate;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (id)expandMacrosInString:(id)arg1 forSchemeCommand:(int)arg2;
- (id)setUpActionDependenciesForCorePhaseOperation:(id)arg1 shouldRunPostActionsBlock:(id)arg2 prePhaseEnvironmentPopulationBlock:(void)arg3 postPhaseEnvironmentPopulationBlock:(id)arg4 runDestination:(void)arg5 schemeCommand:(id)arg6 error:(void)arg7;
- (void)setRunContext:(id)arg1;
@property(readonly) BOOL doesNonActionWork;
@property(readonly) NSString *subtitle;
@property(readonly) NSString *name;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutablePostPhaseExecutionActions; // @dynamic mutablePostPhaseExecutionActions;
@property(readonly) NSMutableArray *mutablePrePhaseExecutionActions; // @dynamic mutablePrePhaseExecutionActions;

@end

@interface IDEAnalyzeSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSString *_buildConfiguration;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)shouldAllowCustomPhaseActions;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)buildOperationForExecutionEnvironment:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(int)arg4 filePath:(id)arg5 buildConfiguration:(id)arg6 buildLog:(id)arg7 overridingProperties:(id)arg8 activeRunDestination:(id)arg9 activeArchitecture:(id)arg10 restorePersistedBuildResults:(BOOL)arg11 error:(id *)arg12;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)mutablePostPhaseExecutionActions;
- (id)postPhaseExecutionActions;
- (id)mutablePrePhaseExecutionActions;
- (id)prePhaseExecutionActions;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

@end

@interface IDEAppClientTracker : NSObject <IDEClientTracking>
{
    IDEConcreteClientTracker *_clientTracker;
}

+ (id)sharedAppClientTracker;
- (void)cancelTrackedClients;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(id)arg3;
- (id)init;

@end

@interface IDEBreakpointAction : NSObject <DVTXMLUnarchiving>
{
    NSString *_displayName;
    NSArray *_expressions;
}

+ (id)_expressionsInString:(id)arg1;
+ (id)propertiesAffectingPersistenceState;
+ (id)extensionIDForAction:(id)arg1;
+ (id)extensions;
+ (id)_replace:(id)arg1 with:(id)arg2 inString:(id)arg3;
+ (id)_expandMacrosInString:(id)arg1 usingBreakpoint:(id)arg2;
+ (void)initialize;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)_expandExpressionsInString:(id)arg1;
- (void)extractAndSetExpressionsFromString:(id)arg1;
- (id)expandExpressionsAndMacrosInString:(id)arg1 usingBreakpoint:(id)arg2;
- (BOOL)haveExpressionsBeenEvaluated;
- (void)resetExpressionResults;
- (void)performActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (void)_breakpointActionCommonInit;
- (id)init;

// Remaining properties
@property(copy) NSArray *expressions; // @dynamic expressions;
@property(readonly) NSMutableArray *mutableExpressions; // @dynamic mutableExpressions;

@end

@interface IDEAppleScriptBreakpointAction : IDEBreakpointAction
{
    NSString *_script;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *script; // @synthesize script=_script;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)performActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (void)_handleScriptChanged;
- (void)_appleScriptActionCommonInit;
- (id)init;

@end

@interface IDEArchive : NSObject
{
    DVTFilePath *_path;
    NSMutableDictionary *_infoDictionary;
    IDEArchivedApplication *_application;
    BOOL _savePending;
}

+ (long long)_computedApproximateAppStoreFileSizeForArchive:(id)arg1 platform:(id)arg2;
+ (id)_availableArchivePathInDirectory:(id)arg1 withName:(id)arg2 creationDate:(id)arg3 usingFileManager:(id)arg4;
+ (id)_archivePlistPathForArchivePath:(id)arg1;
+ (BOOL)_copyProductDefinitionPlistFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (BOOL)_copydSYMsFromDirectory:(id)arg1 toArchiveWithPath:(id)arg2 usingFileManager:(id)arg3 error:(id *)arg4;
+ (id)_createArchiveWithName:(id)arg1 usingFileManager:(id)arg2 error:(id *)arg3;
+ (id)_folderPathForArchiveWithDate:(id)arg1;
+ (id)createArchiveWithName:(id)arg1 schemeName:(id)arg2 platform:(id)arg3 products:(id)arg4 auxiliaryFiles:(id)arg5 usingFileManager:(id)arg6 error:(id *)arg7;
+ (id)installArchiveWithArchivePath:(id)arg1 usingFileManager:(id)arg2;
+ (id)archiveWithArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingProductDefinitionPlistPath;
+ (id)_productDefinitionPlistPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingDSYMDirectoryPath;
+ (id)_dSYMDirectoryPathForArchivePath:(id)arg1;
+ (id)keyPathsForValuesAffectingProductsDirectoryPath;
+ (id)_productsDirectoryPathForArchivePath:(id)arg1;
@property(readonly) IDEArchivedApplication *application; // @synthesize application=_application;
@property(retain) DVTFilePath *path; // @synthesize path=_path;
- (void)_saveArchive:(id)arg1;
- (void)markDirty;
- (id)objectForEnterpriseDistributionKey:(id)arg1;
- (void)setObject:(id)arg1 forEnterpriseDistributionKey:(id)arg2;
@property(copy) NSDictionary *enterpriseDistributionManifest;
@property(copy) NSString *statusString;
@property(copy) NSString *comment;
@property long long estimatedAppStoreFileSize;
@property(readonly) NSDate *creationDate;
@property(readonly) unsigned long long version;
@property(readonly) NSString *schemeName;
@property(copy) NSString *name;
@property(readonly) DVTFilePath *productDefinitionPlistPath;
@property(readonly) DVTFilePath *dSYMDirectoryPath;
@property(readonly) DVTFilePath *productsDirectoryPath;
@property(readonly) NSMutableDictionary *infoDictionary;
- (id)_initWithPath:(id)arg1 infoDictionary:(id)arg2;

@end

@interface IDEArchiveIdentityFilter : NSObject
{
    NSString *_identifier;
}

+ (id)filterWithIdentifier:(id)arg1;
+ (id)filterWithExtension:(id)arg1;
+ (id)allFilters;
+ (id)_createFilterFromExtension:(id)arg1;
+ (id)_identifiersToFiltersMapping;
+ (id)_extensionLock;
+ (id)_extensionPoint;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSSet *allowedCertificateTypes;
- (id)identityComparator;
- (_Bool)shouldIncludeIdentity:(id)arg1;
- (id)initWithExtension:(id)arg1;

@end

@interface IDEArchiveManager : NSObject
{
    DVTDispatchLock *_archiveManagerLock;
    NSFileManager *_fileManager;
    NSMutableArray *_archives;
    _Bool _hasScanned;
}

+ (void)initialize;
+ (id)sharedArchiveManager;
- (BOOL)installArchiveAtPath:(id)arg1 revealInstalledArchive:(BOOL)arg2;
- (id)_installedArchiveAtPath:(id)arg1;
- (void)deleteArchives:(id)arg1;
- (void)deleteArchive:(id)arg1;
@property(copy) NSArray *archives; // @dynamic archives;
- (void)_populateArchivesIfNeeded;
- (void)_refreshArchives;
- (id)_allPotentialArchivePathsWithin:(id)arg1;
- (void)_checkPathForArchive:(id)arg1 andAddToArray:(id)arg2;
- (BOOL)_couldBeArchivePath:(id)arg1;
- (void)_revealArchiveAtPath:(id)arg1;
- (void)archiveInstalledProductsDirectoryWithPath:(id)arg1 auxiliaryFilesDirectoryPath:(id)arg2 schemeName:(id)arg3 archiveName:(id)arg4 platform:(id)arg5 revealNewArchive:(BOOL)arg6 completionBlock:(id)arg7;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableArchives; // @dynamic mutableArchives;

@end

@interface IDEArchivePackager : NSObject
{
    NSString *_identifier;
    NSString *_displayName;
}

+ (id)packagerForIdentifier:(id)arg1;
+ (id)packagerForPlatform:(id)arg1;
+ (id)allPackagers;
+ (id)_createPackagerFromExtension:(id)arg1;
+ (id)_identifiersToPackagersMapping;
+ (id)_platformsToPackagersMapping;
+ (id)_extensionLock;
+ (id)_extensionPoint;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (id)packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 andError:(id *)arg4;
- (id)signingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 andError:(id *)arg3;
- (id)identitiesForBundleIdentifier:(id)arg1 andIdentityFilter:(id)arg2;
- (id)refreshIdentity;
- (id)dontSignIdentity;
@property(readonly) _Bool supportsInstallerSigning;
@property(readonly) _Bool supportsCodeSigning;

@end

@interface IDEArchivePathsSnapshot : NSObject <NSCopying>
{
    DVTFilePath *_archivePath;
    DVTFilePath *_archiveProductsPath;
    DVTFilePath *_archiveDSYMsPath;
}

@property(retain) DVTFilePath *archiveDSYMsPath; // @synthesize archiveDSYMsPath=_archiveDSYMsPath;
@property(retain) DVTFilePath *archiveProductsPath; // @synthesize archiveProductsPath=_archiveProductsPath;
@property(retain) DVTFilePath *archivePath; // @synthesize archivePath=_archivePath;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEArchiveProcessingOperation : DVTOperationGroup
{
    DVTFilePath *outputPath;
}

@property(retain) DVTFilePath *outputPath; // @synthesize outputPath;

@end

@interface IDEArchiveSchemeAction : IDESchemeAction
{
    BOOL _includeSnapshotInArchive;
    BOOL _revealArchiveInOrganizer;
    NSString *_customArchiveName;
    NSString *_buildConfiguration;
    NSString *_packagerIdentifier;
}

+ (id)keyPathsForValuesAffectingDefaultArchiveName;
+ (id)keyPathsForValuesAffectingSubtitle;
@property(copy) NSString *packagerIdentifier; // @synthesize packagerIdentifier=_packagerIdentifier;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(copy) NSString *customArchiveName; // @synthesize customArchiveName=_customArchiveName;
@property BOOL revealArchiveInOrganizer; // @synthesize revealArchiveInOrganizer=_revealArchiveInOrganizer;
@property BOOL includeSnapshotInArchive; // @synthesize includeSnapshotInArchive=_includeSnapshotInArchive;
- (void)addArchivingStrategy:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setRevealArchiveInOrganizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIncludeSnapshotInArchiveFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPackagerIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomArchiveNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)archivingOperationGroupForExecutionEnvironment:(id)arg1 error:(id *)arg2;
@property(readonly) NSString *defaultArchiveName;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)init;

@end

@interface IDEArchivedApplication : NSObject
{
    IDEArchive *_archive;
}

+ (id)keyPathsForValuesAffectingIconPath;
+ (id)keyPathsForValuesAffectingApplicationPath;
+ (id)_subBundlesInPath:(id)arg1;
+ (id)_codesigningIdentityFromApplicationPath:(id)arg1;
+ (id)_archivedApplicationIconPathsForArchive:(id)arg1;
+ (id)_archivedApplicationShortBundleVersionStringForArchive:(id)arg1;
+ (id)_archivedApplicationPathForArchive:(id)arg1;
+ (id)_archivedApplicationSigningIdentityForArchive:(id)arg1;
+ (id)_archivedApplicationBundleIdentifierForArchive:(id)arg1;
+ (id)_archivedApplicationInfoDictForArchive:(id)arg1;
+ (BOOL)validArchivedApplicationInfoInArchive:(id)arg1;
+ (id)archivedApplicationInfoForApplicationInArchiveProductsDirectory:(id)arg1;
+ (id)_soleArchivedApplicationRelativePathInDirectory:(id)arg1;
@property IDEArchive *archive; // @synthesize archive=_archive;
@property(readonly) NSArray *iconPaths;
@property(readonly) DVTFilePath *applicationPath;
@property(readonly) NSString *shortBundleVersionString;
@property(readonly) NSString *signingIdentity;
@property(readonly) NSString *bundleIdentifier;
@property(readonly) NSArray *subBundles;
- (id)initWithArchive:(id)arg1;

@end

@interface IDEArchivingOperation : DVTOperation
{
    NSString *_archiveName;
    NSString *_schemeName;
    DVTPlatform *_platform;
    DVTFilePath *_archiveBuildFolder;
    DVTFilePath *_dstrootPath;
    DVTFilePath *_symrootPath;
    DVTFilePath *_objrootPath;
    DVTFilePath *_sharedPrecompsPath;
    IDEArchivePathsSnapshot *_archiveSnapshot;
    BOOL _revealCreatedArchive;
}

@property(readonly) IDEArchivePathsSnapshot *archiveSnapshot; // @synthesize archiveSnapshot=_archiveSnapshot;
- (void)main;
- (id)preperatoryOperationForArchiveBuild;
- (id)overridingBuildSettingsForArchiveBuild;
- (id)initWithArchiveName:(id)arg1 schemeName:(id)arg2 workspaceArena:(id)arg3 platform:(id)arg4 revealCreatedArchive:(BOOL)arg5;

@end

@interface IDEArchivingOperationGroup : DVTOperationGroup
{
    IDEArchivingOperation *_archivingOperation;
    IDEBuildOperationGroup *_buildForArchiveOperation;
}

+ (id)operationGroupWithSuboperations:(id)arg1;
+ (id)operationGroupWithArchivingOperation:(id)arg1 otherOperations:(id)arg2;
@property(retain) IDEBuildOperationGroup *buildForArchiveOperation; // @synthesize buildForArchiveOperation=_buildForArchiveOperation;
@property(readonly) IDEArchivingOperation *archivingOperation; // @synthesize archivingOperation=_archivingOperation;

@end

@interface IDEBatchFindHistoryItem : NSObject
{
    NSString *_findString;
    NSString *_description;
    id _payload;
    NSString *_archivePath;
}

@property(retain) id payload; // @synthesize payload=_payload;
@property(readonly) NSString *description; // @synthesize description=_description;
@property(readonly) NSString *findString; // @synthesize findString=_findString;
- (void)_unarchivePayloadFromPath:(id)arg1;
- (void)archivePayloadToPath:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithFindString:(id)arg1 description:(id)arg2 payload:(id)arg3;

@end

@interface IDEBatchFindManager : NSObject <DVTInvalidation>
{
    NSMutableArray *_history;
    unsigned long long _maxHistoryCount;
    DVTMapTable *_findContexts;
    NSString *_archivePath;
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) NSArray *findHistory; // @synthesize findHistory=_history;
@property(nonatomic) unsigned long long maxHistoryCount; // @synthesize maxHistoryCount=_maxHistoryCount;
- (id)batchFindContextForWorkspaceTabController:(id)arg1;
- (void)setBatchFindContext:(id)arg1 forWorkspaceTabController:(id)arg2;
- (id)historyItemForDescription:(id)arg1;
- (void)clearHistory;
- (void)addHistoryItem:(id)arg1;
- (void)_removeExtraHistory;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)init;

@end

@interface IDEBreakpointActionArchivingProxy : NSObject
{
    NSString *_actionExtensionID;
    IDEBreakpointAction *_proxiedAction;
    BOOL _wasSuccessfullyUnarchived;
}

+ (id)actionProxyForAction:(id)arg1;
@property(readonly) BOOL wasSuccessfullyUnarchived; // @synthesize wasSuccessfullyUnarchived=_wasSuccessfullyUnarchived;
@property(readonly) IDEBreakpointAction *proxiedAction; // @synthesize proxiedAction=_proxiedAction;
@property(readonly) NSString *actionExtensionID; // @synthesize actionExtensionID=_actionExtensionID;
- (void)addActionContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setActionTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;

@end

@interface IDEBreakpointBucket : NSObject <DVTXMLUnarchiving>
{
    int _type;
    IDEContainer<DVTCustomDataStoring> *_archivingContainer;
    DVTCustomDataSpecifier *_archivingDataSpecifier;
    NSString *_archivingContainerItemBaseStandardizedPathString;
    NSString *_displayName;
    NSMutableArray *_breakpoints;
    NSMutableArray *_fileBreakpoints;
    NSMutableArray *_symbolicBreakpoints;
    NSMutableArray *_exceptionBreakpoints;
    BOOL _currentlyDecoding;
    BOOL _xcode3MigrationDidntFindPersistedBreakpointsOnCreation;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingShared;
+ (id)userGlobalBucket:(id *)arg1;
+ (void)initialize;
@property(readonly) BOOL xcode3MigrationDidntFindPersistedBreakpointsOnCreation; // @synthesize xcode3MigrationDidntFindPersistedBreakpointsOnCreation=_xcode3MigrationDidntFindPersistedBreakpointsOnCreation;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) IDEContainer<DVTCustomDataStoring> *archivingContainer; // @synthesize archivingContainer=_archivingContainer;
@property(readonly) int type; // @synthesize type=_type;
- (void)addExceptionBreakpoints:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addSymbolicBreakpoints:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addFileBreakpoints:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)_handleIndividualKindOfBreakpointsChanged:(id)arg1;
- (id)_displayNameForWorkspace;
- (id)archivingContainerItemBaseStandardizedPathString;
- (void)_persistBreakpoints;
- (void)notifyPersistencyStateChanged;
- (BOOL)removeBreakpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
@property(readonly, getter=isShared) BOOL shared;
- (BOOL)containsBreakpoint:(id)arg1;
- (id)_individualKindOfBreakpointArrayForBreakpoint:(id)arg1;
- (id)initWithType:(int)arg1 archivingContainer:(id)arg2 error:(id *)arg3;
- (BOOL)_decodeFromContainer:(id *)arg1;
- (void)_encodeToContainer;
- (BOOL)_shouldEncodeDecode;
@property(readonly) DVTCustomDataSpecifier *archivingDataSpecifier; // @dynamic archivingDataSpecifier;
- (id)_archivingDataStore;
- (id)init;

// Remaining properties
@property(retain) NSArray *breakpoints; // @dynamic breakpoints;
@property(retain) NSArray *exceptionBreakpoints; // @dynamic exceptionBreakpoints;
@property(retain) NSArray *fileBreakpoints; // @dynamic fileBreakpoints;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) NSMutableArray *mutableExceptionBreakpoints; // @dynamic mutableExceptionBreakpoints;
@property(readonly) NSMutableArray *mutableFileBreakpoints; // @dynamic mutableFileBreakpoints;
@property(readonly) NSMutableArray *mutableSymbolicBreakpoints; // @dynamic mutableSymbolicBreakpoints;
@property(retain) NSArray *symbolicBreakpoints; // @dynamic symbolicBreakpoints;

@end

@interface IDEBreakpointLocation : IDEBreakpoint
{
    IDEBreakpoint *_parentBreakpoint;
    DVTTextDocumentLocation *_documentLocation;
    NSString *_symbolName;
    unsigned long long _address;
    NSString *_urlString;
    NSString *_timestampString;
    long long _startingColumnNumber;
    long long _endingColumnNumber;
    long long _startingLineNumber;
    long long _endingLineNumber;
    NSString *_characterRangeString;
}

+ (id)keyPathsForValuesAffectingCondition;
@property(readonly) unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *symbolName; // @synthesize symbolName=_symbolName;
@property(readonly) DVTTextDocumentLocation *documentLocation; // @synthesize documentLocation=_documentLocation;
@property(readonly) IDEBreakpoint *parentBreakpoint; // @synthesize parentBreakpoint=_parentBreakpoint;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (BOOL)_isTextDocumentLocationEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)mutableLocations;
- (id)locations;
- (id)condition;
- (void)primitiveSetParentBreakpoint:(id)arg1;
@property(readonly) DVTTextDocumentLocation *zeroBasedDocumentLocation;
- (id)displayName;
- (id)initWithBreakpoint:(id)arg1 documentTextLocation:(id)arg2 symbolName:(id)arg3 address:(unsigned long long)arg4;

@end

@interface IDEBreakpointManager : NSObject
{
    IDEWorkspace *_workspace;
    id <DVTObservingToken> _workspaceReferencedContainersToken;
    IDEBreakpointBucket *_defaultBucket;
    IDEBreakpointBucket *_userWorkspaceBucket;
    NSMutableArray *_userProjectBuckets;
    IDEBreakpointBucket *_userGlobalBucket;
    IDEBreakpointBucket *_watchpointBucket;
    IDEBreakpointBucket *_sharedWorkspaceBucket;
    NSMutableArray *_sharedProjectBuckets;
    NSMapTable *_userToSharedBuckets;
    NSMapTable *_sharedToUserBuckets;
    NSMutableArray *_breakpoints;
    NSMutableArray *_fileBreakpoints;
    NSMutableArray *_symbolicBreakpoints;
    NSMutableArray *_exceptionBreakpoints;
    BOOL _breakpointsActivated;
}

+ (id)_kindsOfManagedBreakpoints;
+ (BOOL)_isBreakpointAtLocation:(id)arg1 location:(id)arg2;
+ (void)initialize;
@property BOOL breakpointsActivated; // @synthesize breakpointsActivated=_breakpointsActivated;
@property(readonly) IDEBreakpointBucket *sharedWorkspaceBucket; // @synthesize sharedWorkspaceBucket=_sharedWorkspaceBucket;
@property(readonly) IDEBreakpointBucket *userGlobalBucket; // @synthesize userGlobalBucket=_userGlobalBucket;
@property(readonly) IDEBreakpointBucket *userWorkspaceBucket; // @synthesize userWorkspaceBucket=_userWorkspaceBucket;
@property(retain, nonatomic) IDEBreakpointBucket *defaultBucket; // @synthesize defaultBucket=_defaultBucket;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)_importLegacyBreakpointsIfNecessary:(id)arg1 userProjectBucket:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_handleBreakpointsChanged:(id)arg1 forArray:(id)arg2;
- (void)_addListenersToBucketsBreakpointLists:(id)arg1;
- (BOOL)_canSetBreakpointAtURL:(id)arg1;
- (void)setBreakpointShared:(id)arg1 shared:(BOOL)arg2;
- (id)fileBreakpointAtDocumentLocation:(id)arg1;
- (id)pathOfModulesMatchingFileBreakpoint:(id)arg1;
- (void)removeBreakpoint:(id)arg1;
- (BOOL)_managesBucket:(id)arg1;
- (void)_addBreakpoint:(id)arg1 toBucket:(id)arg2;
- (void)addBreakpoint:(id)arg1;
- (id)createWatchpoint:(id)arg1 variableName:(id)arg2;
- (id)_createAddressBreakpointFrom:(id)arg1 usingLineOfDisassembly:(id)arg2;
- (id)createAddressBreakpoint:(id)arg1;
- (id)createSymbolicBreakpointWithSymbolName:(id)arg1 moduleName:(id)arg2;
- (id)createExceptionBreakpoint;
- (id)createFileBreakpointAtDocumentLocation:(id)arg1;
- (id)createBreakpointAtDocumentLocation:(id)arg1 usingStringAtLine:(id)arg2;
- (void)_handleWorkspaceContainerRemoved:(id)arg1;
- (void)_handleWorkspaceContainerInserted:(id)arg1;
- (void)_handleWorkspaceContainersChanges:(id)arg1;
- (id)initWithWorkspace:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(copy) NSArray *breakpoints; // @dynamic breakpoints;
@property(copy) NSArray *exceptionBreakpoints; // @dynamic exceptionBreakpoints;
@property(readonly) NSArray *fileBreakpoints; // @dynamic fileBreakpoints;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) NSMutableArray *mutableExceptionBreakpoints; // @dynamic mutableExceptionBreakpoints;
@property(readonly) NSMutableArray *mutableFileBreakpoints; // @dynamic mutableFileBreakpoints;
@property(readonly) NSMutableArray *mutableSharedProjectBuckets; // @dynamic mutableSharedProjectBuckets;
@property(readonly) NSMutableArray *mutableSymbolicBreakpoints; // @dynamic mutableSymbolicBreakpoints;
@property(readonly) NSMutableArray *mutableUserProjectBuckets; // @dynamic mutableUserProjectBuckets;
@property(retain) NSArray *sharedProjectBuckets; // @dynamic sharedProjectBuckets;
@property(copy) NSArray *symbolicBreakpoints; // @dynamic symbolicBreakpoints;
@property(retain) NSArray *userProjectBuckets; // @dynamic userProjectBuckets;

@end

@interface IDEScriptingElement : NSObject
{
    id _container;
    id _accessor;
}

@property(retain) id accessor; // @synthesize accessor=_accessor;
@property(retain) id container; // @synthesize container=_container;
- (id)objectSpecifier;
- (id)objectSpecifierAsProperty;
- (id)objectSpecifierByIndex;
- (id)objectSpecifierByName:(id)arg1;
- (id)objectSpecifierByID:(id)arg1;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (void)setScriptingID:(id)arg1;
- (void)setName:(id)arg1;
- (id)description;

@end

@interface IDEScriptingWrapper : IDEScriptingElement
{
    id _client;
}

+ (id)wrapSingleton:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItems:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItem:(id)arg1 inWrapper:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
@property(retain) id client; // @synthesize client=_client;
- (id)objectSpecifier;
- (BOOL)isEqual:(id)arg1;
- (id)scriptingID;
- (id)name;
- (id)description;

@end

@interface IDEContainerItemWrapper : IDEScriptingWrapper
{
}

- (void)setProject:(id)arg1;
- (id)project;
- (void)setScriptingID:(id)arg1;
- (id)scriptingID;
- (void)setScriptingContainer:(id)arg1;
- (id)scriptingContainer;

@end

@interface IDEBreakpointWrapper : NSObject /*ProjectItemWrapper*/
{
}

- (id)name;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)enabled;
- (void)setCondition:(id)arg1;
- (id)condition;
- (void)setAutomaticallyContinue:(BOOL)arg1;
- (BOOL)automaticallyContinue;

@end

@interface IDEBuildActionEntry : NSObject <DVTXMLUnarchiving>
{
    BOOL _isExplicitEntry;
    BOOL _shouldBuildForTesting;
    BOOL _mustBuildForTesting;
    BOOL _shouldBuildForRunning;
    BOOL _mustBuildForRunning;
    BOOL _shouldBuildForProfiling;
    BOOL _mustBuildForProfiling;
    BOOL _shouldBuildForArchiving;
    BOOL _shouldBuildForAnalyzing;
    IDESchemeBuildableReference *_buildableReference;
    IDEBuildSchemeAction *_buildAction;
}

+ (id)keyPathsForValuesAffectingCanRemoveEntry;
+ (id)keyPathsForValuesAffectingCanEditBuildForProfiling;
+ (id)keyPathsForValuesAffectingShouldBuildForProfiling;
+ (id)keyPathsForValuesAffectingCanEditBuildForRunning;
+ (id)keyPathsForValuesAffectingShouldBuildForRunning;
+ (id)keyPathsForValuesAffectingCanEditBuildForTesting;
+ (id)keyPathsForValuesAffectingShouldBuildForTesting;
@property(retain) IDEBuildSchemeAction *buildAction; // @synthesize buildAction=_buildAction;
@property(readonly) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
@property(nonatomic) BOOL mustBuildForProfiling; // @synthesize mustBuildForProfiling=_mustBuildForProfiling;
@property(nonatomic) BOOL mustBuildForRunning; // @synthesize mustBuildForRunning=_mustBuildForRunning;
@property(nonatomic) BOOL mustBuildForTesting; // @synthesize mustBuildForTesting=_mustBuildForTesting;
@property(readonly) BOOL isExplicitEntry; // @synthesize isExplicitEntry=_isExplicitEntry;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForAnalyzingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForArchivingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForProfilingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForRunningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildForTestingFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)enableBuildEntry;
- (void)disableBuildEntry;
@property(readonly) BOOL canRemoveEntry;
@property(readonly) BOOL canEditBuildForAnalyzing;
@property BOOL shouldBuildForAnalyzing;
@property(readonly) BOOL canEditBuildForArchiving;
@property BOOL shouldBuildForArchiving;
@property(readonly) BOOL canEditBuildForProfiling;
@property BOOL shouldBuildForProfiling;
@property(readonly) BOOL canEditBuildForRunning;
@property BOOL shouldBuildForRunning;
@property(readonly) BOOL canEditBuildForTesting;
@property BOOL shouldBuildForTesting;
- (void)_makeExplicit;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildableReference:(id)arg1 buildAction:(id)arg2 explicityManaged:(BOOL)arg3;

@end

@interface IDEBuildArbitrator : NSObject
{
    NSOperationQueue *_serializationQueue;
    NSMapTable *_fileProducingBuildTasksByFilePath;
    DVTMapTable *_registeringBuildersByFilePath;
    DVTMapTable *_registeredFilePathsByBuilder;
}

+ (id)sharedBuildArbitrator;
+ (void)initialize;
- (void)unregisterAllBuildTasksForBuilder:(id)arg1;
- (void)unregisterBuildTaskWhichProducesFileAtPath:(id)arg1 forBuilder:(id)arg2;
- (id)registerBuildTask:(id)arg1 asProducerOfFileAtPath:(id)arg2 forBuilder:(id)arg3;
- (id)init;

@end

@interface IDEBuildFolder : NSObject
{
    NSString *_path;
    IDEBuilder *_currentBuilder;
}

+ (id)sharedBuildFolderWithPath:(id)arg1 error:(id *)arg2;
@property(retain) IDEBuilder *currentBuilder; // @synthesize currentBuilder=_currentBuilder;
@property(readonly) NSString *path; // @synthesize path=_path;
- (id)description;
- (void)unregisterCurrentBuilder:(id)arg1;
- (void)registerCurrentBuilder:(id)arg1;
- (void)finalize;
- (id)init;
- (id)initWithPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEBuildFolderSettings : NSObject
{
    int buildLocationStyle;
    NSString *sharedBuildFolderName;
    int customBuildLocationType;
    NSString *customBuildProductsPath;
    NSString *customBuildIntermediatesPath;
}

+ (id)buildFolderSettingsForWorkspaceSettings:(id)arg1;
- (id)description;

@end

@interface IDEIssueProvider : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    IDEIssueManager *_issueManager;
    DVTExtension *_extension;
    IDEIssueProviderSession *_session;
    DVTStackBacktrace *_invalidationBacktrace;
}

+ (int)providerType;
@property(retain) IDEIssueProviderSession *_session; // @synthesize _session;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly) IDEIssueManager *issueManager; // @synthesize issueManager=_issueManager;
@property(readonly) BOOL _filterIssuesByActiveScheme;
- (id)logDocumentLocationForIssue:(id)arg1;
- (id)activityLogRecordForIssue:(id)arg1;
- (void)endProviderSession;
- (void)startProviderSession;
- (id)imageNameForIssue:(id)arg1;
- (id)imageNameForIssueTypeIdentifier:(id)arg1;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)addIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
- (void)setIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4;
- (id)description;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (id)init;

@end

@interface IDEBuildIssueProvider : IDEIssueProvider
{
    NSMapTable *_blueprintToLatestLogSectionObserverMap;
    NSMapTable *_buildLogToLogNotificationObserverMap;
    NSMapTable *_blueprintToLatestBuildLogSectionMap;
    id <DVTObservingToken> _activeBuildOperationStateObserverToken;
    IDEBuildOperation *_activeBuildOperation;
    NSMutableSet *_pendingLogSections;
    IDELogStore *_logStore;
    NSMapTable *_blueprintToLogRecordMap;
}

+ (int)providerType;
+ (id)_backgroundLoadingQueue;
- (id)ideModelObjectTypeIdentifier;
- (id)imageNameForIssue:(id)arg1;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_buildLogDidUpdateItems:(id)arg1 blueprint:(id)arg2;
- (void)_scanIssuesInLog:(id)arg1 forBlueprint:(id)arg2 intoArray:(id)arg3 usingSeenMessages:(id)arg4;
- (void)_addIssueForMessage:(id)arg1 blueprint:(id)arg2 intoArray:(id)arg3 usingSeenMessages:(id)arg4 wasFetchedFromCache:(BOOL)arg5;
- (void)_observeLogSection:(id)arg1 forBlueprint:(id)arg2;
- (void)_currentBuildOperationDidChange;
- (void)_blueprintsDidChange;
- (void)_reactToCleanBuildFolder;
- (void)_forgetBlueprint:(id)arg1;
- (void)_latestBuildLogDidChange;
- (void)_workspaceFinishedLoading;
- (void)invalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDELogProvider : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    id _domainItem;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) id domainItem; // @synthesize domainItem=_domainItem;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSArray *logRecords;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithDomainItem:(id)arg1;

@end

@interface IDEBuildLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDEExecutionEnvironmentAwareOperation : DVTOperation <IDEExecutingOperationTrackable>
{
    IDEExecutionEnvironment *_executionContext;
    IDEExecutionOperationTracker *_mainExecutionTracker;
}

@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionContext;
- (void)registerTracker:(id)arg1;
- (id)initWithExecutionEnvironment:(id)arg1;

@end

@interface IDEBuildOperation : IDEExecutionEnvironmentAwareOperation
{
    IDEBuildOperationDescription *_buildOperationDescription;
    int _purpose;
    int _buildCommand;
    NSArray *_buildables;
    IDEBuildParameters *_buildParameters;
    NSMapTable *_buildParametersForBuildable;
    BOOL _parallelizeBuildables;
    BOOL _buildImplicitDependencies;
    BOOL _restorePersistedBuildResults;
    int _state;
    int _result;
    IDEActivityLogSection *_buildLog;
    float _percentComplete;
    IDEBuildOperationStatus *_buildStatus;
    DVTDispatchLock *_operationLock;
    NSOperationQueue *_builderQueue;
    IDEBuildOperationQueueSet *_buildTaskQueueSet;
    NSMapTable *_buildablesToBuilders;
    unsigned long long _buildersBuilt;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    NSMutableSet *_generatedFileInfo;
    NSMutableDictionary *_copiedFilePathsMap;
    NSMutableArray *_buildSetupErrorStrings;
    NSMutableArray *_buildSetupWarningStrings;
}

+ (id)buildParametersForPurpose:(int)arg1 configurationName:(id)arg2 workspaceArena:(id)arg3 overridingProperties:(id)arg4 activeRunDestination:(id)arg5 activeArchitecture:(id)arg6;
+ (void)initialize;
@property(retain) IDEBuildOperationStatus *buildStatus; // @synthesize buildStatus=_buildStatus;
@property float percentComplete; // @synthesize percentComplete=_percentComplete;
@property unsigned long long buildersBuilt; // @synthesize buildersBuilt=_buildersBuilt;
@property(readonly) NSMapTable *buildablesToBuilders; // @synthesize buildablesToBuilders=_buildablesToBuilders;
@property(readonly) IDEBuildOperationQueueSet *buildTaskQueueSet; // @synthesize buildTaskQueueSet=_buildTaskQueueSet;
@property(readonly) NSOperationQueue *builderQueue; // @synthesize builderQueue=_builderQueue;
@property(readonly) int result; // @synthesize result=_result;
@property(readonly) int state; // @synthesize state=_state;
@property(readonly) IDEActivityLogSection *buildLog; // @synthesize buildLog=_buildLog;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
@property(readonly) BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property(readonly) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(readonly) NSArray *buildables; // @synthesize buildables=_buildables;
@property(readonly) int buildCommand; // @synthesize buildCommand=_buildCommand;
@property(readonly) int purpose; // @synthesize purpose=_purpose;
@property(readonly) IDEBuildOperationDescription *buildOperationDescription; // @synthesize buildOperationDescription=_buildOperationDescription;
- (void)stopWithResultCode:(int)arg1;
- (void)lastBuilderDidFinish;
- (void)_cancelAllBuilders;
- (void)start;
- (void)addOperationsForBuildables;
- (id)_addOperationForBuildableIfNeeded:(id)arg1;
- (id)_addOperationForBuildableIfNeeded:(id)arg1 recursionDetectionArray:(id)arg2;
- (void)setupCallbackBlocksOnNewBuilder:(id)arg1;
- (void)_updateBuildStatusWithStateDescription:(id)arg1 fileProgressString:(id)arg2;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isConcurrent;
- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)arg1;
- (id)copiedFilePathsMap;
- (void)addCopiedFilePathsFromDictionary:(id)arg1;
- (void)addBuildSetupWarningString:(id)arg1;
- (void)addBuildSetupErrorString:(id)arg1;
- (void)addGeneratedFileInfo:(id)arg1;
@property(retain) NSString *localizedStateDescription;
@property(readonly) NSString *activeArchitecture;
@property(readonly) IDERunDestination *activeRunDestination;
@property(readonly) IDEOverridingBuildProperties *overridingProperties;
@property(readonly) NSString *configurationName;
- (id)buildParametersForBuildable:(id)arg1;
- (void)setBuildParameters:(id)arg1 forBuildable:(id)arg2;
- (id)initWithBuildOperationDescription:(id)arg1 purpose:(int)arg2 buildCommand:(int)arg3 configurationName:(id)arg4 buildables:(id)arg5 buildLog:(id)arg6 executionEnvironment:(id)arg7 overridingProperties:(id)arg8 activeRunDestination:(id)arg9 activeArchitecture:(id)arg10 parallelizeBuildables:(BOOL)arg11 buildImplicitDependencies:(BOOL)arg12 restorePersistedBuildResults:(BOOL)arg13;

@end

@interface IDEBuildOperationDescription : NSObject
{
    NSString *_objectToBuildName;
    NSString *_actionName;
    NSString *_actionInProgress;
}

+ (id)buildOperationDescriptionForSchemeCommand:(int)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 schemeName:(id)arg4;
@property(readonly) NSString *actionInProgress; // @synthesize actionInProgress=_actionInProgress;
@property(readonly) NSString *actionName; // @synthesize actionName=_actionName;
@property(readonly) NSString *objectToBuildName; // @synthesize objectToBuildName=_objectToBuildName;
- (id)initWithObjectToBuildName:(id)arg1 actionName:(id)arg2 actionInProgress:(id)arg3;

@end

@interface IDEBuildOperationGroup : DVTOperationGroup
{
    IDEBuildOperation *_buildOperation;
}

+ (id)operationGroupWithSuboperations:(id)arg1;
+ (id)operationGroupWithBuildOperation:(id)arg1 otherOperations:(id)arg2;
@property(readonly) IDEBuildOperation *buildOperation; // @synthesize buildOperation=_buildOperation;

@end

@interface IDEBuildOperationQueueSet : NSObject
{
    NSString *_identifier;
    NSOperationQueue *_copyTaskQueue;
    unsigned long long _slidingMaxNumberOfConcurrentCompileTasks;
    BOOL _didReduceConcurrencyDueToResourcePressure;
    NSOperationQueue *_compileTaskQueue;
    NSOperationQueue *_linkTaskQueue;
    DVTDispatchLock *_updateConcurrencyLock;
    NSDate *_lastCheckedResourcePressure;
    NSDate *_lastIncreasedConcurrency;
}

+ (id)sharedBuildTaskQueueSet;
+ (unsigned long long)maxNumberOfConcurrentCompileTasks;
+ (void)setMaxNumberOfConcurrentCompileTasks:(unsigned long long)arg1;
+ (void)initialize;
@property(readonly) NSOperationQueue *linkTaskQueue; // @synthesize linkTaskQueue=_linkTaskQueue;
@property(readonly) NSOperationQueue *compileTaskQueue; // @synthesize compileTaskQueue=_compileTaskQueue;
@property(readonly) NSOperationQueue *copyTaskQueue; // @synthesize copyTaskQueue=_copyTaskQueue;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void)changeMaximumOperationConcurrencyUsingThrottleFactor:(double)arg1;
- (void)resetOperationConcurrency;
- (void)updateOperationConcurrency;
- (id)initWithIdentifier:(id)arg1;

@end

@interface IDEBuildOperationStatus : NSObject
{
    NSString *_stateDescription;
    NSString *_fileProgressString;
}

@property(copy) NSString *fileProgressString; // @synthesize fileProgressString=_fileProgressString;
@property(copy) NSString *stateDescription; // @synthesize stateDescription=_stateDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStateDescription:(id)arg1;

@end

@interface IDEBuildParameters : NSObject
{
    IDEWorkspaceArenaSnapshot *_workspaceArenaSnapshot;
    NSString *_buildAction;
    NSString *_configurationName;
    IDERunDestination *_activeRunDestination;
    NSString *_activeArchitecture;
    IDEOverridingBuildProperties *_overridingProperties;
    NSString *_stateKey;
    unsigned long long _hash;
}

@property(readonly) IDEOverridingBuildProperties *overridingProperties; // @synthesize overridingProperties=_overridingProperties;
@property(readonly) NSString *activeArchitecture; // @synthesize activeArchitecture=_activeArchitecture;
@property(readonly) IDERunDestination *activeRunDestination; // @synthesize activeRunDestination=_activeRunDestination;
@property(readonly) NSString *configurationName; // @synthesize configurationName=_configurationName;
@property(readonly) NSString *buildAction; // @synthesize buildAction=_buildAction;
@property(readonly) IDEWorkspaceArenaSnapshot *workspaceArenaSnapshot; // @synthesize workspaceArenaSnapshot=_workspaceArenaSnapshot;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)_componentPropertyNames;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copyUsingTargetBuildParametersClass:(Class)arg1;
- (id)init;

@end

@interface IDEBuildSchemeAction : IDESchemeAction
{
    NSMutableArray *_legacyBuildableReferences;
    BOOL _parallelizeBuildables;
    BOOL _buildImplicitDependencies;
    NSString *_legacyBuildConfiguration;
    NSMutableArray *_buildActionEntries;
    IDEBuildActionEntry *_launchRunnableEntry;
    IDEBuildActionEntry *_profileRunnableEntry;
    NSMutableArray *_testBuildableEntries;
    BOOL _buildablesDidChangeNotificationEnabled;
    BOOL _isBuildablesDidChangeNotificationPending;
    NSMapTable *_overridingBuildPropertiesForBuildable;
}

+ (id)keyPathsForValuesAffectingAvailableBuildConfigurations;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(nonatomic, getter=isBuildablesDidChangeNotificationEnabled) BOOL buildablesDidChangeNotificationEnabled; // @synthesize buildablesDidChangeNotificationEnabled=_buildablesDidChangeNotificationEnabled;
@property BOOL buildImplicitDependencies; // @synthesize buildImplicitDependencies=_buildImplicitDependencies;
@property BOOL parallelizeBuildables; // @synthesize parallelizeBuildables=_parallelizeBuildables;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildRoles:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildActionEntries:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductReferences:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildImplicitDependenciesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setParallelizeBuildablesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)overridingBuildPropertiesForBuildable:(id)arg1;
- (void)setOverridingBuildProperties:(id)arg1 forBuildable:(id)arg2;
- (void)postBuildablesDidChangeNotification;
- (id)_matcherBlockForCommand:(SEL)arg1;
- (id)buildablesByConfiguration;
- (id)buildableReferencesForSchemeCommand:(int)arg1;
- (id)buildableReferences;
- (id)buildablesForSchemeCommand:(int)arg1 includingDependencies:(BOOL)arg2;
- (id)buildablesForAllSchemeCommandsIncludingDependencies:(BOOL)arg1;
- (id)_buildablesIncludingDependencies:(BOOL)arg1 restrictToSchemeCommand:(id)arg2;
- (id)buildableReferenceForBuildable:(id)arg1;
@property(readonly) NSArray *availableBuildConfigurations;
- (id)buildDirectoryPathsForBuildParameters:(id)arg1 schemeCommand:(int)arg2;
- (void)moveBuildActionEntriesAtIndexes:(id)arg1 toIndex:(unsigned long long)arg2;
- (id)addBuildActionEntryForBuildableReference:(id)arg1;
- (void)removeBuildActionEntryAtIndex:(unsigned long long)arg1;
- (void)_setupImplicitBuildActionEntries;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (id)cleanOperationForExecutionEnvironment:(id)arg1 orderedBuildables:(id)arg2 buildConfiguration:(id)arg3 buildLog:(id)arg4 overridingProperties:(id)arg5 activeRunDestination:(id)arg6 activeArchitecture:(id)arg7 error:(id *)arg8;
- (id)buildOperationForExecutionEnvironment:(id)arg1 buildPurpose:(int)arg2 buildCommand:(int)arg3 schemeCommand:(int)arg4 filePath:(id)arg5 buildConfiguration:(id)arg6 buildLog:(id)arg7 overridingProperties:(id)arg8 activeRunDestination:(id)arg9 activeArchitecture:(id)arg10 restorePersistedBuildResults:(BOOL)arg11 error:(id *)arg12;
- (void)setRunContext:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;
- (void)_commonInit;

// Remaining properties
@property(readonly) NSArray *buildActionEntries; // @dynamic buildActionEntries;
@property(readonly) NSMutableArray *mutableBuildActionEntries; // @dynamic mutableBuildActionEntries;

@end

@interface IDEBuildTask : DVTOperation
{
    NSString *_identifier;
    NSDictionary *_properties;
    IDEActivityLogSection *_activityLogSection;
    id _didStartExecutingBlock;
    id _activityLogSectionDidChangeBlock;
    id _exitCodeWasSetBlock;
    id _updateBuildStatusForBuildTaskBlock;
    int _exitCode;
    BOOL _restorePersistedBuildResults;
}

+ (id)defaultProperties;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;
+ (void)initialize;
@property(copy) id updateBuildStatusForBuildTask; // @synthesize updateBuildStatusForBuildTask=_updateBuildStatusForBuildTaskBlock;
@property(copy) id exitCodeWasSet; // @synthesize exitCodeWasSet=_exitCodeWasSetBlock;
@property(copy) id activityLogSectionDidChange; // @synthesize activityLogSectionDidChange=_activityLogSectionDidChangeBlock;
@property(copy) id didStartExecuting; // @synthesize didStartExecuting=_didStartExecutingBlock;
@property(nonatomic) int exitCode; // @synthesize exitCode=_exitCode;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) NSDictionary *properties; // @synthesize properties=_properties;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (id)longDescription;
- (id)description;
- (void)main;
- (id)init;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDERunnable : NSObject
{
    IDEScheme *_scheme;
    DVTFileDataType *_dataType;
    NSError *_dataTypeDetectionError;
}

@property(retain) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void)resolveBuildableFromImport;
@property(readonly) BOOL hasRunnablePath;
@property(readonly) id <IDEBuildableProduct> buildableProduct;
- (id)runnableUTIType:(id *)arg1;
- (id)pathToRunnableForBuildParameters:(id)arg1;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;

@end

@interface IDEBuildableProductRunnable : IDERunnable <DVTXMLUnarchiving>
{
    id <IDEBuildableProduct> _buildableProduct;
    IDESchemeBuildableReference *_buildableReference;
}

+ (id)keyPathsForValuesAffectingBuildableProduct;
+ (id)keyPathsForValuesAffectingHasRunnablePath;
+ (id)keyPathsForValuesAffectingDisplayName;
@property(retain) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)addBuildableProductReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)resolveBuildableFromImport;
- (void)setScheme:(id)arg1;
@property(readonly) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (BOOL)isBlueprint;
- (id)toolTip;
- (id)displayName;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildableProduct:(id)arg1 scheme:(id)arg2;

@end

@interface IDEBuildableProductSupportMixIn : NSObject
{
    id <IDEBuildableProduct> _buildableProduct;
}

- (id)toolTip;
- (id)displayName;
- (id)filePathForBuildParameters:(id)arg1;
- (id)initWithBuildableProduct:(id)arg1;

@end

@interface IDEBuildableSnapshot : NSObject
{
    id <IDEBuildable> _buildable;
    NSString *_name;
    IDEBuildParameters *_buildParameters;
    IDEActivityLogSection *_activityLogSection;
    NSArray *_currentBuildTasks;
    BOOL _cleanupDidRun;
}

+ (void)initialize;
@property(retain) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(retain) NSArray *currentBuildTasks; // @synthesize currentBuildTasks=_currentBuildTasks;
@property(readonly) IDEBuildParameters *buildParameters; // @synthesize buildParameters=_buildParameters;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) id <IDEBuildable> buildable; // @synthesize buildable=_buildable;
- (id)description;
- (void)cleanupForBuilder:(id)arg1;
- (void)_cleanupOnlyOnceForBuilder:(id)arg1;
- (void)builderWasCancelled:(id)arg1;
- (void)buildForBuilderDidFinish:(id)arg1;
- (id)nextBuildTasksToRunForBuilder:(id)arg1 buildCommand:(int)arg2 buildOnlyTheseFiles:(id)arg3;
- (BOOL)buildForBuilderWillStart:(id)arg1;
- (int)performBuildForBuilder:(id)arg1 buildCommand:(int)arg2 buildOnlyTheseFiles:(id)arg3;
- (BOOL)prepareForBuildingForBuilder:(id)arg1;
- (void)_updateBuildOperationStatusForBuilder:(id)arg1 buildTask:(id)arg2;
- (void)_buildTaskDidStartForBuilder:(id)arg1 buildTask:(id)arg2;
- (id)initFromBuildable:(id)arg1 withBuildParameters:(id)arg2;

@end

@interface IDEBuildableSupportMixIn : NSObject
{
    id <IDEBuildable> _buildable;
    BOOL _hasRecursiveDependencyCycle;
}

+ (void)initialize;
- (id)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (id)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(id)arg2;
- (BOOL)hasRecursiveDependencyCycle;
- (id)initWithBuildable:(id)arg1;

@end

@interface IDEBuilder : DVTOperation
{
    int _buildCommand;
    IDEBuildableSnapshot *_snapshot;
    NSArray *_exclusiveSourceFiles;
    int _result;
    IDEActivityLogSection *_activityLogSection;
    NSString *_localizedDescription;
    IDEBuildOperationQueueSet *_buildTaskQueueSet;
    BOOL _restorePersistedBuildResults;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    NSMutableSet *_generatedFileInfo;
    NSDictionary *_copiedFilePathsFromBuildOperation;
    NSDictionary *_copiedFilePathsFromBuildableProduct;
    id _activityLogSectionDidChangeBlock;
    id _resultDidChangeBlock;
    id _didStartExecutingBlock;
    id _didFinishExecutingBlock;
    id _updateBuildStatusBlock;
}

+ (void)initialize;
@property(copy) NSDictionary *copiedFilePathsFromBuildableProduct; // @synthesize copiedFilePathsFromBuildableProduct=_copiedFilePathsFromBuildableProduct;
@property(copy) NSDictionary *copiedFilePathsFromBuildOperation; // @synthesize copiedFilePathsFromBuildOperation=_copiedFilePathsFromBuildOperation;
@property(copy) id updateBuildStatus; // @synthesize updateBuildStatus=_updateBuildStatusBlock;
@property(copy) id didFinishExecuting; // @synthesize didFinishExecuting=_didFinishExecutingBlock;
@property(copy) id didStartExecuting; // @synthesize didStartExecuting=_didStartExecutingBlock;
@property(copy) id resultDidChange; // @synthesize resultDidChange=_resultDidChangeBlock;
@property(copy) id activityLogSectionDidChange; // @synthesize activityLogSectionDidChange=_activityLogSectionDidChangeBlock;
@property(readonly) NSSet *generatedFileInfo; // @synthesize generatedFileInfo=_generatedFileInfo;
@property(readonly) BOOL restorePersistedBuildResults; // @synthesize restorePersistedBuildResults=_restorePersistedBuildResults;
@property(readonly) NSArray *exclusiveSourceFiles; // @synthesize exclusiveSourceFiles=_exclusiveSourceFiles;
@property(readonly) IDEBuildOperationQueueSet *buildTaskQueueSet; // @synthesize buildTaskQueueSet=_buildTaskQueueSet;
@property(copy) NSString *localizedDescription; // @synthesize localizedDescription=_localizedDescription;
@property(retain, nonatomic) IDEActivityLogSection *activityLogSection; // @synthesize activityLogSection=_activityLogSection;
@property(nonatomic) int result; // @synthesize result=_result;
@property(readonly) IDEBuildableSnapshot *snapshot; // @synthesize snapshot=_snapshot;
@property(readonly) int buildCommand; // @synthesize buildCommand=_buildCommand;
- (id)description;
- (void)addGeneratedFileInfo:(id)arg1;
- (void)main;
- (id)init;
- (id)initForBuildCommand:(int)arg1 withBuildableSnapshot:(id)arg2 buildTaskQueueSet:(id)arg3 buildOnlyTheseFiles:(id)arg4 restorePersistedBuildResults:(BOOL)arg5;

@end

@interface IDEBuilderGeneratedFileInfo : NSObject <NSCoding>
{
    int _buildCommand;
    DVTFilePath *_sourceFilePath;
    DVTFilePath *_generatedFilePath;
    int _commandResult;
    NSString *_errorString;
    IDEActivityLogSection *_commandLogSection;
}

@property(readonly) IDEActivityLogSection *commandLogSection; // @synthesize commandLogSection=_commandLogSection;
@property(readonly) NSString *errorString; // @synthesize errorString=_errorString;
@property(readonly) int commandResult; // @synthesize commandResult=_commandResult;
@property(readonly) DVTFilePath *generatedFilePath; // @synthesize generatedFilePath=_generatedFilePath;
@property(readonly) DVTFilePath *sourceFilePath; // @synthesize sourceFilePath=_sourceFilePath;
@property(readonly) int buildCommand; // @synthesize buildCommand=_buildCommand;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBuildCommand:(int)arg1 sourceFilePath:(id)arg2 generatedFilePath:(id)arg3 commandResult:(int)arg4 errorString:(id)arg5 commandLogSection:(id)arg6;

@end

@interface IDEDiagnosticActivityLogMessage : IDEActivityLogMessage
{
    NSMutableArray *_diagnosticFixItItems;
    id <IDEDiagnosticItemDelegate> _delegate;
    id _representedObject;
}

+ (id)keyPathsForValuesAffectingFixableDiagnosticItems;
+ (id)diagnosticMessageType;
@property __weak id representedObject; // @synthesize representedObject=_representedObject;
@property __weak id <IDEDiagnosticItemDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *diagnosticFixItItems; // @synthesize diagnosticFixItItems=_diagnosticFixItItems;
@property(readonly) NSArray *fixableDiagnosticItems;
- (void)removeObjectFromDiagnosticFixItItemsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inDiagnosticFixItItemsAtIndex:(unsigned long long)arg2;
@property(readonly) NSMutableArray *mutableDiagnosticFixItItems;
@property(readonly) NSString *severityString;
@property(readonly) int diagnosticSeverity;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDiagnosticItem:(id)arg1;
- (id)init;
- (id)initWithSeverity:(int)arg1 title:(id)arg2 location:(id)arg3;

@end

@interface IDEClangDiagnosticActivityLogMessage : IDEDiagnosticActivityLogMessage
{
    int _diagnosticSeverity;
}

+ (id)uniqueMessageCategoryStringForCString:(const char *)arg1;
+ (void)initialize;
- (int)diagnosticSeverity;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 workingDirectory:(id)arg4 documentURL:(id)arg5;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 workingDirectory:(id)arg4;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3 documentURL:(id)arg4;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 documentURL:(id)arg3;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2 pathMap:(id)arg3;
- (id)initWithDiagnostic:(void *)arg1 timestamp:(double)arg2;

@end

@interface IDECommandLineArgumentEntry : NSObject
{
    NSString *_argument;
    BOOL _isEnabled;
}

+ (id)argumentEntriesForLegacyValues:(id)arg1;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *argument; // @synthesize argument=_argument;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setArgumentFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)description;
- (id)init;
- (id)initWithArgument:(id)arg1 enabled:(BOOL)arg2;

@end

@interface IDECommandLineBuildTask : IDEBuildTask
{
    NSTask *_task;
}

+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 command:(id)arg3;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 commandLine:(id)arg3;
+ (id)buildTaskWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 commandLine:(id)arg3 workingDirectory:(id)arg4 environmentEntries:(id)arg5;
- (id)description;
- (void)main;
@property(readonly) NSString *workingDirectory;
@property(readonly) NSDictionary *environmentEntries;
@property(readonly) NSArray *commandLine;
- (void)finalize;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDECompilationBuildTask : IDECommandLineBuildTask
{
}

- (id)description;
- (void)main;
- (id)initWithIdentifier:(id)arg1 restorePersistedBuildResults:(BOOL)arg2 properties:(id)arg3;

@end

@interface IDEConcreteClientTracker : NSObject <IDEClientTracking>
{
    NSMutableSet *_clientTrackingTokensRequiringCancellation;
    NSMutableSet *_clientTrackingTokensRequiringCancellationPrompt;
    NSMutableSet *_clientTrackingTokensNotSupportingCancellation;
}

- (void)_clientCancellationTimeout;
- (void)cancelTrackedClients;
- (void)unregisterClient:(id)arg1;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(id)arg3;

@end

@interface IDEConcreteClientTrackingToken : NSObject <IDEClientTrackingToken>
{
    NSString *_clientName;
    id _cancellationBlock;
    BOOL _hasUnregistered;
    IDEConcreteClientTracker *_clientTracker;
}

@property(readonly) NSString *clientName; // @synthesize clientName=_clientName;
- (void)cancelClient;
- (id)initWithClientName:(id)arg1 clientTracker:(id)arg2 cancellationBlock:(id)arg3;
- (id)description;
- (void)unregisterClient;

@end

@interface IDEConsoleAdaptor : NSObject
{
    IDELaunchSession *_launchSession;
    NSString *_type;
    struct dispatch_queue_s *_writeSerialQueue;
    BOOL _usedWithNSTask;
    BOOL _finishedReceivingData;
    NSFileHandle *_standardInput;
    NSFileHandle *_standardOutput;
    NSFileHandle *_standardError;
    NSMutableData *_currentOutputOverflow;
    NSMutableData *_currentErrorOverflow;
    id <IDEConsoleAdaptorDelegateProtocol> _delegate;
    NSMutableDictionary *_completeContent;
    NSMutableArray *_completeContentSequences;
    NSMutableArray *_standardInputSequences;
    NSMutableArray *_standardOutputSequences;
    NSMutableArray *_standardErrorSequences;
}

+ (id)standardErrorItemsForAdaptors:(id)arg1;
+ (id)standardOutputItemsForAdaptors:(id)arg1;
+ (id)standardInputItemsForAdaptors:(id)arg1;
+ (id)allConsoleItemsForAdaptors:(id)arg1;
+ (id)_itemsForAdaptors:(id)arg1 sequencesKey:(id)arg2;
+ (unsigned long long)_nextContentSequence;
+ (void)initialize;
@property(readonly) NSArray *standardErrorSequences; // @synthesize standardErrorSequences=_standardErrorSequences;
@property(readonly) NSArray *standardOutputSequences; // @synthesize standardOutputSequences=_standardOutputSequences;
@property(readonly) NSArray *standardInputSequences; // @synthesize standardInputSequences=_standardInputSequences;
@property(readonly) NSArray *completeContentSequences; // @synthesize completeContentSequences=_completeContentSequences;
@property(readonly) NSDictionary *completeContent; // @synthesize completeContent=_completeContent;
@property(retain) id <IDEConsoleAdaptorDelegateProtocol> delegate; // @synthesize delegate=_delegate;
@property BOOL finishedReceivingData; // @synthesize finishedReceivingData=_finishedReceivingData;
@property(readonly) NSString *type; // @synthesize type=_type;
@property(retain) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
- (id)standardErrorItems;
- (id)standardOutputItems;
- (id)standardInputItems;
- (id)allConsoleItems;
- (id)_itemsForSequences:(id)arg1;
- (void)_setStandardError:(id)arg1;
- (void)_setStandardOutput:(id)arg1;
- (void)_addObserverToReadCompletion:(id)arg1 selector:(SEL)arg2;
- (void)_getError:(id)arg1;
- (void)_getOutput:(id)arg1;
- (void)_findHandleCompletedRead:(id)arg1;
- (id)_getData:(id)arg1 overflowBuffer:(id *)arg2;
- (void)_setStandardInput:(id)arg1;
- (void)outputForStandardError:(id)arg1;
- (void)outputForStandardOutput:(id)arg1;
- (void)outputForStandardOutput:(id)arg1 isPrompt:(BOOL)arg2 isOutputRequestedByUser:(BOOL)arg3;
- (void)_postOnMainThreadForNotification:(id)arg1 consoleItem:(id)arg2;
- (void)inputForStandardInput:(id)arg1;
- (void)_throwExceptionOnMainThread:(id)arg1;
- (void)inputFromConsole:(id)arg1 echo:(BOOL)arg2;
- (void)makeExpired;
- (void)_makeExpired;
- (void)_addToCompleteContent:(id)arg1 andSupportingSequences:(struct __CFArray *)arg2;
- (id)initWithType:(id)arg1 standardInput:(id)arg2 standardOutput:(id)arg3 standardError:(id)arg4 usedWithNSTask:(BOOL)arg5;

@end

@interface IDEConsoleItem : NSObject <DVTSimpleSerialization>
{
    NSString *_adaptorType;
    NSString *_content;
    double _timestamp;
    int _kind;
}

+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingOutputRequestedByUser;
+ (id)keyPathsForValuesAffectingPrompt;
+ (id)keyPathsForValuesAffectingOutput;
+ (id)keyPathsForValuesAffectingInput;
@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
@property int kind; // @synthesize kind=_kind;
@property(readonly) NSString *content; // @synthesize content=_content;
@property(readonly) NSString *adaptorType; // @synthesize adaptorType=_adaptorType;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@property(readonly, getter=isError) BOOL error;
- (void)setError:(BOOL)arg1;
@property(readonly, getter=isOutputRequestedByUser) BOOL outputRequestedByUser;
- (void)setOutputRequestedByUser:(BOOL)arg1;
@property(readonly, getter=isPrompt) BOOL prompt;
- (void)setPrompt:(BOOL)arg1;
@property(readonly, getter=isOutput) BOOL output;
- (void)setOutput:(BOOL)arg1;
@property(readonly, getter=isInput) BOOL input;
- (void)setInput:(BOOL)arg1;
- (id)description;
- (id)initWithAdaptorType:(id)arg1 content:(id)arg2 kind:(int)arg3;

@end

@interface IDEContainer : DVTModelObject <DVTInvalidation, IDEIntegrityLogDataSource, IDEReadOnlyItem, DVTDirectoryBasedCustomDataStoreDelegate>
{
    id <IDEContainerCore> _containerCore;
    IDEWorkspace *_workspace;
    DVTFilePath *_filePath;
    IDEGroup *_rootGroup;
    DVTFilePath *_itemBaseFilePath;
    DVTExtension *_extension;
    DVTOperation *_willReadOperation;
    DVTOperation *_readOperation;
    DVTOperation *_didReadOperation;
    id <DVTCancellableToken> _resolvePendingFilesCancellableToken;
    int _activity;
    int _transitionActivity;
    NSMutableDictionary *_sessionIdentifiersToFilePaths;
    NSMutableDictionary *_containerLoadingTokens;
    NSMutableSet *_pendingFileReferences;
    NSDictionary *_containerDataFilePaths;
    int _autosaveBehavior;
    int _saveIssue;
    NSTimer *_pendingSaveTimer;
    NSString *_sessionIdentifier;
    NSMutableDictionary *_filePathToReadOnlyItemMap;
    NSMapTable *_readOnlyItemToStatusObserverMap;
    id <IDEContainerDelegate> _containerDelegate;
    NSDictionary *_pendingChangeDictionary;
    DVTStackBacktrace *_invalidationBacktrace;
    int _readOnlyStatus;
    BOOL _isInvalidated;
    BOOL _hasTransitionedToIdle;
    BOOL _transitioningToNewFilePath;
    BOOL _containerEdited;
}

+ (BOOL)_shouldTrackReadOnlyStatus;
+ (id)unlockingDelegate;
+ (void)setUnlockingDelegate:(id)arg1;
+ (id)reloadingDelegate;
+ (void)setReloadingDelegate:(id)arg1;
+ (id)errorPresenter;
+ (void)setErrorPresenter:(id)arg1;
+ (BOOL)supportsMultipleInstancesPerFilePath;
+ (BOOL)automaticallyNotifiesObserversOfFilePath;
+ (BOOL)automaticallyNotifiesObserversOfActivity;
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)_errorSavingContainer:(id)arg1 code:(int)arg2;
+ (double)_defaltSlowAutosaveDelay;
+ (double)_defaltAutosaveDelay;
+ (BOOL)automaticallyNotifiesObserversOfContainerEdited;
+ (BOOL)_observeContainerDataFilePathsForChanges;
+ (id)_containerForSessionIdentifier:(id)arg1;
+ (void)_invalidateContainer:(id)arg1;
+ (void)_releaseContainer:(id)arg1;
+ (void)_retainContainer:(id)arg1;
+ (BOOL)_closeContainerIfNeeded:(id)arg1;
+ (void)_removeReferencesToContainer:(id)arg1;
+ (void)_decreaseCountForContainer:(id)arg1;
+ (void)_increaseCountForContainer:(id)arg1;
+ (unsigned long long)_countForContainer:(id)arg1;
+ (id)_openContainers;
+ (BOOL)isContainerOpenForFilePath:(id)arg1;
+ (id)retainedWrappedWorkspaceForContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 error:(id *)arg3;
+ (id)containersForFilePath:(id)arg1;
+ (id)retainedContainerForFilePath:(id)arg1;
+ (id)retainedContainerForFilePath:(id)arg1 workspace:(id)arg2;
+ (id)retainedContainerAtFilePath:(id)arg1 fileDataType:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
+ (id)_containerOpenInAnotherWorkspaceErrorForPath:(id)arg1;
+ (id)_noContainerClassForFileTypeError:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (id)containerExtensionForFileDataType:(id)arg1;
+ (id)containerLoadingModelObjectGraph;
+ (void)initialize;
@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) IDEGroup *rootGroup; // @synthesize rootGroup=_rootGroup;
@property(copy, nonatomic) DVTFilePath *itemBaseFilePath; // @synthesize itemBaseFilePath=_itemBaseFilePath;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) id <IDEContainerCore> containerCore; // @synthesize containerCore=_containerCore;
@property(retain) id <IDEContainerDelegate> containerDelegate; // @synthesize containerDelegate=_containerDelegate;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)customDataStore:(id)arg1 removeItemAtFilePath:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
- (void)customDataStore:(id)arg1 moveItemAtFilePath:(id)arg2 toFilePath:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (void)customDataStore:(id)arg1 makeFilePathsWritable:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
- (void)_unlockReadOnlyItems:(id)arg1 completionQueue:(id)arg2 completionBlock:(id)arg3;
- (id)_readOnlyItemsToUnlock;
- (void)_addReadOnlyItemPath:(id)arg1;
- (void)_removeAllReadOnlyItemPaths;
- (void)_removeReadOnlyItemPath:(id)arg1;
- (void)_updateSharedReadOnlyItemStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@property(readonly) NSURL *readOnlyItemURL;
- (void)debugPrintStructure;
- (void)debugPrintInnerStructure;
- (id)description;
@property(readonly) IDEActivityLogSection *integrityLog;
- (void)analyzeModelIntegrity;
@property(readonly, getter=isMajorGroup) BOOL majorGroup;
@property(readonly, getter=isEditable) BOOL editable;
- (void)_initRootGroup;
- (id)createRootGroup;
- (id)_itemBaseFilePathForFilePath:(id)arg1;
- (void)_makeRelativeFileReferencesInGroup:(id)arg1 relativeToNewBasePath:(id)arg2 oldBaseFilePath:(id)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (BOOL)setContainerFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_setContainerFilePath:(id)arg1 strict:(BOOL)arg2 error:(id *)arg3;
- (void)_setFilePath:(id)arg1;
- (void)_setFilePath:(id)arg1 strict:(BOOL)arg2 createContainerDataFilePathsToModDateMap:(BOOL)arg3;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (void)_makeAbsoluteFileReferencesInGroup:(id)arg1 relativeToFolderFilePath:(id)arg2 withPathString:(id)arg3;
@property(readonly) NSString *displayName;
- (void)_setTransitioningToNewFilePath:(BOOL)arg1;
- (void)_setExtension:(id)arg1;
- (void)_didUpdateActivity;
- (void)_willUpdateActivity;
- (void)_didTransitionToActivity:(int)arg1;
- (void)_containerDidLoad;
@property int activity;
- (BOOL)writeToFilePath:(id)arg1 forceWrite:(BOOL)arg2 error:(id *)arg3;
- (BOOL)didReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)willReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_readAsyncIfPossibleFromFilePath:(id)arg1 error:(id *)arg2;
- (id)_didReadOperationWithFilePath:(id)arg1;
- (id)_willReadOperationWithFilePath:(id)arg1;
- (id)_readOperationWithFilePath:(id)arg1;
- (BOOL)_canClosePreflightWithCheckedContainers:(id)arg1 error:(id *)arg2;
- (BOOL)_canClosePreflightOrError:(id *)arg1;
- (BOOL)ignoreLocalChanges;
- (void)_setContainerEdited;
- (void)_containerEditedDidChange;
- (BOOL)_saveContainerForAction:(int)arg1 error:(id *)arg2;
- (void)_scheduleAutosaveTimer;
- (void)_saveContainerPeriodically;
@property BOOL containerEdited;
- (id)_containerDataFilePaths;
- (id)_lastKnownModDateForContainerDataFile:(id)arg1;
- (void)_updateContainerDataFilePathsToModDateMap;
- (void)_createContainerDataFilePathsToModDateMap;
- (id)_modificationDateForFilePath:(id)arg1;
- (void)_clearContainerDataFilePathsToModDateMap;
- (void)_unregisterForChangesToContainerDataFilePath:(id)arg1;
- (void)_registerForChangesToContainerDataFilePath:(id)arg1;
- (void)_filePathDidChangeWithPendingChangeDictionary;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)_sessionIdentifier;
- (void)_invalidateContainerToDiscardInMemoryRepresentation:(BOOL)arg1;
- (void)_willInvalidateContainerToDiscardInMemoryRepresentation;
- (void)releaseContainer;
- (void)retainContainer;
- (void)_saveContainerIfNeeded;
- (id)init;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_removeSubcontainer:(id)arg1;
- (void)_addSubcontainer:(id)arg1;
- (void)_setContainerLoadingTokenForContainer:(id)arg1;
- (void)_removeContainerLoadingTokenForContainer:(id)arg1;
- (void)_locateFileReferencesRecursively;
- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
- (void)_scheduleResolvePendingFileReferencesOperation;
- (void)_handleContainerResolutionFailureForFileReference:(id)arg1;
- (void)_locateFileReferencesRecursivelyInGroup:(id)arg1;
- (void)_removePendingFileReference:(id)arg1;
- (void)_addPendingFileReference:(id)arg1;
- (id)_containerInstanceDescription;

@end

@interface IDEContainerReferenceResolutionStrategy : DVTReferenceResolutionStrategy
{
}

+ (id)currentSDKRelativeContainerResolutionStrategy;
+ (id)developerDirectoryRelativeContainerResolutionStrategy;
+ (id)buildProductsRelativeContainerResolutionStrategy;
+ (id)pathRelativeContainerResolutionStrategy;
+ (id)containerItselfContainerResolutionStrategy;
+ (id)containerRelativeContainerResolutionStrategy;
+ (id)groupRelativeContainerResolutionStrategy;
+ (id)absoluteContainerResolutionStrategy;
- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;
- (id)resolveInput:(id)arg1 inContext:(id)arg2 usingSnapshot:(id)arg3 error:(id *)arg4;
- (BOOL)canResolveInputInBackground;

@end

@interface IDEContainerAbsolutePathReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerPathRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerBuildProductsRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerContainerItselfReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerContainerRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)displayNameInContext:(id)arg1;
- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerCore : NSObject <IDEContainerCore>
{
    DVTFilePath *_filePath;
    DVTExtension *_containerExtension;
    int _currentActivity;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _isInvalidated;
}

+ (void)_invalidateContainerCore:(id)arg1;
+ (void)_releaseContainerCore:(id)arg1;
+ (void)_retainContainerCore:(id)arg1;
+ (BOOL)_closeContainerCoreIfNeeded:(id)arg1;
+ (void)_removeReferencesToContainerCore:(id)arg1;
+ (void)_decrementCountForContainerCore:(id)arg1;
+ (void)_incrementCountForContainerCore:(id)arg1;
+ (unsigned long long)_countForContainerCore:(id)arg1;
+ (id)_openContainerCores;
+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (BOOL)supportsFilePersistence;
+ (id)containerFileType;
+ (BOOL)isContainerCoreOpenForFilePath:(id)arg1;
+ (id)retainedContainerCoreForFilePath:(id)arg1;
+ (id)retainedContainerCoreAtFilePath:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
+ (id)containerExtensionForFileDataType:(id)arg1;
+ (void)initialize;
- (id)filePath;
- (id)containerExtension;
- (id)rootGroup;
- (int)currentActivity;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
- (void)invalidate;
- (void)releaseContainerCore;
- (void)retainContainerCore;
- (void)_saveContainerCoreIfNeeded;
- (id)init;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 error:(id *)arg3;

@end

@interface IDEContainerCurrentSDKRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerDeveloperDirectoryRelativeReferenceResolutionStrategy : IDEContainerPathRelativeReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerGroupRelativeReferenceResolutionStrategy : IDEContainerReferenceResolutionStrategy
{
}

- (id)resolveInput:(id)arg1 forContainer:(id)arg2 group:(id)arg3 inContext:(id)arg4 usingSnapshot:(id)arg5 error:(id *)arg6;

@end

@interface IDEContainerItem : DVTModelObject <DVTInvalidation, DVTReferenceResolverClient>
{
    IDEGroup *_superitem;
    NSMutableDictionary *_properties;
    NSString<DVTMacroExpansion> *_path;
    DVTReferenceResolver *_resolver;
    DVTStackBacktrace *_invalidationBacktrace;
    struct {
        unsigned int isInvalidated:1;
        unsigned int observingForBuildProductsRelative:1;
        unsigned int observingForCurrentSDKRelative:1;
        unsigned int observingForSourceTreeRelative:1;
    } _flags;
}

+ (id)keyPathsForValuesAffectingWrapsLines;
+ (id)keyPathsForValuesAffectingIndentWidth;
+ (id)keyPathsForValuesAffectingTabWidth;
+ (id)keyPathsForValuesAffectingUsesTabs;
+ (BOOL)automaticallyNotifiesObserversOfContainer;
+ (id)customResolutionStrategies;
+ (void)initialize;
@property(readonly) NSString<DVTMacroExpansion> *path; // @synthesize path=_path;
@property(readonly) DVTReferenceResolver *resolver; // @synthesize resolver=_resolver;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)_takePathAndResolutionStrategiesFromContainerItem:(id)arg1;
@property(readonly) DVTFilePath *resolvedFilePath;
- (BOOL)_getPathAndResolutionStrategiesForAbsolutePath:(id)arg1 path:(id *)arg2 resolutionStrategies:(id *)arg3;
- (BOOL)_getPath:(id *)arg1 forStrategies:(id)arg2;
- (BOOL)_getPath:(id *)arg1 forStrategies:(id)arg2 absolutePath:(id)arg3;
- (id)_absolutePath;
- (id)resolutionContextForStrategies:(id)arg1;
@property(readonly) unsigned long long aggregateSourceControlConflictStatus;
@property(readonly) int aggregateSourceControlServerStatus;
@property(readonly) int aggregateSourceControlLocalStatus;
@property(readonly) unsigned long long conflictStateForUpdateOrMerge;
@property(readonly) int sourceControlServerStatus;
@property(readonly) int sourceControlLocalStatus;
- (void)_setContainerItemEdited;
- (id)description;
- (void)debugPrintStructure;
- (void)debugPrintInnerStructure;
@property(copy) DVTSourceCodeLanguage *language;
@property BOOL wrapsLines;
@property long long indentWidth;
@property long long tabWidth;
@property BOOL usesTabs;
@property unsigned long long textEncoding;
@property unsigned long long lineEndings;
- (id)_textPreferences;
- (void)_setProperty:(id)arg1 forKey:(id)arg2;
- (id)_propertyForKey:(id)arg1 searchParent:(BOOL)arg2;
- (id)_propertiesCreatingIfNeeded;
@property(readonly) NSDictionary *properties;
- (id)name;
@property(readonly, getter=isEditable) BOOL editable;
- (void)_didSetContainer;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
@property(readonly) IDEContainer *container;
- (void)_setSuperitem:(id)arg1;
@property(readonly) IDEGroup *superitem;
- (void)setPath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)primitiveChangePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)resolverStrategiesDidChange:(id)arg1;
- (void)_configureReferenceResolutionStrategySpecificObservations;
- (void)_clearAllReferenceResolutionStrategySpecificObservations;
- (void)_setupSourceTreeRelativeObservations;
- (void)_clearSourceTreeRelativeObservations;
- (void)_setupCurrentSDKRelativeObservations;
- (void)_clearCurrentSDKRelativeObservations;
- (void)_setupBuildProductsRelativeObservations;
- (void)_clearBuildProductsRelativeObservations;
- (void)_workspaceBuildProductsLocationDidChange:(id)arg1;
- (void)_invalidateResolvedFilePath;
- (id)relativePathForPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)initWithPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)init;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)setReferenceStrategyFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLocationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPathFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setReferenceStyleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;

@end

@interface IDEContainerItemCore : NSObject <IDEContainerItemCore>
{
    id <IDEGroupCore> _parentGroup;
    NSString<DVTMacroExpansion> *_path;
}

@property(copy) NSString<DVTMacroExpansion> *path; // @synthesize path=_path;
@property(retain) id <IDEGroupCore> parentGroup; // @synthesize parentGroup=_parentGroup;
@property(readonly) id <IDEContainerCore> parentContainer;

@end

@interface IDEContainerQuery : NSObject
{
    id <DVTModelObject, DVTInvalidation> _containerGraphObject;
    id <DVTObservingToken> _containerGraphObjectValidObservationToken;
    id _skipSubgraphBlock;
    id _predicateBlock;
    NSMutableSet *_matches;
    BOOL _inObjectsDidChangeNotification;
}

+ (BOOL)automaticallyNotifiesObserversOfMatches;
- (void)_objectsDidChange:(id)arg1;
- (void)_updateWithInsertedMatches:(id)arg1 deletedMatches:(id)arg2;
- (void)_traverseContainerGraphObjects:(id)arg1 forDeletion:(BOOL)arg2 insertedMatches:(id)arg3 deletedMatches:(id)arg4;
- (BOOL)_isInterestedInContainerGraphObject:(id)arg1 forDeletion:(BOOL)arg2;
- (BOOL)_isTrackingContainerItem:(id)arg1 checkedContainers:(id)arg2;
- (BOOL)_isTrackingContainer:(id)arg1 checkedContainers:(id)arg2;
- (void)_traverseContainerGraphObject:(id)arg1 forDeletion:(BOOL)arg2 checkedContainers:(id)arg3 insertedMatches:(id)arg4 deletedMatches:(id)arg5;
- (void)_matchContainerGraphObject:(id)arg1 insertedMatches:(id)arg2 deletedMatches:(id)arg3;
- (void)_removeContainerGraphObject:(id)arg1 deletedMatches:(id)arg2;
- (void)_addContainerGraphObject:(id)arg1 insertedMatches:(id)arg2;
@property(readonly) NSSet *matches;
- (void)cancelQuery;
- (id)initWithContainerGraphObject:(id)arg1 skipSubgraphBlock:(id)arg2 predicateBlock:(void)arg3;

@end

@interface IDEContainerReadOnlyItem : NSObject <IDEReadOnlyItem>
{
    int _readOnlyStatus;
    IDEContainer *_container;
    DVTFilePath *_filePath;
}

@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (BOOL)makeWritableWithError:(id *)arg1;
- (void)updateReadOnlyStatus;
@property(readonly) NSURL *readOnlyItemURL;
- (id)description;
- (id)initWithFilePath:(id)arg1 container:(id)arg2;

@end

@interface IDEContainerReadOnlyListeningItem : IDEContainerReadOnlyItem <DVTInvalidation>
{
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _invalidated;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)parentFilePathDidChange;
- (void)filePathDidChange;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithFilePath:(id)arg1 container:(id)arg2;

@end

@interface IDEContainerWrapper : IDEScriptingWrapper
{
}

- (void)setRootGroup:(id)arg1;
- (void)setRealPath:(id)arg1;
- (void)setReadOnly:(BOOL)arg1;
- (void)setPath:(id)arg1;
- (void)setFullPath:(id)arg1;

@end

@interface IDEDebuggerCommandBreakpointAction : IDEBreakpointAction
{
    NSString *_consoleCommand;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *consoleCommand; // @synthesize consoleCommand=_consoleCommand;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)_reallyPerformActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (void)performActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (void)_debuggerCommandActionCommonInit;
- (id)init;

@end

@interface IDEDebuggerExpression : NSObject
{
    NSString *_expressionString;
    NSString *_result;
}

@property(copy) NSString *result; // @synthesize result=_result;
@property(copy) NSString *expressionString; // @synthesize expressionString=_expressionString;
- (void)resetResult;
- (BOOL)hasBeenEvaluated;
- (id)initWithExpressionString:(id)arg1;

@end

@interface IDEDebuggerSpecifier : NSObject
{
    DVTExtension *_extension;
    NSString *_correspondingLauncherIdentifier;
}

+ (BOOL)_isDefaultNonDebuggerLauncher:(id)arg1;
+ (id)_launcherExtensions;
+ (id)defaultDebuggerSpecifierForWorkspace:(id)arg1;
+ (id)_launcherPluginIdentiferForDebuggerPlugin:(id)arg1;
+ (id)allDebuggerSpecifiersIncludingNone;
+ (id)allDebuggerSpecifiers;
+ (id)_specifierWithIdentifer:(id)arg1 inArray:(id)arg2;
+ (id)specifierWithIdentiferInAllDebuggerSpecifierssIncludingNone:(id)arg1;
+ (id)specifierWithIdentiferInAllSpecifiers:(id)arg1;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly) NSString *correspondingLauncherIdentifier;
@property(readonly) NSString *identifier;
@property(readonly) NSString *displayName;
- (id)_initWithExtension:(id)arg1;

@end

@interface IDEDependencyGraphEntry : NSObject
{
    IDEDependencyGraph *_depGraph;
}

- (id)description;
- (id)initFromByteStream:(id)arg1 inDependencyGraph:(id)arg2;
- (BOOL)isValid;
- (void)invalidate;
- (id)dependencyGraph;
- (void)finalize;
- (id)init;
- (id)initInDependencyGraph:(id)arg1;

@end

@interface IDEDepGraphCommand : IDEDependencyGraphEntry
{
    NSString *_ident;
    NSMutableArray *_inputs;
    NSMutableArray *_outputs;
}

+ (id)readFromByteStream:(id)arg1 inDependencyGraph:(id)arg2 withNumbersToNodesMapping:(id)arg3 numbersToCommandsMapping:(id)arg4;
- (id)description;
- (void)writeToByteStream:(id)arg1 withNodesToNumbersMapping:(id)arg2 commandsToNumbersMapping:(id)arg3;
- (id)initFromByteStream:(id)arg1 inDependencyGraph:(id)arg2 withNumbersToNodesMapping:(id)arg3 numbersToCommandsMapping:(id)arg4;
- (void)addOutputPath:(id)arg1;
- (void)addOutputNode:(id)arg1;
- (void)addInputPath:(id)arg1;
- (void)addInputNode:(id)arg1;
- (id)outputNodeStates;
- (id)inputNodeStates;
- (id)identifier;
- (id)initInDependencyGraph:(id)arg1;
- (id)initWithIdentifier:(id)arg1 inDependencyGraph:(id)arg2;

@end

@interface IDEDepGraphNode : IDEDependencyGraphEntry
{
    IDEDepGraphNode *_supernode;
    NSMutableArray *_subnodes;
    int _subnodesLock;
    char _nameCStr[0];
}

+ (id)readFromByteStream:(id)arg1 inDependencyGraph:(id)arg2 withNumbersToNodesMapping:(id)arg3;
+ (id)nodeWithNameCStr:(const char *)arg1 inDependencyGraph:(id)arg2;
+ (id)nodeWithNameCStr:(const char *)arg1 length:(unsigned long long)arg2 inDependencyGraph:(id)arg3;
- (id)description;
- (void)writeToByteStream:(id)arg1 withNodesToNumbersMapping:(id)arg2;
- (id)initFromByteStream:(id)arg1 inDependencyGraph:(id)arg2 withNumbersToNodesMapping:(id)arg3;
- (id)subnodeWithSubpathCStr:(const char *)arg1 createIfNeeded:(BOOL)arg2;
- (id)path;
- (long long)getPathCStr:(char *)arg1 bufferSize:(unsigned long long)arg2;
- (id)name;
- (const char *)_nameCStr;
- (void)unlockSubnodes;
- (id)subnodes;
- (void)lockSubnodes;
- (id)supernode;
- (id)initInDependencyGraph:(id)arg1;
- (id)initWithNameCStr:(const char *)arg1 length:(unsigned long long)arg2 inDependencyGraph:(id)arg3;

@end

@interface IDEDepGraphNodeState : NSObject <NSCopying>
{
    IDEDepGraphNode *_node;
    long long _st_mtime;
    long long _st_mtimensec;
    long long _st_size;
    unsigned short _st_mode;
    unsigned int _st_flags;
}

+ (id)readFromByteStream:(id)arg1 withNumbersToNodesMapping:(id)arg2;
+ (id)currentNodeStateWithNode:(id)arg1;
- (id)description;
- (void)writeToByteStream:(id)arg1 withNodesToNumbersMapping:(id)arg2;
- (id)initFromByteStream:(id)arg1 withNumbersToNodesMapping:(id)arg2;
- (long long)size;
- (long long)mtime;
- (id)node;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithNode:(id)arg1;
- (id)initWithNode:(id)arg1 statBuffer:(const struct stat *)arg2;

@end

@interface IDEDependencyGraph : NSObject
{
    IDEDepGraphNode *_rootNode;
    IDEDepGraphNode *_baseNode;
    NSMutableDictionary *_commandsByIdent;
    struct dispatch_queue_s *_accessQueue;
    struct _opaque_pthread_rwlock_t;
/*
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } _rwLock;
*/
}

- (void)printNodes;
- (id)description;
- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (BOOL)writeToByteStream:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFile:(id)arg1 error:(id *)arg2;
- (BOOL)readFromByteStream:(id)arg1 error:(id *)arg2;
- (id)commandWithIdentifier:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)nodeWithPath:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)basePath;
- (void)finalize;
- (id)initWithBasePath:(id)arg1;

@end

@interface IDEDeveloperPaths : DVTDeveloperPaths
{
    DVTFilePath *_distributionArchivesLocation;
    id _distributionArchivesLocationNotificatonToken;
    id _distributionArchivesSourceTreesNotificationToken;
    DVTFilePath *_snapshotsDirectory;
    id _snapshotsDirectoryNotificatonToken;
    id _snapshotsDirectorySourceTreesNotificationToken;
}

- (id)templateSearchPath;
- (id)defaultWorkspaceDerivedDataLocation;
- (id)defaultDistributionArchivesLocation;
- (id)distributionArchivesLocation;
- (id)defaultSnapshotsDirectory;
- (id)snapshotsDirectory;
- (id)corePlugInSearchPathForPlatform:(id)arg1;

@end

@interface IDEDeveloperProfileServiceProvider : NSObject
{
}

- (id)protectionSpaceForLoginService;
- (void)syncCertificatesWithUsername:(id)arg1 password:(id)arg2 statusHandler:(id)arg3;

@end

@interface IDEDeviceAppDataReference : NSObject <DVTXMLUnarchiving>
{
    NSString *_resolvedPath;
    NSString *_appDataBundleId;
    NSString *_appDataDownloadDate;
}

@property(copy) NSString *appDataDownloadDate; // @synthesize appDataDownloadDate=_appDataDownloadDate;
@property(copy) NSString *appDataBundleId; // @synthesize appDataBundleId=_appDataBundleId;
@property(copy) NSString *resolvedPath; // @synthesize resolvedPath=_resolvedPath;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)setAppDataDownloadDateFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setAppDataBundleIdFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setResolvedPathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

@end

@interface IDEDiagnosticFixItItem : NSObject
{
    IDEDiagnosticActivityLogMessage *_diagnosticItem;
    NSString *_fixItString;
    DVTTextDocumentLocation *_replacementLocation;
}

@property(readonly) DVTTextDocumentLocation *replacementLocation; // @synthesize replacementLocation=_replacementLocation;
@property(readonly) NSString *fixItString; // @synthesize fixItString=_fixItString;
@property(retain) IDEDiagnosticActivityLogMessage *diagnosticItem; // @synthesize diagnosticItem=_diagnosticItem;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDiagnosticFixItItem:(id)arg1;
- (id)init;
- (id)initWithFixItString:(id)arg1 replacementLocation:(id)arg2;

@end

@interface IDEDisassemblyStorageSupport : NSObject
{
}

+ (unsigned long long)_integerFromHexString:(id)arg1;
+ (unsigned long long)_integerAddressFromLineOfDisassembly:(id)arg1;
+ (id)hexAddressFromLineOfDisassembly:(id)arg1;
+ (id)addressForLineNumber:(unsigned long long)arg1 inDisassemblyAtURL:(id)arg2;
+ (unsigned long long)_lineNumberForAddress:(id)arg1 inLinesOfDisassembly:(id)arg2;
+ (unsigned long long)lineNumberForAddress:(id)arg1 inDisassembly:(id)arg2;
+ (BOOL)isDisassemblyStorageURL:(id)arg1;

@end

@interface IDEEnvironmentVariableEntry : NSObject
{
    NSString *_key;
    NSString *_value;
    BOOL _isEnabled;
}

+ (id)environmentEntriesForLegacyValues:(id)arg1;
@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *value; // @synthesize value=_value;
@property(copy) NSString *key; // @synthesize key=_key;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setValueFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setKeyFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)description;
- (id)init;
- (id)initWithKey:(id)arg1 value:(id)arg2 enabled:(BOOL)arg3;

@end

@interface IDEExceptionBreakpoint : IDEBreakpoint
{
    int _scope;
    int _stopOnStyle;
    NSString *_exceptionName;
}

+ (BOOL)isAllObjectiveCExceptionsBreakpoint:(id)arg1;
+ (BOOL)isAllExceptionsBreakpoint:(id)arg1;
+ (BOOL)isCPPOrAllExceptionBreakpoint:(id)arg1;
+ (BOOL)isCPPExceptionBreakpoint:(id)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *exceptionName; // @synthesize exceptionName=_exceptionName;
@property int stopOnStyle; // @synthesize stopOnStyle=_stopOnStyle;
@property int scope; // @synthesize scope=_scope;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)matchesAllExceptionsInScope;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)init;

@end

@interface IDEExecutionAction : NSObject <DVTXMLUnarchiving>
{
    NSString *_title;
    IDEScheme *_runContext;
}

+ (id)actionType;
@property(retain) IDEScheme *runContext; // @synthesize runContext=_runContext;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly) BOOL needsCurrentArchiveVersion;
- (void)setTitleFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)operationForExecutionWithRunDestination:(id)arg1 schemeCommand:(int)arg2 error:(id *)arg3;
@property(readonly) NSDictionary *actionEnvironmentVariables;

@end

@interface IDEExecutionActionArchivingProxy : NSObject
{
    NSString *_actionExtensionID;
    IDEExecutionAction *_proxiedAction;
}

+ (id)actionProxyForAction:(id)arg1;
@property(readonly) IDEExecutionAction *proxiedAction; // @synthesize proxiedAction=_proxiedAction;
@property(readonly) NSString *actionExtensionID; // @synthesize actionExtensionID=_actionExtensionID;
- (void)addActionContent:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setActionTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;

@end

@interface IDEExecutionActionOperation : DVTOperation
{
    id _environmentPopulationBlock;
}

@property(copy) id environmentPopulationBlock; // @synthesize environmentPopulationBlock=_environmentPopulationBlock;

@end

@interface IDEExecutionActionType : NSObject
{
    NSString *_identifier;
}

+ (id)actionTypeWithIdentifier:(id)arg1 error:(id *)arg2;
+ (BOOL)point:(id)arg1 isSubpointOfPoint:(id)arg2;
+ (id)actionTypePoint;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;

@end

@interface IDEExecutionEnvironment : NSObject
{
    IDEWorkspaceArena *_workspaceArena;
    id <IDEClientTracking> _clientTracker;
    NSOperationQueue *_operationQueue;
    NSMutableArray *_executionTrackers;
    IDEExecutionTracker *_currentExecutionTracker;
    NSMutableSet *_pendingBuildOperations;
    IDEBuildOperation *_currentBuildOperation;
    int _buildState;
    int _lastBuildResult;
    NSMutableArray *_launchSessions;
    IDELaunchSession *_selectedLaunchSession;
    IDELaunchSession *_currentLaunchSession;
    IDEBreakpointManager *_breakpointManager;
    NSMapTable *_productNamesToBuildableProductsMapping;
    IDELogStore *_logStore;
    id <IDEPreBuildSavingDelegate> _preBuildSavingDelegate;
    BOOL _handlingLaunchSessionStateChange;
    BOOL _settingLaunchSessionForTabChange;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentLaunchSession;
+ (id)keyPathsForValuesAffectingLatestBuildLog;
+ (id)keyPathsForValuesAffectingLogRecords;
+ (BOOL)automaticallyNotifiesObserversForCurrentExecutionTracker;
+ (void)initialize;
@property(retain) id <IDEPreBuildSavingDelegate> preBuildSavingDelegate; // @synthesize preBuildSavingDelegate=_preBuildSavingDelegate;
@property(retain) id <IDEClientTracking> clientTracker; // @synthesize clientTracker=_clientTracker;
@property(copy) NSMapTable *productNamesToBuildableProductsMapping; // @synthesize productNamesToBuildableProductsMapping=_productNamesToBuildableProductsMapping;
@property(readonly) int lastBuildResult; // @synthesize lastBuildResult=_lastBuildResult;
@property(readonly) int buildState; // @synthesize buildState=_buildState;
@property(readonly) NSSet *pendingBuildOperations; // @synthesize pendingBuildOperations=_pendingBuildOperations;
@property(retain) IDEBuildOperation *currentBuildOperation; // @synthesize currentBuildOperation=_currentBuildOperation;
@property(retain) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property(retain) IDEBreakpointManager *breakpointManager; // @synthesize breakpointManager=_breakpointManager;
@property(retain, nonatomic) IDELaunchSession *currentLaunchSession; // @synthesize currentLaunchSession=_currentLaunchSession;
@property(retain, nonatomic) IDELaunchSession *selectedLaunchSession; // @synthesize selectedLaunchSession=_selectedLaunchSession;
@property(retain) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) IDEExecutionTracker *currentExecutionTracker; // @synthesize currentExecutionTracker=_currentExecutionTracker;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_addMissingErrorForFailedBuildToRecorder:(id)arg1;
- (void)_handleLaunchSession:(id)arg1 stateChange:(id)arg2;
- (void)_detectNameConflict:(char *)arg1 sameScheme:(char *)arg2 forLaunchSession:(id)arg3 add:(BOOL)arg4;
- (void)_detectNameConflict:(char *)arg1 sameScheme:(char *)arg2 forLaunchSession:(id)arg3 otherLaunchSession:(id)arg4;
- (void)_setStatusForExecutionTrackerInLaunchSession:(id)arg1 nameConflict:(BOOL)arg2 sameScheme:(BOOL)arg3;
- (void)_noteLaunchSessionTargetOutputStateChanged:(id)arg1;
- (void)_setSelectedLaunchSessionForTabChange:(id)arg1;
@property(readonly) IDEActivityLogSection *latestBuildLog;
@property(readonly) NSArray *logRecords;
- (void)updateLogsFromOperation:(id)arg1;
- (id)executeOperation:(id)arg1 withCommandName:(id)arg2 error:(id *)arg3;
- (id)initWithWorkspaceArena:(id)arg1;

// Remaining properties
@property(readonly) NSArray *executionTrackers; // @dynamic executionTrackers;
@property(readonly) NSArray *launchSessions; // @dynamic launchSessions;
@property(readonly) NSMutableArray *mutableExecutionTrackers; // @dynamic mutableExecutionTrackers;
@property(readonly) NSMutableArray *mutableLaunchSessions; // @dynamic mutableLaunchSessions;

@end

@interface IDEExecutionTracker : NSObject
{
    NSString *_statusDisplayName;
    DVTFilePath *_statusImageFilePath;
    IDELaunchSession *_launchSession;
    NSMutableArray *_subtrackers;
}

@property(retain) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain) DVTFilePath *statusImageFilePath; // @synthesize statusImageFilePath=_statusImageFilePath;
@property(retain) NSString *statusDisplayName; // @synthesize statusDisplayName=_statusDisplayName;
- (void)setStatusDisplayName:(id)arg1 statusImageFilePath:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)addSubtracker:(id)arg1;
- (void)cancel;
@property(readonly) BOOL isFinished;
@property(readonly) BOOL statusChanged;
- (id)init;

@end

@interface IDEExecutionOperationTracker : IDEExecutionTracker
{
    DVTOperation *_operation;
    BOOL _operationFinished;
}

@property(nonatomic) BOOL operationFinished; // @synthesize operationFinished=_operationFinished;
@property(retain) DVTOperation *operation; // @synthesize operation=_operation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)isFinished;
- (void)cancel;
- (id)initWithOperation:(id)arg1;

@end

@interface IDEExecutionRunnableTracker : IDEExecutionTracker <IDERunOperationWorkerTracker>
{
    BOOL _finishedRunning;
    IDERunOperationWorker *_worker;
}

- (void)runningDidFinish:(id)arg1 withError:(id)arg2;
- (void)cancel;
- (BOOL)isFinished;
- (id)initWithWorker:(id)arg1;

@end

@interface IDEFileBreakpoint : IDEBreakpoint
{
    NSURL *_documentURL;
    DVTTextDocumentLocation *_location;
    NSString *_filePath;
    NSString *_timestampString;
    long long _startingColumnNumber;
    long long _endingColumnNumber;
    long long _startingLineNumber;
    long long _endingLineNumber;
    NSString *_characterRangeString;
    NSString *_landmarkName;
    unsigned long long _landmarkType;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)propertiesAffectingPersistenceState;
@property unsigned long long landmarkType; // @synthesize landmarkType=_landmarkType;
@property(copy) NSString *landmarkName; // @synthesize landmarkName=_landmarkName;
@property(copy) DVTTextDocumentLocation *location; // @synthesize location=_location;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (id)ideModelObjectTypeIdentifier;
- (id)zeroBasedLocation;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)description;
- (void)setLocationFromZeroBasedLocation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayName;
- (id)initWithDocumentTextLocation:(id)arg1;

@end

@interface IDEFileBreakpointWrapper : IDEBreakpointWrapper
{
}

- (void)setLineNumber:(long long)arg1;
- (long long)lineNumber;
- (void)setFileReference:(id)arg1;
- (id)fileReference;

@end

@interface IDEFileBuildOperation : IDEBuildOperation
{
    DVTFilePath *_filePath;
}

@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void)addOperationsForBuildables;
- (id)_buildableWhichIncludesFilePath:(id)arg1 startingWithBuildable:(id)arg2 recursionDetectionSet:(id)arg3;
- (id)initWithBuildOperationDescription:(id)arg1 purpose:(int)arg2 configurationName:(id)arg3 buildables:(id)arg4 buildLog:(id)arg5 executionEnvironment:(id)arg6 overridingProperties:(id)arg7 activeRunDestination:(id)arg8 activeArchitecture:(id)arg9 parallelizeBuildables:(BOOL)arg10 buildImplicitDependencies:(BOOL)arg11 restorePersistedBuildResults:(BOOL)arg12;
- (id)initWithBuildOperationDescription:(id)arg1 purpose:(int)arg2 buildCommand:(int)arg3 configurationName:(id)arg4 buildables:(id)arg5 filePath:(id)arg6 buildLog:(id)arg7 executionEnvironment:(id)arg8 overridingProperties:(id)arg9 activeRunDestination:(id)arg10 activeArchitecture:(id)arg11 considerImplicitDependencies:(BOOL)arg12 restorePersistedBuildResults:(BOOL)arg13;

@end

@interface IDEFileReference : IDEContainerItem <IDEStructureEditing>
{
    DVTFileDataType *_assignedFileDataType;
    DVTFilePath *_watchedFilePath;
    DVTFilePath *_oldWatchedFilePath;
    DVTFilePath *_resolvedFilePath;
    DVTFileDataType *_lastKnownFileDataType;
    DVTFileDataType *_lastDiscoveredFileDataType;
    DVTFileDataType *_discoveredFileDataType;
    DVTExtension *_referencedContainerExtension;
    IDEContainer *_referencedContainer;
    BOOL _workaroundForProblem8727051;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    int _aggregateSourceControlLocalStatus;
    int _aggregateSourceControlServerStatus;
    unsigned long long _aggregateSourceControlConflictStatus;
    BOOL _sourceControlLocalStatusNeedsUpdate;
    BOOL _sourceControlServerStatusNeedsUpdate;
    BOOL _sourceControlConflictStatusNeedsUpdate;
}

+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlConflictStatus;
+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfAggregateSourceControlLocalStatus;
+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
+ (id)keyPathsForValuesAffectingName;
+ (id)fileReferenceAssociatesForPath:(id)arg1 forAllPathsToSameFile:(BOOL)arg2;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingIdeModelObjectTypeIdentifier;
@property(copy, nonatomic) DVTFileDataType *assignedFileDataType; // @synthesize assignedFileDataType=_assignedFileDataType;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (id)_structureEditNameForSuggestedName:(id)arg1;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (void)fileReferenceWasConfigured;
- (void)_takeConfigurationFromFileReference:(id)arg1;
- (void)invalidate;
- (void)debugPrintInnerStructure;
- (void)_updateSourceControlStatusIfNeeded;
- (void)_updateAggregateSourceControlConflictStatus;
- (void)_updateAggregateSourceControlServerStatus;
- (void)_updateAggregateSourceControlLocalStatus;
- (void)_setAggregateSourceControlConflictStatus:(unsigned long long)arg1;
- (void)_setAggregateSourceControlServerStatus:(int)arg1;
- (void)_setAggregateSourceControlLocalStatus:(int)arg1;
- (void)_updateConflictStateForUpdateOrMerge;
@property unsigned long long conflictStateForUpdateOrMerge;
- (void)_updateSourceControlServerStatus;
@property int sourceControlServerStatus;
- (void)_updateSourceControlLocalStatus;
@property int sourceControlLocalStatus;
- (unsigned long long)aggregateSourceControlConflictStatus;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (BOOL)isReferencedContainerLoaded;
- (void)_invalidateReferencedContainer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_referencedContainer;
@property(readonly) IDEContainer *referencedContainer;
- (BOOL)_workaroundForProblem8727051;
- (void)_invalidateReferencedContainerExtension;
@property(readonly) DVTExtension *referencedContainerExtension;
- (BOOL)_isBuildProductReference;
- (void)_invalidateFileDataType;
@property(readonly) DVTFileDataType *discoveredFileDataType;
@property(readonly) DVTFileDataType *lastKnownFileDataType;
- (void)_assignedFileDataTypeDidChange;
- (BOOL)_resolvedFilePathIsValid;
- (void)_resolvedFilePathDidChange:(id)arg1;
- (void)_invalidateResolvedFilePathUsingPath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_invalidateResolvedFilePath;
- (id)_resolvedFilePathIfAvailable;
@property(readonly) DVTFilePath *resolvedFilePath;
@property(readonly) NSString *name;
- (void)_invalidateStartingWith:(id)arg1 changeBlock:(id)arg2;
- (void)_invalidateStartingWith:(id)arg1;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
- (id)init;
- (void)setAssignedFileDataTypeFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSString *sourceControlCurrentRevision;

@end

@interface IDEFileReferenceContainerObserver : NSObject <DVTInvalidation>
{
    id _skipReferencePredicateBlock;
    id _updateHandlerBlock;
    DVTStackBacktrace *_invalidationBacktrace;
    NSMutableDictionary *_incrementalResults;
    NSMutableDictionary *_compositeResults;
    id <DVTObservingToken> _matchesKVOToken;
    IDEContainerQuery *_containerQuery;
    NSMutableSet *_incrementalRemovals;
    IDEContainer *_observedContainer;
    NSMutableSet *_observationBlocks;
    NSMutableSet *_previousFilePaths;
    double _postingDelay;
    struct dispatch_queue_s *_ioQueue;
    NSString *_identifier;
    NSSet *_observedTypes;
    BOOL _processConcurrently;
    BOOL _isInvalidated;
}

+ (void)unregisterObserver:(id)arg1;
+ (id)observerForContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(id)arg4;
+ (id)observerForContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(id)arg4 skipFileReferencePredicate:(void)arg5;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(nonatomic) BOOL processConcurrently; // @synthesize processConcurrently=_processConcurrently;
@property(nonatomic) double postingDelay; // @synthesize postingDelay=_postingDelay;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSSet *observedTypes; // @synthesize observedTypes=_observedTypes;
@property(readonly) IDEContainer *observedContainer; // @synthesize observedContainer=_observedContainer;
- (void)processPendingResults;
- (void)processResultForPath:(id)arg1 updateType:(long long)arg2;
- (void)postResults;
- (void)postResultsRetrospectiveResultsToObserverBlock:(id)arg1;
- (void)setResult:(id)arg1 forPath:(id)arg2;
- (void)matchedContainerItemsDidChange:(id)arg1;
- (void)invalidateProcessing;
- (void)invalidatePosting;
- (id)addObserver:(id)arg1;
- (id)description;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3 updateHandlerBlock:(id)arg4 skipFileReferencePredicate:(void)arg5;

@end

@interface IDEFileReferenceContainerObserverCacheKey : NSObject
{
    IDEContainer *_container;
    NSString *_identifier;
    NSSet *_types;
}

- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithContainerObserver:(id)arg1;
- (id)initWithContainer:(id)arg1 types:(id)arg2 identifier:(id)arg3;

@end

@interface IDEFileReferenceCore : IDEContainerItemCore <IDEFileReferenceCore>
{
    DVTFileDataType *_assignedDataType;
}

@property(copy) DVTFileDataType *assignedDataType; // @synthesize assignedDataType=_assignedDataType;

// Remaining properties
@property(readonly) id <IDEContainerCore> parentContainer;
@property(retain) id <IDEGroupCore> parentGroup;
@property(copy) NSString<DVTMacroExpansion> *path;

@end

@interface IDEItemReferenceWrapper : IDEContainerItemWrapper
{
}

- (void)setUsesTabs:(BOOL)arg1;
- (BOOL)usesTabs;
- (void)setTabWidth:(long long)arg1;
- (long long)tabWidth;
- (void)setRealPath:(id)arg1;
- (id)realPath;
- (void)setPath:(id)arg1;
- (id)path;
- (void)setLineEnding:(unsigned int)arg1;
- (unsigned int)lineEnding;
- (void)setIndentWidth:(long long)arg1;
- (long long)indentWidth;
- (void)setGroup:(id)arg1;
- (id)group;
- (void)setFullPath:(id)arg1;
- (id)fullPath;
- (void)setFileEncoding:(unsigned int)arg1;
- (unsigned int)fileEncoding;
- (void)setEntireContents:(id)arg1;
- (id)entireContents;
- (void)setContents:(id)arg1;
- (id)contents;
- (id)name;

@end

@interface IDEFileReferenceWrapper : IDEItemReferenceWrapper
{
}

- (void)setTag:(id)arg1;
- (void)setStatus:(int)arg1;
- (void)setRevisionNumber:(id)arg1;
- (void)setHeadRevisionNumber:(id)arg1;
- (void)setFileKind:(id)arg1;

@end

@interface IDEFolder : IDEContainer
{
    DVTDispatchLock *_generationLock;
    unsigned long long _updateOperationGeneration;
}

+ (BOOL)supportsMultipleInstancesPerFilePath;
+ (BOOL)_observeContainerDataFilePathsForChanges;
+ (BOOL)_THREAD_shouldAddFileWithName:(id)arg1;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (void)initialize;
- (void)invalidate;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_filePathDidChange:(id)arg1;
- (id)_THREAD_fileNamesAtFilePath:(id)arg1;
- (void)_updateSubitemsWithFileNames:(id)arg1;
- (id)_itemBaseFilePathForFilePath:(id)arg1;
- (id)createRootGroup;

@end

@interface IDEFolderCore : IDEContainerCore <IDEFolderCore>
{
}


// Remaining properties
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEFoundationTestInitializer : NSObject
{
}

+ (BOOL)initializeTestabilityOrError:(id *)arg1;

@end

@interface IDEFramework : IDEFolder
{
}

+ (id)containerTypeDisplayName;
+ (BOOL)_THREAD_shouldAddFileWithName:(id)arg1;
+ (void)initialize;
- (id)displayName;

@end

@interface IDEFrameworkCore : IDEContainerCore <IDEFrameworkCore>
{
}


// Remaining properties
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEGroup : IDEContainerItem <IDEStructureEditing>
{
    IDEContainer *_container;
    NSString *_name;
    DVTFilePath *_resolvedFilePath;
    DVTCopyOnWriteMutableArray *_subitems;
    BOOL _subitemsAreValid;
    BOOL _pendingAsynchronousUpdate;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    BOOL _sourceControlLocalStatusNeedsUpdate;
    BOOL _sourceControlServerStatusNeedsUpdate;
    BOOL _conflictStateForUpdateOrMergeNeedsUpdate;
}

+ (Class)_groupClassForGroup:(id)arg1;
+ (Class)_fileReferenceClassForFileReference:(id)arg1;
+ (Class)_groupClassForSubitems;
+ (Class)_fileReferenceClassForSubitems;
+ (id)_groupForFolderURL:(id)arg1 targetGroup:(id)arg2;
+ (id)_fileReferenceWithFileURL:(id)arg1 targetGroup:(id)arg2;
+ (BOOL)_shouldCreateContainerItemForFileURL:(id)arg1 isFolder:(char *)arg2;
+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
+ (BOOL)automaticallyNotifiesObserversOfSubitems;
+ (id)keyPathsForValuesAffectingConflictStateForUpdateOrMerge;
+ (id)keyPathsForValuesAffectingSourceControlServerStatus;
+ (id)keyPathsForValuesAffectingSourceControlLocalStatus;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (BOOL)createNewSubgroupAtIndex:(unsigned long long)arg1;
- (id)_availableNameBasedOn:(id)arg1;
- (id)_subgroupNamed:(id)arg1;
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)structureEditRemoveSubitemsPreflightForIndexes:(id)arg1 error:(id *)arg2;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (BOOL)canStructureEditSortSubitemsAtIndexes:(id)arg1 byNameOrByType:(BOOL)arg2;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
- (BOOL)_acceptsItem:(id)arg1;
- (BOOL)_isSubitemOfItem:(id)arg1;
- (void)_takeConfigurationFromGroup:(id)arg1;
- (void)_copyAndInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)invalidate;
- (void)debugPrintInnerStructure;
- (void)_invalidateComputedSourceControlStatus;
- (void)_setConflictStateForUpdateOrMergeNeedsUpdate;
- (void)_setSourceControlServerStatusNeedsUpdate;
- (void)_setSourceControlLocalStatusNeedsUpdate;
- (void)_setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)_setSourceControlServerStatus:(int)arg1;
- (void)_setSourceControlLocalStatus:(int)arg1;
- (unsigned long long)aggregateSourceControlConflictStatus;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (unsigned long long)conflictStateForUpdateOrMerge;
- (int)sourceControlServerStatus;
- (int)sourceControlLocalStatus;
- (void)invalidateComputedSubitems;
- (id)computedSubitemsWithOldSubitems:(id)arg1;
- (void)insertObject:(id)arg1 inGroupSubitemsAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromGroupSubitemsAtIndex:(unsigned long long)arg1;
- (void)insertGroupSubitems:(id)arg1 atIndexes:(id)arg2;
- (void)removeGroupSubitemsAtIndexes:(id)arg1;
- (unsigned long long)countOfGroupSubitems;
- (id)objectInGroupSubitemsAtIndex:(unsigned long long)arg1;
@property(readonly) NSMutableArray *mutableSubitems;
- (void)_setSubitems:(id)arg1;
@property(readonly) NSArray *subitems;
- (id)_subitems;
@property(readonly) BOOL subitemsAreComputed;
@property(readonly) BOOL subitemsAreEditable;
- (id)resolvedFilePath;
- (void)_invalidateResolvedFilePath;
- (void)changePath:(id)arg1 resolutionStrategies:(id)arg2;
- (void)_didSetContainer;
- (void)_setContainer:(id)arg1;
- (BOOL)_willSetContainer:(id)arg1;
- (id)container;
- (id)initWithPath:(id)arg1 resolutionStrategies:(id)arg2;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_addObject:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setNameFromUTF8String:(const char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDEGroupCore : IDEContainerItemCore <IDEGroupCore>
{
    id <IDEContainerCore> _parentContainer;
    NSString *_name;
    NSArray *_subitems;
}

@property(copy) NSArray *subitems; // @synthesize subitems=_subitems;
@property(copy) NSString *name; // @synthesize name=_name;
- (void)setParentContainer:(id)arg1;
@property(readonly) id <IDEContainerCore> parentContainer;

// Remaining properties
@property(retain) id <IDEGroupCore> parentGroup;
@property(copy) NSString<DVTMacroExpansion> *path;

@end

@interface IDEGroupWrapper : IDEItemReferenceWrapper
{
}

- (id)sdefSupport_fileReferenceForPath:(id)arg1;
- (void)insertInGroups:(id)arg1 atIndex:(long long)arg2;
- (void)insertInFileReferences:(id)arg1 atIndex:(long long)arg2;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)itemReferences;
- (id)groups;
- (id)fileReferences;

@end

@interface IDEInMemoryActivityLogRecord : IDEActivityLogRecord
{
    IDEInMemoryLogStore_Impl *_logStore;
    IDEActivityLogSection *_fullLog;
    DVTFileDataType *_documentType;
}

+ (id)keyPathsForValuesAffectingTimeStoppedRecording;
+ (id)keyPathsForValuesAffectingIsRecording;
- (double)timeStoppedRecording;
- (id)signature;
- (id)documentType;
- (double)timeStartedRecording;
- (id)title;
- (id)uniqueIdentifier;
- (id)domainType;
- (BOOL)isRecording;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(id)arg1;
- (BOOL)isRemoved;
- (id)initWithLog:(id)arg1 store:(id)arg2;

@end

@interface IDELogStore : NSObject
{
    NSMutableArray *_logRecords;
}

+ (id)onDiskOrInMemoryLogStoreInWorkspaceArena:(id)arg1 prefix:(id)arg2;
+ (void)initialize;
- (id)logRecordWithURL:(id)arg1;
- (id)addLog:(id)arg1 completionBlock:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;
@property BOOL preserveOldLogs; // @dynamic preserveOldLogs;

@end

@interface IDEInMemoryLogStore : IDELogStore
{
}

+ (id)inMemoryStore;

@end

@interface IDEInMemoryLogStore_Impl : IDEInMemoryLogStore
{
}

- (BOOL)preserveOldLogs;
- (void)setPreserveOldLogs:(BOOL)arg1;
- (void)_removeLogRecord:(id)arg1 completionBlock:(id)arg2;
- (id)addLog:(id)arg1 completionBlock:(id)arg2;

@end

@interface IDEIndex : NSObject <IDEIndexDatabaseDelegate>
{
    IDEWorkspace *_workspace;
    DVTFilePath *_databaseFile;
    IDEIndexingEngine *_engine;
    IDEIndexQPManager *_qpManager;
    NSMutableDictionary *_identifiersToIndexables;
    NSMutableDictionary *_indexablesToProductHeaders;
    NSMutableDictionary *_copiedHeadersToSources;
    IDEIndexDatabase *_workspaceDatabase;
    long long _purgeCount;
    DVTDispatchLock *_stateLock;
    DVTDispatchLock *_pchCreationLock;
    NSMutableDictionary *_pchFiles;
    NSDate *_lastErrorTime;
    BOOL _isInvalid;
    BOOL _isCancelled;
    BOOL _isInErrorRecoveryMode;
    BOOL _isReadOnly;
    id _indexableFileWasAddedNotificationObservingToken;
    id _indexableFileWillBeRemovedNotificationObservingToken;
    id _indexableDidRenameFileNotificationObservingToken;
    id _buildablesDidChangeNotificationObservingToken;
    id _buildSettingsDidChangeNotificationObservingToken;
    id _buildOperationDidStopNotificationObservingToken;
    id _indexingMetric;
}

+ (BOOL)languageSupportsSymbolColoring:(id)arg1;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
+ (id)pathToClang;
+ (id)_dataSourceExtensionForFile:(id)arg1 withLanguage:(id)arg2;
+ (void)syncPerformBlockOnMainThread:(id)arg1;
+ (void)initialize;
+ (BOOL)indexFollowsActiveScheme;
+ (id)schedulingLogAspect;
+ (id)clangInvocationLogAspect;
+ (id)symbolAdditionLogAspect;
+ (id)deferredMetricLogAspect;
+ (id)metricLogAspect;
+ (id)logAspect;
@property(retain, nonatomic) DVTPerformanceMetric *indexingMetric; // @synthesize indexingMetric=_indexingMetric;
@property(readonly, nonatomic) DVTFilePath *databaseFile; // @synthesize databaseFile=_databaseFile;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_workspaceDatabase;
- (id)mainFilesForFile:(id)arg1;
- (id)sdkForFile:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (void)_buildOperationDidStop:(id)arg1;
- (void)_buildSettingsDidChange:(id)arg1;
- (void)_activeRunDestinationDidChange:(id)arg1;
- (void)_activeRunContextDidChange:(id)arg1;
- (void)_clearAllCachedBuildSettings;
- (void)_computePreferredTargets;
- (id)databaseQueryProvider;
- (id)queryProviderForLocation:(id)arg1 highPriority:(BOOL)arg2;
- (id)queryProviderForFile:(id)arg1 highPriority:(BOOL)arg2;
- (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
- (id)effectivePathForHeader:(id)arg1;
- (void)didCancelIndexingPCHFile:(id)arg1;
- (id)createPCHFile:(id)arg1 willIndex:(BOOL)arg2 arguments:(id)arg3 prefix:(id)arg4;
- (void)databaseDidReportError:(id)arg1;
- (void)databaseDidLoad:(id)arg1;
- (void)databaseDidOpen:(id)arg1;
- (id)databaseProvidersAndVersions:(id)arg1;
- (void)database:(id)arg1 didForgetFiles:(id)arg2;
- (void)database:(id)arg1 didEndImportSession:(id)arg2;
- (void)databaseDidSave:(id)arg1;
- (void)databaseDidIndexHotFile:(id)arg1;
- (void)_respondToFileChangeNotification:(id)arg1;
@property(readonly, nonatomic) DVTFilePath *workspaceFile;
@property(readonly, nonatomic) NSString *workspaceName;
- (id)dataSourceExtensionForFile:(id)arg1 settings:(id)arg2;
- (id)_dataSourceExtensionForFile:(id)arg1 withSettings:(id)arg2;
- (id)settingsForFile:(id)arg1 indexable:(id)arg2;
- (id)_waitForSettingsForFile:(id)arg1 object:(id)arg2;
- (id)_waitForSettingsFromObject:(id)arg1;
- (void)waitForBuildSystem:(struct dispatch_semaphore_s *)arg1;
- (id)workspaceHeadersForIndexable:(id)arg1;
- (void)gatherProductHeadersForIndexable:(id)arg1;
- (long long)purgeCount;
- (void)purgeFileCaches;
- (void)close;
- (void)expediteIndexing;
- (void)_stopIndexing;
- (void)setThrottleFactor:(double)arg1;
- (void)resumeIndexing;
- (void)suspendIndexing;
@property(readonly, nonatomic) BOOL shouldAllowRefactoring;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (id)indexableForIdentifier:(id)arg1;
- (void)unregisterObject:(id)arg1;
- (void)registerObject:(id)arg1;
- (void)postNotificationName:(id)arg1;
- (void)postNotificationName:(id)arg1 userInfo:(id)arg2;
- (id)description;
- (void)setIndexState:(id)arg1;
- (id)indexState;
@property(readonly) DVTFilePath *workspaceBuildProductsDirPath;
@property(readonly) DVTFilePath *headerMapFilePath;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithWorkspace:(id)arg1;
- (id)initWithFolder:(id)arg1;
- (id)initWithFolder:(id)arg1 forWorkspace:(id)arg2;
- (id)_databaseFileURLForFolder:(id)arg1;
- (id)_oldDatabaseFolderForWorkspace:(id)arg1;
- (id)_databaseFolderForWorkspace:(id)arg1;
- (id)_databaseFolderForWorkspace:(id)arg1 useScheme:(BOOL)arg2;
- (BOOL)_reopenDatabaseWithRemoval:(BOOL)arg1;
- (BOOL)_createDatabaseFolder;
- (void)_setupObservers;
- (id)mainFileForSelectionFilePath:(id)arg1 buildSettings:(id *)arg2;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
- (id)_localizedPhraseForDependentObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2 sharedLanguageIdentifier:(id)arg3 sharedIndexableObject:(id)arg4;
- (id)_localizedDescriptionForObjCCompilationUnit:(id)arg1 errorLanguages:(id)arg2;
- (BOOL)_errorLanguages:(id *)arg1 forFilePath:(id)arg2 indexableObjects:(id)arg3;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2;
- (id)allClassesWithMembers:(id)arg1;
- (id)classesWithMembers:(id)arg1;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2;
- (id)symbolsForResolutions:(id)arg1;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 sortedUsingBlock:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2;
- (id)allSymbolsMatchingKind:(id)arg1;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2;
- (id)allProtocolsMatchingName:(id)arg1;
- (id)allClassesMatchingName:(id)arg1;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(id)arg6;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1;
- (id)topLevelProtocols;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1;
- (id)topLevelClasses;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5;
- (id)filesIncludedByFile:(id)arg1;
- (id)filesIncludingFile:(id)arg1;

@end

@interface IDEIndexSymbol : NSObject
{
    NSObject<IDEIndexQueryProvider> *_queryProvider;
    NSString *_name;
    DVTSourceCodeSymbolKind *_symbolKind;
    DVTSourceCodeLanguage *_symbolLanguage;
    NSString *_resolution;
    long long _rawKind;
    long long _rawLanguage;
    BOOL _lookedForModelOccurrence;
    BOOL _isVirtual;
    IDEIndexSymbolOccurrence *_modelOccurrence;
}

+ (id)newSymbolOfKind:(id)arg1 language:(id)arg2 name:(id)arg3 resolution:(id)arg4 forQueryProvider:(id)arg5;
+ (id)newSymbolOfRawKind:(long long)arg1 rawLanguage:(long long)arg2 name:(id)arg3 resolution:(id)arg4 forQueryProvider:(id)arg5;
+ (id)newSymbolOfRawKind:(long long)arg1 kind:(id)arg2 rawLanguage:(long long)arg3 language:(id)arg4 name:(id)arg5 resolution:(id)arg6 forQueryProvider:(id)arg7;
@property(nonatomic) BOOL isVirtual; // @synthesize isVirtual=_isVirtual;
@property(nonatomic) long long rawLanguage; // @synthesize rawLanguage=_rawLanguage;
@property(retain, nonatomic) DVTSourceCodeLanguage *symbolLanguage; // @synthesize symbolLanguage=_symbolLanguage;
@property(nonatomic) long long rawKind; // @synthesize rawKind=_rawKind;
@property(retain, nonatomic) DVTSourceCodeSymbolKind *symbolKind; // @synthesize symbolKind=_symbolKind;
@property(retain, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
- (id)qualifiedDisplayName;
- (id)_containerName;
- (id)displayName;
- (id)_nameFromFile;
- (id)referencingFiles;
- (id)containerSymbol;
- (id)containerSymbols;
- (id)definitions;
- (id)declarations;
- (id)occurrences;
- (void)setModelOccurrence:(id)arg1;
- (id)modelOccurrence;
- (BOOL)isInProject;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;

@end

@interface IDEIndexContainerSymbol : IDEIndexSymbol
{
}

- (id)children;

@end

@interface IDEIndexCategorySymbol : IDEIndexContainerSymbol
{
}

- (id)relatedClass;
- (id)properties;
- (id)instanceVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEIndexDataSource : NSObject
{
    DVTPerformanceMetric *_generatorMetric;
    NSString *_source;
}

+ (id)dataSourceVersion;
@property(retain, nonatomic) DVTPerformanceMetric *generatorMetric; // @synthesize generatorMetric=_generatorMetric;
@property(readonly, nonatomic) NSString *source; // @synthesize source=_source;
- (BOOL)generateDataForJob:(id)arg1;
- (BOOL)processJob:(id)arg1;
- (id)initWithSource:(id)arg1;

@end

@interface IDEIndexClangDataSource : IDEIndexDataSource
{
    IDEIndexingJob *_job;
    NSMutableDictionary *_sourcesToNewFiles;
    NSMutableArray *_containerStack;
    IDEIndexNewMainFile *_topLevelFile;
    IDEIndexNewFile *_topLevelSourceFile;
    void *_lastCXFile;
    IDEIndexNewFile *_lastNewFile;
    unsigned long long _numSymbolsReceived;
    unsigned long long _numVisits;
    unsigned long long _numSymbolsStored;
    unsigned long long _numReferencesSkipped;
    NSArray *_astArgs;
    NSString *_workingDirectory;
}

+ (id)createPCHFile:(BOOL)arg1 path:(id)arg2 arguments:(id)arg3 prefix:(id)arg4;
+ (BOOL)_argumentsHasMissingHeadermap:(id)arg1;
+ (void)logPCHFailure:(id)arg1;
+ (id)addHeaderMapInclude:(id)arg1 forBuildProductsDir:(id)arg2 useSpellChecking:(BOOL)arg3 toArguments:(id)arg4;
+ (id)canonicalPathForPath:(id)arg1 index:(id)arg2 arguments:(id)arg3 workingDirectory:(id *)arg4;
+ (id)workingDirFromArgs:(id)arg1;
+ (void)logMemoryUsage:(struct CXTranslationUnitImpl *)arg1 forFile:(id)arg2;
+ (BOOL)loggingMemoryUsage;
+ (id)resolutionForName:(id)arg1 kind:(id)arg2 containerName:(id)arg3;
+ (id)dataSourceVersion;
+ (long long)timingMode;
+ (void)initialize;
@property(nonatomic) unsigned long long numReferencesSkipped; // @synthesize numReferencesSkipped=_numReferencesSkipped;
@property(nonatomic) unsigned long long numSymbolsStored; // @synthesize numSymbolsStored=_numSymbolsStored;
@property(nonatomic) unsigned long long numVisits; // @synthesize numVisits=_numVisits;
@property(nonatomic) unsigned long long numSymbolsReceived; // @synthesize numSymbolsReceived=_numSymbolsReceived;
@property(retain, nonatomic) IDEIndexNewFile *lastNewFile; // @synthesize lastNewFile=_lastNewFile;
@property(nonatomic) void *lastCXFile; // @synthesize lastCXFile=_lastCXFile;
@property(readonly, nonatomic) IDEIndexNewFile *topLevelSourceFile; // @synthesize topLevelSourceFile=_topLevelSourceFile;
@property(readonly, nonatomic) IDEIndexNewMainFile *topLevelFile; // @synthesize topLevelFile=_topLevelFile;
@property(readonly, nonatomic) NSMutableArray *containerStack; // @synthesize containerStack=_containerStack;
@property(readonly, nonatomic) NSMutableDictionary *sourcesToNewFiles; // @synthesize sourcesToNewFiles=_sourcesToNewFiles;
@property(readonly, nonatomic) IDEIndexingJob *job; // @synthesize job=_job;
- (BOOL)generateDataForJob:(id)arg1;
- (BOOL)_addTopLevelFile:(id)arg1 includePath:(id)arg2;
- (void *)cursorVisitor;
- (id)_canonicalPathForPath:(id)arg1;
- (BOOL)_addSymbolWithName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 line:(long long)arg6 file:(id)arg7 container:(id)arg8 cursor:(CDStruct_a94d320b)arg9;
- (id)initWithSource:(id)arg1;

@end

@interface IDEIndexGenericQueryProvider : NSObject <IDEIndexQueryProvider>
{
    IDEIndexDatabase *_db;
    NSDictionary *_settings;
    NSString *_mainFile;
    NSString *_target;
    NSDictionary *_coveredFiles;
    double _lastAccess;
}

+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(retain, nonatomic) NSDictionary *coveredFiles; // @synthesize coveredFiles=_coveredFiles;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(copy, nonatomic) NSString *mainFile; // @synthesize mainFile=_mainFile;
@property double lastAccess; // @synthesize lastAccess=_lastAccess;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_db;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(id)arg3 forIndex:(void)arg4;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(id)arg6 forIndex:(void)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2 forIndex:(void)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2 forIndex:(void)arg3;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 forIndex:(id)arg6;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 sortedUsingBlock:(id)arg3 forIndex:(void)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
@property(readonly, nonatomic) BOOL hasAST; // @dynamic hasAST;
@property(readonly, nonatomic) NSString *pchFile; // @dynamic pchFile;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

@end

@interface IDEIndexClangQueryProvider : IDEIndexGenericQueryProvider
{
    DVTDispatchLock *_clangLock;
    void *_cxIndex;
    struct CXTranslationUnitImpl *_cxTU;
    long long _filePurgeCount;
    NSArray *_astArgs;
    NSString *_workingDirectory;
    struct {
        unsigned int _field1[4];
        void *_field2;
    } *_tokens;
    CDStruct_a94d320b *_cursors;
    DVTTextDocumentLocation *_processedLocation;
    DVTDispatchLock *_completionLock;
    id _completionBlock;
    unsigned int _numTokens;
    BOOL _throwOutCache;
}

+ (BOOL)supportsSymbolColoring;
+ (void)initialize;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)processedSymbolsInContext:(id)arg1 initFunction:(id)arg2 visitorFunction:(void)arg3 includeSymbolLocations:(id)arg4 withCurrentFileContentDictionary:(void)arg5 forIndex:(BOOL)arg6;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 sortedUsingBlock:(id)arg3 forIndex:(void)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)_symbolsMatchingName:(id)arg1 inContext:(id)arg2 cxTU:(struct CXTranslationUnitImpl *)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)_resolutionForCursor:(CDStruct_a94d320b)arg1;
- (void)_createSharedTranslationUnitWithCurrentFileContentDictionary:(id)arg1 index:(id)arg2;
- (id)_canonicalPathForFile:(void *)arg1 index:(id)arg2;
- (id)_canonicalPathForPath:(id)arg1 index:(id)arg2;
- (void)_logClangInvocationWithArguments:(id)arg1;
- (id)pchFile;
- (void)purgeCaches;
- (BOOL)hasAST;
- (void)finalize;
- (void)disposeCIndexAndTU;
- (void)disposeTokensAndCursors;
- (void)performCompletion:(id)arg1;
- (void)asyncPerformClang:(id)arg1;
- (void)performClang:(id)arg1;
- (void)processCompletions;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

@end

@interface IDEIndexClangTranslationUnit : NSObject
{
    NSString *_path;
    int _argc;
    const char **_argv;
    BOOL _isPCHFile;
    BOOL _shouldSave;
    unsigned int _tuOptions;
    void *_cxIndex;
    struct CXTranslationUnitImpl *_cxTranslationUnit;
}

- (void)dealloc;
- (void)finalize;
- (void)discard;
- (void)discardTU;
- (void)discardArgs;
- (void)logMemoryUsage;
- (void)logFailure;
- (void)logInvocation;
- (void)indexUsingDataSource:(id)arg1;
@property(readonly, nonatomic) struct CXTranslationUnitImpl *cxTranslationUnit;
- (void)resetArguments:(id)arg1;
- (id)initPCHWithPath:(id)arg1 arguments:(id)arg2 shouldSave:(BOOL)arg3;
- (id)initWithPath:(id)arg1 arguments:(id)arg2 usesPCHFile:(BOOL)arg3;

@end

@interface IDEIndexClassSymbol : IDEIndexContainerSymbol
{
    IDEIndexCollection *_subClasses;
}

- (id)allInterfaces;
- (id)interfaces;
- (id)allProtocols;
- (id)protocols;
- (id)allOccurrencesOfMembers:(id)arg1;
- (id)allSubclasses;
- (id)subclasses;
- (id)allSuperclasses;
- (id)superclasses;
- (id)categories;
- (id)ibOutletCollectionProperties;
- (id)ibOutletCollectionVariables;
- (id)ibOutletCollections;
- (id)ibOutletProperties;
- (id)ibOutletVariables;
- (id)ibOutlets;
- (id)ibActionMethods;
- (id)properties;
- (id)instanceVariables;
- (id)classVariables;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEIndexCollection : NSObject <NSFastEnumeration>
{
    IDEIndexDBTempTable *_tempTable;
    NSArray *_instantiatedRows;
}

@property(readonly, nonatomic) IDEIndexDBTempTable *tempTable; // @synthesize tempTable=_tempTable;
- (id)uniqueObjects;
- (id)onlyObject;
- (id)firstObject;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;
- (id)allObjects;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)instantiateRowsUpto:(unsigned long long)arg1;
- (void)finalize;
- (void)dropTempTable;
- (id)description;
- (id)initWithConnection:(id)arg1;
- (id)initWithArrayNoCopy:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithObject:(id)arg1;
- (id)init;

@end

@interface IDEIndexCompletionArray : NSMutableArray
{
    NSMutableArray *_array;
    void *_completionResults;
}

- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)finalize;
- (id)initWithCodeCompleteResults:(void *)arg1;

@end

@interface IDEIndexCompletionItem : NSObject
{
    void *_completionResult;
    NSString *_displayText;
    NSString *_displayType;
    NSString *_completionText;
    DVTSourceCodeSymbolKind *_symbolKind;
    long long _priority;
    NSString *_name;
}

@property long long priority; // @synthesize priority=_priority;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) BOOL notRecommended;
@property(readonly) DVTSourceCodeSymbolKind *symbolKind;
@property(readonly) NSAttributedString *descriptionText;
@property(readonly) NSString *completionText;
@property(readonly) NSString *displayType;
@property(readonly) NSString *displayText;
- (void)_fillInTheRest;
- (id)description;
- (id)initWithCompletionResult:(void *)arg1;

@end

@interface IDEIndexDBSQLStream : NSObject
{
}

- (void)willSubmitTransaction:(id)arg1;
- (id)newTransaction;
- (void)doSQL1:(id)arg1 withBindings:(id)arg2;
- (void)doSQL:(id)arg1;
- (void)doBlock:(id)arg1;
@property(readonly, nonatomic) IDEIndexDBConnection *dbConnection;
@property(readonly, nonatomic) IDEIndexDatabase *database;

@end

@interface IDEIndexDBConnection : IDEIndexDBSQLStream
{
    IDEIndexDatabase *_database;
    struct dispatch_queue_s *_runQueue;
    struct sqlite3 *_dbHandle;
    id _cancelCallback;
    long long _tempTableCount;
    NSMutableSet *_tempTables;
    BOOL _closing;
    int _inUseCount;
    int _collectionCount;
}

+ (void)initialize;
- (id)database;
- (void)finalize;
- (void)close;
- (void)wait;
- (void)reportSQLiteError:(int)arg1 function:(id)arg2 message:(const char *)arg3 info:(id)arg4;
- (void)finalizeSQLiteStmt:(struct sqlite3_stmt **)arg1;
- (void)runSQLiteStmt:(struct sqlite3_stmt **)arg1 sql:(id)arg2 bindings:(id)arg3 forEachRow:(void)arg4 whenDone:(id)arg5;
- (void)cancelWhen:(id)arg1;
- (BOOL)shouldCancel;
- (void)shutdown;
- (void)runSQLite:(id)arg1;
- (void)willSubmitTransaction:(id)arg1;
- (int)doSQLChanges:(id)arg1 withBindings:(id)arg2;
- (void)doSQLQuery:(id)arg1 withBindings:(id)arg2 forEachRow:(void)arg3;
- (void)didDropTempTable:(id)arg1;
- (void)didCreateTempTable:(id)arg1;
- (id)newTempTableWithName:(id)arg1 schema:(id)arg2;
- (id)newTempTableWithSchema:(id)arg1;
- (id)newTempTableName;
- (void)doBlock:(id)arg1;
- (id)dbConnection;
- (id)initWithDatabase:(id)arg1 create:(BOOL)arg2;

@end

@interface IDEIndexDBFactory : NSObject
{
    IDEIndexDBTransaction *_dbTransaction;
    NSString *_tableName;
    NSString *_columnNames;
    NSString *_values;
    NSString *_insertionSQL;
    struct sqlite3_stmt *_dbStatement;
    long long *_objectIdMap;
    long long _objectIdCount;
    long long _objectCount;
    NSString *_tempTableName;
    NSString *_insertionSQL2;
    struct sqlite3_stmt *_dbStatement2;
}

+ (void)initialize;
@property(readonly, nonatomic) long long objectCount; // @synthesize objectCount=_objectCount;
@property(readonly, nonatomic) IDEIndexDBTransaction *dbTransaction; // @synthesize dbTransaction=_dbTransaction;
- (void)finalize;
- (void)close;
- (long long)realObjectIdForId:(long long)arg1;
- (void)addObjectId:(long long *)arg1 withBindings:(id)arg2;
- (id)initWithTransaction:(id)arg1 table:(id)arg2 columns:(id)arg3;

@end

@interface IDEIndexDBStringStorage : NSObject
{
    NSURL *_fileURL;
    DVTDispatchLock *_lock;
    NSHashTable *_hashTable;
    NSMutableData *_data;
    long long _fileSize;
}

+ (void)initialize;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void)findStringsContaining:(const char *)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 forEachResult:(id)arg5;
- (id)findStringAtOffset:(long long)arg1 callback:(id)arg2;
- (id)writeChangesToDisk;
- (long long)offsetOfString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (void)close;
- (id)open;
- (id)initWithFileURL:(id)arg1;

@end

@interface IDEIndexDBTempTable : NSObject
{
    IDEIndexDBConnection *_dbConnection;
    NSString *_tableName;
    BOOL _readOnly;
    long long _count;
}

@property(readonly, nonatomic) IDEIndexDBConnection *dbConnection; // @synthesize dbConnection=_dbConnection;
- (void)enumerateFromOffset:(long long)arg1 limit:(long long)arg2 forEachRow:(id)arg3;
- (long long)count;
- (void)connectionDidClose;
- (void)drop;
- (int)insertSQLChanges:(id)arg1 withBindings:(id)arg2;
@property(readonly, nonatomic) IDEIndexDatabase *database;
- (id)description;
- (id)initWithConnection:(id)arg1 name:(id)arg2 schema:(id)arg3;

@end

@interface IDEIndexDBTransaction : IDEIndexDBSQLStream
{
    NSMutableArray *_runQueue;
    IDEIndexDBSQLStream *_parent;
    NSMutableArray *_dbFactories;
}

@property(retain, nonatomic) IDEIndexDBSQLStream *parent; // @synthesize parent=_parent;
- (void)submit;
- (void)closeFactories;
- (id)newFactoryForTable:(id)arg1 columns:(id)arg2;
- (void)doBlock:(id)arg1;
@property(readonly, nonatomic) unsigned long long queueSize;
- (id)dbConnection;
- (id)init;

@end

@interface IDEIndexDatabase : NSObject
{
    NSURL *_fileURL;
    IDEIndexImporter *_importer;
    NSMutableArray *_dbConnections;
    DVTDispatchLock *_dbConnectionsLock;
    NSMutableDictionary *_rawKindForSymbolKind;
    NSMutableDictionary *_symbolKindForRawKind;
    NSDictionary *_rawLanguageForSymbolLanguage;
    NSDictionary *_symbolLanguageForRawLanguage;
    NSObject<IDEIndexDatabaseDelegate> *_delegate;
    IDEIndexDatabaseQueryProvider *_queryProvider;
    BOOL _readonly;
    BOOL _diagnosticMode;
    BOOL _enabledWAL;
    NSMutableArray *_errors;
    DVTDispatchLock *_errorLock;
    IDEIndexDBStringStorage *_directoryStringStorage;
    IDEIndexDBStringStorage *_filenameStringStorage;
    IDEIndexDBStringStorage *_spellingStringStorage;
    IDEIndexDBStringStorage *_resolutionStringStorage;
    NSDictionary *_rootPathsTrie;
    NSMutableDictionary *_rootPathsCache;
}

+ (id)auxTargetID;
+ (id)pchTargetID;
+ (void)reportException:(id)arg1;
+ (BOOL)verboseLogging;
+ (void)logCritical:(id)arg1;
+ (void)logVerbose:(id)arg1;
+ (void)log:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) BOOL enabledWAL; // @synthesize enabledWAL=_enabledWAL;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
@property(retain, nonatomic) NSObject<IDEIndexDatabaseDelegate> *delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IDEIndexImporter *importer; // @synthesize importer=_importer;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void)saveStringStorage;
- (void)findSpellingStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(id)arg6 forEachResult:(void)arg7;
- (void)findFilenameStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(id)arg6 forEachResult:(void)arg7;
- (void)findStringsContaining:(id)arg1 inStorage:(id)arg2 anchorStart:(BOOL)arg3 anchorEnd:(BOOL)arg4 subsequence:(BOOL)arg5 lowercase:(BOOL)arg6 cancelWhen:(id)arg7 forEachResult:(void)arg8;
- (id)filePathForDirectoryAtOffset:(long long)arg1 fileAtOffset:(long long)arg2;
- (char *)resolutionCStringAtOffset:(long long)arg1;
- (char *)spellingCStringAtOffset:(long long)arg1;
- (char *)filenameCStringAtOffset:(long long)arg1;
- (char *)directoryCStringAtOffset:(long long)arg1;
- (char *)cStringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (id)resolutionStringAtOffset:(long long)arg1;
- (id)spellingStringAtOffset:(long long)arg1;
- (id)filenameStringAtOffset:(long long)arg1;
- (id)directoryStringAtOffset:(long long)arg1;
- (id)stringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (long long)offsetOfResolutionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfFilenameString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfDirectoryString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfString:(id)arg1 inStorage:(id)arg2 addIfMissing:(BOOL)arg3;
- (void)registerSymbolLanguages:(id)arg1;
- (id)symbolLanguageForRawLanguage:(long long)arg1;
- (long long)rawLanguageForSymbolLanguage:(id)arg1;
- (void)addKindsTableToConnection:(id)arg1;
- (void)registerSymbolKinds:(id)arg1;
- (id)symbolKindForRawKind:(long long)arg1;
- (long long)rawKindForSymbolKind:(id)arg1;
- (void)purgeStaleData:(id)arg1;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (void)registerHotFile:(id)arg1;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (void)registerTarget:(id)arg1 outOfDateCallback:(id)arg2;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (id)mainFilesForFile:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (BOOL)isKnownFile:(id)arg1;
- (id)mainFilesForTarget:(id)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (id)filesForMainFile:(id)arg1 target:(id)arg2;
- (BOOL)isProjectFile:(id)arg1;
- (id)rebuildProjectFiles:(id)arg1;
- (BOOL)updateProjectFiles:(id)arg1;
- (BOOL)isProjectDirectory:(id)arg1;
- (void)setRootPaths:(id)arg1;
- (id)newImportSession;
- (id)providersAndVersions;
@property(readonly, nonatomic) NSArray *errors;
- (void)reportErrorCode:(long long)arg1 description:(id)arg2 reason:(id)arg3;
- (void)reportError:(id)arg1;
- (void)didReportError;
- (void)didForgetFiles:(id)arg1;
- (void)sendDelegateDidForgetFiles:(id)arg1;
- (void)didEndSession:(id)arg1;
- (void)sendDelegateDidEndImportSession:(id)arg1;
- (void)didSave;
- (void)didIndexHotFile;
- (void)didLoad;
- (void)close;
- (void)releaseQueryConnection:(id)arg1;
- (id)obtainQueryConnection:(id)arg1;
- (id)newConnection;
- (void)openReadonly:(BOOL)arg1 diagnosticMode:(BOOL)arg2;
- (void)openInDiagnosticMode;
- (void)openReadonly;
- (void)open;
- (id)initWithFileURL:(id)arg1;

@end

@interface IDEIndexDatabaseQueryProvider : NSObject <IDEIndexQueryProvider>
{
    IDEIndexDatabase *_database;
    NSDictionary *_settings;
    DVTDispatchLock *_cacheLock;
    NSDictionary *_symbolCountsByKind;
}

+ (BOOL)supportsSymbolColoring;
+ (id)locationForURL:(id)arg1 locator:(id)arg2;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (BOOL)isProjectSymbol:(id)arg1;
- (id)timestampForFile:(id)arg1;
- (id)locationForSymbolOccurrence:(id)arg1;
- (id)correspondingSymbolForOccurrence:(id)arg1;
- (id)relatedClassForCategory:(id)arg1;
- (id)propertiesForCategory:(id)arg1;
- (id)instanceVariablesForCategory:(id)arg1;
- (id)instanceMethodsForCategory:(id)arg1;
- (id)classMethodsForCategory:(id)arg1;
- (id)allImplementingClassesForProtocol:(id)arg1;
- (id)implementingClassesForProtocol:(id)arg1;
- (id)subProtocolsForProtocol:(id)arg1;
- (id)allSuperProtocolsForProtocol:(id)arg1;
- (id)superProtocolsForProtocol:(id)arg1;
- (id)propertiesForProtocol:(id)arg1;
- (id)instanceMethodsForProtocol:(id)arg1;
- (id)classMethodsForProtocol:(id)arg1;
- (id)allInterfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1;
- (id)interfacesForClass:(id)arg1 andSuperclasses:(BOOL)arg2;
- (id)allProtocolsForClass:(id)arg1;
- (id)protocolsForClass:(id)arg1;
- (id)allOccurrencesOfMembers:(id)arg1 forClass:(id)arg2;
- (id)allSubClassesForClass:(id)arg1;
- (id)subClassesForClass:(id)arg1;
- (id)allSuperClassesForClass:(id)arg1;
- (id)superClassesForClass:(id)arg1;
- (id)categoriesForClass:(id)arg1;
- (id)ibOutletCollectionPropertiesForClass:(id)arg1;
- (id)ibOutletCollectionVariablesForClass:(id)arg1;
- (id)ibOutletCollectionsForClass:(id)arg1;
- (id)ibOutletPropertiesForClass:(id)arg1;
- (id)ibOutletVariablesForClass:(id)arg1;
- (id)ibOutletsForClass:(id)arg1;
- (id)ibActionMethodsForClass:(id)arg1;
- (id)propertiesForClass:(id)arg1;
- (id)instanceVariablesForClass:(id)arg1;
- (id)classVariablesForClass:(id)arg1;
- (id)instanceMethodsForClass:(id)arg1;
- (id)classMethodsForClass:(id)arg1;
- (id)childrenForContainer:(id)arg1;
- (id)referencingFilesForSymbol:(id)arg1;
- (id)containerSymbolForSymbol:(id)arg1;
- (id)containerSymbolsForSymbol:(id)arg1;
- (id)definitionsForSymbol:(id)arg1;
- (id)declarationsForSymbol:(id)arg1;
- (id)occurrencesForSymbol:(id)arg1;
- (id)modelOccurrenceForSymbol:(id)arg1;
- (id)filesWithSymbolOccurrencesMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allClassesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 forIndex:(id)arg2;
- (id)classesWithMembers:(id)arg1 andSubclasses:(BOOL)arg2;
- (id)membersMatchingName:(id)arg1 kinds:(id)arg2 forInterfaces:(id)arg3 forIndex:(id)arg4;
- (id)membersMatchingKinds:(id)arg1 forInterfaces:(id)arg2 forIndex:(id)arg3;
- (id)tempTableForSymbols:(id)arg1 shouldDrop:(char *)arg2;
- (id)kindsStringForKinds:(id)arg1;
- (id)symbolsForResolutions:(id)arg1 forIndex:(id)arg2;
- (id)importedFileAtDocumentLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)collectionElementTypeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)typeSymbolForSymbol:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)referencesToSymbolMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)referencesToSymbol:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsUsedInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)symbolsOccurrencesInContext:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeDiagnosticsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 forIndex:(id)arg3;
- (id)codeCompletionsAtLocation:(id)arg1 withCurrentFileContentDictionary:(id)arg2 sortedUsingBlock:(id)arg3 forIndex:(void)arg4;
- (id)topLevelSymbolsInFile:(id)arg1 forIndex:(id)arg2;
- (id)allSymbolsMatchingNames:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingName:(id)arg1 kind:(id)arg2 forIndex:(id)arg3;
- (unsigned long long)countOfSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 forIndex:(id)arg3;
- (id)allSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(id)arg3 forIndex:(void)arg4;
- (id)allProtocolsMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)allClassesMatchingName:(id)arg1 forIndex:(id)arg2;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 withCurrentFileContentDictionary:(id)arg3 forIndex:(id)arg4;
- (id)symbolsMatchingName:(id)arg1 inContext:(id)arg2 forIndex:(id)arg3;
- (id)symbolsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 cancelWhen:(id)arg6 forIndex:(void)arg7;
- (id)topLevelProtocolsWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2 forIndex:(void)arg3;
- (id)topLevelClassesWorkspaceOnly:(BOOL)arg1 cancelWhen:(id)arg2 forIndex:(void)arg3;
- (id)topLevelSymbolsMatchingKind:(id)arg1 workspaceOnly:(BOOL)arg2 cancelWhen:(id)arg3 forIndex:(void)arg4;
- (id)filesContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 ignoreCase:(BOOL)arg5 forIndex:(id)arg6;
- (id)filesIncludedByFile:(id)arg1 forIndex:(id)arg2;
- (id)filesIncludingFile:(id)arg1 forIndex:(id)arg2;
- (void)didSave;
- (void)purgeCaches;
- (id)initWithSettings:(id)arg1 database:(id)arg2;

@end

@interface IDEIndexFileCollection : IDEIndexCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexImportSession : NSObject
{
    IDEIndexDatabase *_database;
    BOOL _wasSaved;
    BOOL _hasEnded;
}

@property(readonly, nonatomic) BOOL hasEnded; // @synthesize hasEnded=_hasEnded;
@property(readonly, nonatomic) BOOL wasSaved; // @synthesize wasSaved=_wasSaved;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void)didEnd;
- (void)endSession;
- (void)didSave;
- (id)newMainFileWithPath:(id)arg1 target:(id)arg2 source:(id)arg3 modified:(id)arg4;
- (id)initWithDatabase:(id)arg1;

@end

@interface IDEIndexImporter : NSObject
{
    IDEIndexDatabase *_database;
    struct dispatch_queue_s *_project_queue;
    struct dispatch_queue_s *_autoQuery_queue;
    struct dispatch_queue_s *_import_queue;
    int _isClosing;
    IDEIndexDBConnection *_dbConnection;
    NSDictionary *_providers;
    IDEIndexDBTransaction *_dbTransaction;
    NSMutableSet *_pendingMainFiles;
    IDEIndexDBFactory *_fileFactory;
    IDEIndexDBFactory *_unitFactory;
    IDEIndexDBFactory *_groupFactory;
    IDEIndexDBFactory *_contextFactory;
    NSMutableDictionary *_permanentFileCache;
    NSMutableDictionary *_fileCache;
    NSMutableDictionary *_unitCache;
    NSMutableDictionary *_permanentGroupCache;
    NSMutableSet *_staleGroups;
    NSMutableDictionary *_groupCache;
    long long _symbolCount;
    int _filesWaiting;
    NSSet *_projectFiles;
    IDEIndexUniqueStringMap *_uniqueStrings;
    NSMutableDictionary *_fileDates;
    NSMutableDictionary *_filesByMainFileByTarget;
    NSMutableDictionary *_outOfDateFilesByTarget;
    BOOL _isReady;
    NSMutableDictionary *_spliceTable;
    int _totalDeferredJobs;
    int _changedDeferredJobs;
    NSMutableSet *_hotFiles;
    BOOL _didIndexHotFile;
}

+ (void)initialize;
@property(readonly, nonatomic) BOOL isReady; // @synthesize isReady=_isReady;
@property(readonly, nonatomic) IDEIndexDatabase *database; // @synthesize database=_database;
- (void)purgeStaleFilesUsingTransaction:(id)arg1;
- (void)purgeStaleGroupsUsingTransaction:(id)arg1;
- (void)purgeStaleData:(id)arg1;
- (void)submitTransaction;
- (void)endSession:(id)arg1;
- (void)didSave;
- (void)submitMainFile:(id)arg1;
- (void)resetSpliceTable;
- (void)updateSpliceTableForDirtyFile:(id)arg1 oldGroupId:(long long)arg2 oldModified:(double)arg3;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (long long)existingFileIdForPath:(id)arg1;
- (long long)fileIdForPath:(id)arg1;
- (long long)realGroupIdForId:(long long)arg1;
- (long long)realUnitIdForId:(long long)arg1;
- (long long)realFileIdForId:(long long)arg1;
- (void)finalize;
- (void)close;
- (void)logStatistics;
- (void)forgetOutOfDateMainFile:(id)arg1 forTarget:(id)arg2;
- (void)noteOutOfDateMainFile:(id)arg1 file:(id)arg2 forTarget:(id)arg3;
- (void)noteOutOfDateFile:(id)arg1;
- (id)storeTimestamp:(id)arg1 modtime:(double)arg2 forFile:(id)arg3 mainFile:(id)arg4 target:(id)arg5 spliced:(BOOL)arg6;
- (void)registerHotFile:(id)arg1;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (void)registerTarget:(id)arg1 outOfDateCallback:(id)arg2;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (id)timestampForFile:(id)arg1;
- (id)mainFilesForFile:(id)arg1;
- (id)mainFilesForFile:(id)arg1 followPCH:(BOOL)arg2;
- (id)mainFilesForTarget:(id)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (BOOL)isProjectFile:(id)arg1;
- (void)finishLoading;
- (id)initWithDatabase:(id)arg1;

@end

@interface IDEIndexNewFile : NSObject
{
    DVTFilePath *_path;
    NSDate *_modified;
    IDEIndexNewFile *_includer;
    long long _fileId;
    long long _groupId;
    char **_vectorSegments;
    int _nVectorSegments;
    int _vectorBytesRemaining;
    NSMutableArray *_containers;
    IDEIndexDBFactory *_symbolFactory;
    IDEIndexDBFactory *_referenceFactory;
    void *_digestContext;
    NSString *_signature;
    void *_dataSourceContext;
    IDEIndexNewMainFile *_mainFile;
}

+ (void)poolFree:(void *)arg1;
+ (void *)poolMalloc:(unsigned long long)arg1;
+ (void)_pushSegment:(void *)arg1;
+ (void)_poolDelayedFree;
+ (void *)_popSegment;
+ (void)initialize;
@property(nonatomic) void *dataSourceContext; // @synthesize dataSourceContext=_dataSourceContext;
@property(nonatomic) long long groupId; // @synthesize groupId=_groupId;
@property(nonatomic) long long fileId; // @synthesize fileId=_fileId;
@property(readonly, nonatomic) IDEIndexNewMainFile *mainFile; // @synthesize mainFile=_mainFile;
@property(readonly, nonatomic) NSDate *modified; // @synthesize modified=_modified;
@property(readonly, nonatomic) DVTFilePath *path; // @synthesize path=_path;
@property(readonly, nonatomic) NSString *signature;
- (id)newFileWithPath:(id)arg1 modified:(id)arg2;
- (id)newSymbolWithName:(id)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(id)arg5 lineNumber:(long long)arg6 locator:(id)arg7 container:(id)arg8;
- (void)addSymbolWithName:(id)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(id)arg5 lineNumber:(long long)arg6 locator:(id)arg7 container:(id)arg8;
- (id)newSymbolWithCName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 locator:(id)arg7 container:(id)arg8;
- (void)addSymbolWithCName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 locator:(id)arg7 container:(id)arg8;
- (void)createSymbolWithName:(const char *)arg1 kind:(id)arg2 role:(int)arg3 language:(id)arg4 resolution:(const char *)arg5 lineNumber:(long long)arg6 locator:(id)arg7 container:(id)arg8 pSymbol:(id *)arg9;
- (id)description;
- (void)freeMemory;
- (void)dontSubmitSymbols;
- (long long)submitSymbolsTo:(id)arg1;
- (long long)realSymbolIdForId:(long long)arg1;
@property(readonly, nonatomic) long long realGroupId;
@property(readonly, nonatomic) long long realFileId;
@property __weak IDEIndexNewFile *includer;
- (void)dealloc;
- (void)finalize;
- (id)initWithPath:(id)arg1 modified:(id)arg2;

@end

@interface IDEIndexNewMainFile : IDEIndexNewFile
{
    IDEIndexImportSession *_session;
    NSString *_target;
    NSString *_source;
    DVTFilePath *_pchPath;
    NSMutableArray *_files;
    NSSet *_dirtyFiles;
    long long _unitId;
    BOOL _deferred;
}

@property(nonatomic, getter=isDeferred) BOOL deferred; // @synthesize deferred=_deferred;
@property(nonatomic) long long unitId; // @synthesize unitId=_unitId;
@property(retain, nonatomic) NSSet *dirtyFiles; // @synthesize dirtyFiles=_dirtyFiles;
@property(readonly, nonatomic) NSArray *files; // @synthesize files=_files;
@property(retain, nonatomic) DVTFilePath *pchPath; // @synthesize pchPath=_pchPath;
@property(copy, nonatomic) NSString *source; // @synthesize source=_source;
@property(copy, nonatomic) NSString *target; // @synthesize target=_target;
@property(retain, nonatomic) IDEIndexImportSession *session; // @synthesize session=_session;
- (void)didSubmit;
- (void)submit;
- (long long)realGroupIdForId:(long long)arg1;
- (long long)realFileIdForId:(long long)arg1;
@property(readonly, nonatomic) long long realUnitId;
- (id)importer;
- (void)addFile:(id)arg1;
- (id)initWithPath:(id)arg1 modified:(id)arg2;

@end

@interface IDEIndexNewSymbol : NSObject
{
    IDEIndexNewFile *_file;
    long long _lineNumber;
    long long _symbolId;
    unsigned long long _containerSeq;
}

@property(nonatomic) unsigned long long containerSeq; // @synthesize containerSeq=_containerSeq;
@property(nonatomic) long long symbolId; // @synthesize symbolId=_symbolId;
@property(readonly, nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly, nonatomic) IDEIndexNewFile *file; // @synthesize file=_file;
@property(readonly, nonatomic) long long realSymbolId;
- (id)initWithFile:(id)arg1 lineNumber:(long long)arg2;

@end

@interface IDEIndexProtocolSymbol : IDEIndexContainerSymbol
{
}

- (id)allImplementingClasses;
- (id)implementingClasses;
- (id)subProtocols;
- (id)allSuperProtocols;
- (id)superProtocols;
- (id)properties;
- (id)instanceMethods;
- (id)classMethods;

@end

@interface IDEIndexQPManager : NSObject
{
    IDEIndex *_index;
    struct dispatch_queue_s *_qp_queue;
    NSSet *_preferredTargets;
    NSMutableArray *_masterBlocks;
    NSMutableArray *_recentQueryProviders;
    NSTimer *_purgeTimer;
}

+ (void)initialize;
@property(readonly, nonatomic) IDEIndex *index; // @synthesize index=_index;
- (void)_logRecents;
- (void)_cancelPurgeTimer;
- (void)_purgeTimeout:(id)arg1;
- (void)_scheduleQPPurge;
- (void)_addQueryProviderToRecents:(id)arg1 highPriority:(BOOL)arg2;
- (void)purgeQPsUsingPCH:(id)arg1;
- (void)purgeAllQPs;
- (id)queryProviderForFile:(id)arg1 highPriority:(BOOL)arg2;
- (void)finalize;
- (void)setPreferredTargets:(id)arg1;
- (id)initWithIndex:(id)arg1;

@end

@interface IDEIndexScannerDataSource : IDEIndexDataSource
{
}

- (BOOL)generateDataForJob:(id)arg1;

@end

@interface IDEIndexSymbolCollection : IDEIndexCollection
{
}

- (id)prepopulateModelOccurrencesCancelWhen:(id)arg1;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexSymbolOccurrence : NSObject
{
    long long _role;
    DVTDocumentLocation *_location;
    long long _objectId;
    long long _lineNumber;
    DVTFilePath *_file;
    BOOL _lookedForCorrespondingSymbol;
    IDEIndexSymbol *_correspondingSymbol;
    NSObject<IDEIndexQueryProvider> *_queryProvider;
}

+ (id)newSymbolOccurrenceForSymbol:(id)arg1 role:(long long)arg2 location:(id)arg3 forQueryProvider:(id)arg4;
+ (id)newSymbolOccurrenceForSymbol:(id)arg1 objectId:(long long)arg2 role:(long long)arg3 lineNumber:(long long)arg4 file:(id)arg5 forQueryProvider:(id)arg6;
@property(retain, nonatomic) DVTDocumentLocation *location; // @synthesize location=_location;
@property(nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
@property(retain, nonatomic) DVTFilePath *file; // @synthesize file=_file;
@property(nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(nonatomic) long long role; // @synthesize role=_role;
@property(nonatomic) long long objectId; // @synthesize objectId=_objectId;
- (id)correspondingSymbol;
- (id)initWithCorrespondingSymbol:(id)arg1;

@end

@interface IDEIndexSymbolOccurrenceCollection : IDEIndexCollection
{
    IDEIndexSymbol *_correspondingSymbol;
}

@property(retain, nonatomic) IDEIndexSymbol *correspondingSymbol; // @synthesize correspondingSymbol=_correspondingSymbol;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexSymbolOccurrenceWithSymbolCollection : IDEIndexSymbolOccurrenceCollection
{
}

- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexSymbolWithModelOccurrenceCollection : IDEIndexSymbolCollection
{
}

- (id)prepopulateModelOccurrencesCancelWhen:(id)arg1;
- (id)instantiateRow:(struct sqlite3_stmt *)arg1;
- (id)tempTableSchema;

@end

@interface IDEIndexTestPlistDataSource : IDEIndexDataSource
{
    IDEIndexImportSession *_session;
    NSString *_target;
}

+ (void)initialize;
- (void)_processFile:(id)arg1 newFiles:(id)arg2;
- (id)_newFilesForDictionaries:(id)arg1;
- (void)_processSymbol:(id)arg1 inFile:(id)arg2 container:(id)arg3 containerName:(id)arg4;
- (BOOL)generateDataForJob:(id)arg1;
- (void)generateDataForPlist:(id)arg1;
- (id)initWithSession:(id)arg1 target:(id)arg2;

@end

@interface IDEIndexUniqueStringMap : NSObject
{
    NSMapTable *_mapTable;
}

- (id)stringWithString:(id)arg1;
- (id)stringWithUTF8String:(const char *)arg1;
- (id)init;

@end

@interface IDEIndexUnknownDataSource : IDEIndexDataSource
{
}

+ (id)dataSourceVersion;
- (BOOL)generateDataForJob:(id)arg1;

@end

@interface IDEIndexableMainThreadProxy : NSObject <IDEIndexable>
{
    id <IDEIndexable> _indexableObject;
    BOOL _respondsToSettingsForFiles;
    NSString *_cachedIdentifier;
    NSString *_cachedIndexName;
    NSDictionary *_cachedSettingsForFiles;
}

@property BOOL respondsToSettingsForFiles; // @synthesize respondsToSettingsForFiles=_respondsToSettingsForFiles;
@property(retain) id <IDEIndexable> indexableObject; // @synthesize indexableObject=_indexableObject;
- (id)buildSettingsForMainFile:(id)arg1;
- (id)localizedIndexableDescription;
- (void)languageOfMainFile:(id)arg1 completionBlock:(id)arg2;
- (void)clearCachedBuildSettings;
- (void)settingsForFilesInWorkspace:(id)arg1 withCompletionBlock:(id)arg2;
- (BOOL)writeProductHeaders:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
- (void)productHeadersInWorkspace:(id)arg1 withCompletionBlock:(id)arg2;
- (id)containerForIndexables:(id)arg1 rootPaths:(id)arg2;
- (id)indexableFiles;
- (id)indexName;
- (id)identifier;
- (BOOL)requiresMainThread;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndexable:(id)arg1;

// Remaining properties
@property(retain, nonatomic) id <IDEIndexable> proxy;

@end

@interface IDEIndexingEngine : NSObject
{
    IDEIndex *_index;
    struct dispatch_queue_s *_engine_queue;
    NSMutableArray *_waitingLoadJobs;
    NSMutableArray *_waitingFileJobs;
    NSMutableSet *_waitingDeferredJobs;
    NSMutableDictionary *_registeredIndexables;
    NSMutableDictionary *_rootPaths;
    NSMutableSet *_registeredFiles;
    NSMutableDictionary *_missingFiles;
    IDEIndexImportSession *_session;
    double _timeIndexablesChanged;
    double _timeFilesChanged;
    double _timeJobsEnded;
    int _suspended;
    int _nScheduledJobs;
    BOOL _wroteWorkspaceHeaderMap;
    BOOL _wroteAuxiliaryFiles;
    BOOL _purgedStaleData;
    BOOL _isActive;
    BOOL _isIndexing;
    BOOL _notified;
    BOOL _mightNotResume;
    BOOL _waitingForSessionToEnd;
    BOOL _aborted;
    BOOL _waitingForMoreFiles;
    BOOL _waitingForMoreIndexables;
    BOOL _waitingToStartDeferredJob;
    BOOL _doingDeferredJobs;
    BOOL _dontDeferJobs;
    BOOL _lastLogWasDeferred;
    id _abortCallback;
    DVTPerformanceMetric *_indexingMetric;
    long long _nCompleted;
    double _throttleFactor;
    NSDictionary *_notifiedDeferred;
}

+ (void)runFileJob:(id)arg1;
+ (void)runLoadJob:(id)arg1;
+ (id)auxDataSourceVersion;
+ (id)auxDataSource;
+ (void)initialize;
@property(nonatomic) double throttleFactor; // @synthesize throttleFactor=_throttleFactor;
@property(readonly, nonatomic) IDEIndex *index; // @synthesize index=_index;
- (void)reset;
- (void)abort:(id)arg1;
@property(readonly, nonatomic) BOOL isActive;
@property(readonly, nonatomic) BOOL isQuiescent;
- (void)_endActivity;
- (void)_endFileActivity;
- (void)_reportProgress;
- (void)_startFileActivity;
- (void)_startActivity;
- (void)_purgeStaleData;
- (void)_writeAuxiliaryFiles;
- (void)_writeWorkspaceHeaderMap;
- (void)_setRootPaths:(id)arg1 forIndexable:(id)arg2;
- (void)didForgetFiles:(id)arg1;
- (void)didEndImportSession:(id)arg1;
- (void)_scheduleJobs;
- (void)didCancelJob:(id)arg1;
- (void)didCompleteJob:(id)arg1;
- (BOOL)shouldRunJob:(id)arg1;
- (void)_deferJob:(id)arg1;
- (void)_cancelJobs;
- (void)_scheduleJob:(id)arg1;
- (void)dontDeferJobs;
- (void)indexFile:(id)arg1 indexable:(id)arg2 dirtyFile:(id)arg3;
- (void)stopIndexing;
- (void)resumeIndexing;
- (void)suspendIndexing;
- (void)suspendIndexing:(BOOL)arg1;
- (void)registerHotFile:(id)arg1;
- (void)willRegisterMoreFiles:(BOOL)arg1;
- (void)unregisterFile:(id)arg1;
- (void)registerFile:(id)arg1;
- (void)unregisterIndexable:(id)arg1;
- (void)indexableChanged:(id)arg1 addOnly:(BOOL)arg2;
- (void)registerIndexable:(id)arg1;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndex:(id)arg1;

@end

@interface IDEIndexingJob : NSObject
{
    IDEIndexingEngine *_engine;
    id <IDEIndexable> _indexable;
    DVTFilePath *_file;
    NSSet *_dirtyFiles;
    IDEIndexImportSession *_session;
    NSDictionary *_settings;
    BOOL _canceled;
    BOOL _completed;
    BOOL _deferred;
    NSSet *_oldDirtyFiles;
}

+ (void)initialize;
@property(readonly, nonatomic) NSSet *oldDirtyFiles; // @synthesize oldDirtyFiles=_oldDirtyFiles;
@property(nonatomic, getter=isDeferred) BOOL deferred; // @synthesize deferred=_deferred;
@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) IDEIndexImportSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) NSSet *dirtyFiles; // @synthesize dirtyFiles=_dirtyFiles;
@property(readonly, nonatomic) DVTFilePath *file; // @synthesize file=_file;
@property(readonly, nonatomic) id <IDEIndexable> indexable; // @synthesize indexable=_indexable;
@property(readonly, nonatomic) IDEIndexingEngine *engine; // @synthesize engine=_engine;
- (void)didComplete;
- (BOOL)shouldContinue;
- (id)newMainFileWithSource:(id)arg1 modified:(id)arg2;
- (void)indexFile:(id)arg1 indexable:(id)arg2;
- (void)cancel;
- (void)run;
@property(readonly, nonatomic) NSString *target;
@property(readonly, nonatomic) IDEIndex *index;
- (void)addDirtyFile:(id)arg1;
- (id)initWithEngine:(id)arg1 indexable:(id)arg2 file:(id)arg3;
- (id)initWithEngine:(id)arg1 indexable:(id)arg2;

@end

@interface IDEIndexingJobScheduler : NSObject
{
    struct dispatch_queue_s *_control_queue;
    long long _width;
    long long _lastThrottledWidth;
    NSMutableArray *_engines;
    NSMutableDictionary *_hotFilesByEngine;
    NSMutableDictionary *_priorityIndicesByEngine;
    NSMutableDictionary *_waitingJobsByEngine;
    NSMutableArray *_runningJobs;
}

+ (id)sharedInstance;
+ (void)initialize;
@property(readonly, nonatomic) long long width; // @synthesize width=_width;
- (void)_scheduleJobs;
- (long long)_throttledWidth;
- (long long)setWidth:(long long)arg1;
- (void)ping;
- (void)cancelJobsForEngine:(id)arg1;
- (void)scheduleJob:(id)arg1;
- (void)clearHotFilesForEngine:(id)arg1;
- (void)addHotFile:(id)arg1 forEngine:(id)arg2;
- (void)finalize;
- (id)init;

@end

@interface IDERunDeviceService : DVTDeviceService
{
}

- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEInstallLocalMacService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDERunOperationWorker : NSObject
{
    NSString *_extensionIdentifier;
    IDELaunchSession *_launchSession;
    id <IDERunOperationWorkerDelegate> _runOperation;
    id <IDERunOperationWorkerTracker> _runnableTracker;
    DVTDispatchLock *_lock;
}

@property(retain) id <IDERunOperationWorkerTracker> runnableTracker; // @synthesize runnableTracker=_runnableTracker;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(readonly) NSString *extensionIdentifier; // @synthesize extensionIdentifier=_extensionIdentifier;
- (void)terminate;
- (void)finishedWithError:(id)arg1;
- (void)start;
@property(retain) id <IDERunOperationWorkerDelegate> runOperation;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

@end

@interface IDEInstallLocalMacWorker : IDERunOperationWorker
{
}

- (void)terminate;
- (void)start;
- (void)_setFinishedRunningWithError:(id)arg1;

@end

@interface IDEInstallSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSString *_buildConfiguration;
    NSString *_customInstallName;
    NSArray *_killProcessList;
}

+ (id)keyPathsForValuesAffectingKillProcessListString;
+ (id)keyPathsForValuesAffectingDefaultInstallName;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (BOOL)allowInstallSchemeAction;
@property(copy) NSArray *killProcessList; // @synthesize killProcessList=_killProcessList;
@property(copy) NSString *customInstallName; // @synthesize customInstallName=_customInstallName;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (void)setKillProcessesFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setCustomInstallNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildConfigurationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (BOOL)hasDefaultValues;
- (id)overridingBuildSettingsForInstallBuildForWorkspaceArena:(id)arg1 destination:(id)arg2;
- (id)installOperationWithExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 outError:(id *)arg5;
@property(copy) NSString *killProcessListString;
@property(readonly) NSString *defaultInstallName;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

@end

@interface IDEIssue : NSObject <IDEDiagnosticItemDelegate>
{
    IDEIssueProvider *_issueProvider;
    NSArray *_documentLocations;
    id _issueTypeIdentifier;
    NSString *_fullMessage;
    unsigned long long _severity;
    unsigned long long _sequenceNumber;
    NSArray *_subissues;
    IDEActivityLogMessage *_representedMessage;
    IDEActivityLogMessage *_originatingMessage;
    IDEActivityLogRecord *_originatingLogRecord;
    IDEIssue *_parentIssue;
    int _issueType;
    DVTDocumentLocation *_primaryLocation;
    NSNumber *_lineNumber;
    BOOL _frozen;
    BOOL _valid;
    BOOL _coalesced;
    BOOL _wasFetchedFromCache;
    BOOL _vended;
    DVTDocumentLocation *_primaryDocumentLocation;
}

@property(readonly) NSNumber *_lineNumber; // @synthesize _lineNumber;
@property(getter=_isVended) BOOL _vended; // @synthesize _vended;
@property(getter=_isCoalesced) BOOL _coalesced; // @synthesize _coalesced;
@property BOOL valid; // @synthesize valid=_valid;
@property(readonly) DVTDocumentLocation *primaryDocumentLocation; // @synthesize primaryDocumentLocation=_primaryDocumentLocation;
@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property BOOL wasFetchedFromCache; // @synthesize wasFetchedFromCache=_wasFetchedFromCache;
@property(readonly) IDEIssue *parentIssue; // @synthesize parentIssue=_parentIssue;
@property(readonly) IDEActivityLogRecord *originatingLogRecord; // @synthesize originatingLogRecord=_originatingLogRecord;
@property(readonly) IDEActivityLogMessage *originatingMessage; // @synthesize originatingMessage=_originatingMessage;
@property(retain) IDEActivityLogMessage *representedMessage; // @synthesize representedMessage=_representedMessage;
@property(copy, nonatomic) NSArray *subissues; // @synthesize subissues=_subissues;
@property(readonly) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
@property(readonly) NSString *fullMessage; // @synthesize fullMessage=_fullMessage;
@property(retain) id issueTypeIdentifier; // @synthesize issueTypeIdentifier=_issueTypeIdentifier;
@property(readonly) NSArray *documentLocations; // @synthesize documentLocations=_documentLocations;
@property(retain, nonatomic) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (BOOL)isEqualDisregardingLocationTimestamps:(id)arg1;
- (BOOL)_arraysHaveCommonLocation:(id)arg1:(id)arg2;
- (void)diagnosticItemWasFixed:(id)arg1;
- (long long)compareByLineNumber:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) BOOL isLiveIssue;
@property(retain) IDEIssue *_parentIssue;
@property(readonly) NSString *formattedStringRepresentation;
- (id)description;
- (id)_severityString;
- (void)_freeze;
@property(readonly) NSArray *fixableDiagnosticItems;
- (void)_setRepresentedMessage:(id)arg1 force:(BOOL)arg2;
- (void)_setSequenceNumber:(unsigned long long)arg1;
- (id)initWithIssueProvider:(id)arg1 message:(id)arg2 wasFetchedFromCache:(BOOL)arg3;
- (id)initWithIssueProvider:(id)arg1 message:(id)arg2 originatingLogRecord:(id)arg3 wasFetchedFromCache:(BOOL)arg4;
- (id)initWithIssueProvider:(id)arg1 documentLocations:(id)arg2 issueTypeIdentifier:(id)arg3 fullMessage:(id)arg4 severity:(unsigned long long)arg5 representedMessage:(id)arg6;
- (id)init;

@end

@interface IDEIssueFileGroup : NSObject
{
    IDEIssueProvider *_issueProvider;
    NSURL *_documentURL;
    NSMutableArray *_issues;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    int _issueType;
}

@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_updateIssueType;
- (id)_initWithIssueProvider:(id)arg1 documentURL:(id)arg2;
- (id)init;

@end

@interface IDEIssueGroup : NSObject
{
    IDEIssueProvider *_issueProvider;
    IDEContainer *_container;
    id <IDEBlueprint> _blueprint;
    NSMutableArray *_issueFileGroups;
    NSMapTable *_issueFileGroupsIndex;
    NSMutableArray *_issuesWithNoFile;
    NSMutableArray *_issueTypeGroups;
    NSMapTable *_issueTypeGroupsIndex;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    int _issueType;
}

@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property(readonly) NSArray *issueTypeGroups; // @synthesize issueTypeGroups=_issueTypeGroups;
@property(readonly) NSArray *issuesWithNoFile; // @synthesize issuesWithNoFile=_issuesWithNoFile;
@property(readonly) NSArray *issueFileGroups; // @synthesize issueFileGroups=_issueFileGroups;
@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
@property(readonly) NSSet *_allIssues;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_addNoFileIssues:(id)arg1;
- (void)_updateIssueType;
@property(readonly) unsigned long long issueCount;
- (id)_initWithIssueProvider:(id)arg1 container:(id)arg2 blueprint:(id)arg3;
- (id)init;

@end

@interface IDEIssueLogRecordsGroup : NSObject
{
    NSMutableArray *_logRecords;
}

+ (void)initialize;
- (void)removeLogsForIssues:(id)arg1;
- (void)addLogsForIssues:(id)arg1;
- (id)init;

// Remaining properties
@property(copy) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;

@end

@interface IDEIssueManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    BOOL _isInvalidated;
    NSMutableArray *_issueProviders;
    DVTMapTable *_providerContextToProvisionInfoMap;
    DVTMapTable *_issueToProviderContextMap;
    NSMutableArray *_issueGroups;
    NSMapTable *_identifierToGroupIndex;
    NSMapTable *_issueToGroupsIndex;
    NSMutableSet *_issuesThatWillBeRemoved;
    NSMutableArray *_vendedIssuesWithNoDocument;
    NSMutableSet *_issuesWithNoDocument;
    NSMutableArray *_documentURLsWithVendedIssues;
    NSMutableDictionary *_documentURLsToVendedIssuesBySeqNumDict;
    NSMutableDictionary *_documentURLsToIssuesByLineNumDict;
    NSMutableDictionary *_documentURLToObserversDict;
    DVTHashTable *_allDocumentURLObservers;
    unsigned long long _nextIssueSequenceNumber;
    DVTStackBacktrace *_invalidationBacktrace;
    DVTMapTable *_providerToSessionObservationToken;
    unsigned long long _nextGroupSequenceNumber;
    DVTMapTable *_identifierToGroupSequenceNumberIndex;
    IDEIssueProviderSession *_lastSchemeActionSession;
    NSMutableArray *_lastSchemeActionIssues;
    id _issueFixedObserver;
    BOOL _liveIssuesEnabled;
    id _liveIssuesEnabledObserver;
    IDEIssueLogRecordsGroup *_issueLogRecordsGroup;
    DVTHashTable *_cachedBlueprintsForActiveScheme;
    DVTHashTable *_cachedContainersForActiveScheme;
    int _currentIssueFilterStyle;
    id _issueFilterStyleObserver;
    id _schemeBuildablesObserver;
    id <DVTObservingToken> _activeSchemeObserver;
    id <DVTObservingToken> _runDestinationObserver;
    id <DVTObservingToken> _implicitDependenciesObserver;
}

+ (id)issueManagerLogAspect;
+ (id)_issueProviderInfo;
+ (void)_useDebugProviderExtensionPointWithIdentifier:(id)arg1;
+ (void)initialize;
@property(readonly) IDEIssueLogRecordsGroup *issueLogRecordsGroup; // @synthesize issueLogRecordsGroup=_issueLogRecordsGroup;
@property(readonly, getter=areLiveIssuesEnabled) BOOL liveIssuesEnabled; // @synthesize liveIssuesEnabled=_liveIssuesEnabled;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)_containersOrBlueprintsUpdated;
- (id)_issuesForProviderContext:(id)arg1;
- (id)_providerContextToProvisionInfoMapForIssues:(id)arg1;
- (id)_unitTestIssueProvidersAccessor;
- (void)_validateGroupIdentifiers;
- (void)_delayedValidateGroupIdentifiers;
- (void)_updateVendedIssues;
- (void)_updateContainersAndBlueprintsForActiveScheme;
- (void)_updateIssueFilterStyle;
- (void)_needsUpdateInResponseToFilterChanges;
- (void)_coalescedUpdateInResponseToFilterChanges;
- (void)_hideIssues:(id)arg1;
- (void)_setIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4 session:(id)arg5;
- (void)_removeIssues:(id)arg1 forProviderContext:(id)arg2 session:(id)arg3;
- (void)_addIssues:(id)arg1 forProviderContext:(id)arg2 container:(id)arg3 blueprint:(id)arg4 session:(id)arg5 tryToCoalesce:(BOOL)arg6;
- (BOOL)_vendOnlyActiveSchemeIssues;
- (void)_retractIssues:(id)arg1;
- (void)_vendIssues:(id)arg1 container:(id)arg2 blueprint:(id)arg3 issueToGroupingObjectMap:(id)arg4 session:(id)arg5;
- (id)_similarExistingIssueForIssue:(id)arg1;
- (id)_similarExistingIssueForIssue:(id)arg1 container:(id)arg2 blueprint:(id)arg3;
- (id)_identifierForGroupWithBlueprint:(id)arg1 container:(id)arg2;
- (id)_groupingObjectsForIssue:(id)arg1;
- (void)_rescindObserverToken:(id)arg1;
- (id)newIssueObserverForDocumentURL:(id)arg1 options:(unsigned long long)arg2 withHandlerBlock:(id)arg3;
- (void)_notifyAllObserversOfDocumentURL:(id)arg1 isPrior:(BOOL)arg2;
- (void)_notifyObserver:(id)arg1 forURL:(id)arg2 isPrior:(BOOL)arg3;
- (id)issuesWithNoDocument;
- (id)issuesForDocumentURL:(id)arg1;
@property(readonly) NSArray *documentURLsWithIssues;
@property(readonly) NSArray *issueGroups; // @synthesize issueGroups=_issueGroups;
- (void)_updateIssueProviders;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly) NSArray *lastSchemeActionIssues; // @dynamic lastSchemeActionIssues;
@property(readonly) NSMutableArray *mutableLastSchemeActionIssues; // @dynamic mutableLastSchemeActionIssues;

@end

@interface IDEIssueManager_ByFileObserverToken : NSObject <DVTObservingToken>
{
    IDEIssueManager *_issueManager;
    NSURL *_documentURL;
    unsigned long long _observingOptions;
    id _observerBlock;
}

@property(readonly) unsigned long long observingOptions; // @synthesize observingOptions=_observingOptions;
@property(readonly) id observerBlock; // @synthesize observerBlock=_observerBlock;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (void)cancel;
@property(readonly, getter=isCancelled) BOOL cancelled;
- (id)initWithIssueManager:(id)arg1 documentURL:(id)arg2 options:(unsigned long long)arg3 block:(id)arg4;

@end

@interface IDEIssueProviderSession : NSObject
{
    double _timestamp;
}

@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
- (id)init;

@end

@interface IDEIssueTypeGroup : NSObject
{
    IDEIssueProvider *_issueProvider;
    id _issueTypeIdentifier;
    NSMutableArray *_issues;
    unsigned long long _errorCount;
    unsigned long long _warningCount;
    unsigned long long _noticeCount;
    unsigned long long _analyzerResultCount;
    int _issueType;
}

@property(readonly) int issueType; // @synthesize issueType=_issueType;
@property(readonly) NSArray *issues; // @synthesize issues=_issues;
@property(readonly) id issueTypeIdentifier; // @synthesize issueTypeIdentifier=_issueTypeIdentifier;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (void)_removeIssues:(id)arg1;
- (void)_addIssues:(id)arg1;
- (void)_updateIssueType;
- (id)_initWithIssueProvider:(id)arg1 issueTypeIdentifier:(id)arg2;
- (id)init;

@end

@interface IDELaunchParametersSnapshot : NSObject
{
    NSString *_schemeIdentifier;
    NSString *_schemeName;
    NSString *_selectedLauncherIdentifier;
    NSString *_selectedDebuggerIdentifier;
    int _launchStyle;
    NSArray *_moduleNamePatternsToLoadDebugSymbolsFor;
    DVTFilePath *_runnableLocation;
    DVTFilePath *_replacementRunnableLocation;
    DVTFilePath *_workingDirectory;
    NSDictionary *_additionalDeviceSubstitutionPaths;
    NSArray *_commandLineArgs;
    NSArray *_testingCommandLineArgs;
    NSDictionary *_environmentVariables;
    NSDictionary *_testingEnvironmentVariables;
    NSString *_architecture;
    NSString *_sdkPath;
    NSString *_remoteInstallPath;
    BOOL _debugAsAService;
    int _debugServiceFD;
    NSString *_platformIdentifier;
    NSString *_buildConfiguration;
    id <IDEBuildableProduct> _buildableProduct;
    NSString *_deviceAppDataPackage;
    BOOL _allowLocationSimulation;
    IDELocationScenarioReference *_locationScenarioReference;
    BOOL _enablesOpenGLESFrameCapture;
}

+ (id)launchParametersWithSchemeIdentifier:(id)arg1 schemeName:(id)arg2 launcherIdentifier:(id)arg3 debuggerIdentifier:(id)arg4 launchStyle:(int)arg5 moduleNamePatternsToLoadDebugSymbolsFor:(id)arg6 runnableLocation:(id)arg7 workingDirectory:(id)arg8 commandLineArgs:(id)arg9 environmentVariables:(id)arg10 architecture:(id)arg11 platformIdentifier:(id)arg12 buildConfiguration:(id)arg13 buildableProduct:(id)arg14 deviceAppDataPackage:(id)arg15 allowLocationSimulation:(BOOL)arg16 locationScenarioReference:(id)arg17 enablesOpenGLESFrameCapture:(BOOL)arg18;
@property(readonly) BOOL enablesOpenGLESFrameCapture; // @synthesize enablesOpenGLESFrameCapture=_enablesOpenGLESFrameCapture;
@property(readonly) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property BOOL allowLocationSimulation; // @synthesize allowLocationSimulation=_allowLocationSimulation;
@property(readonly) NSString *deviceAppDataPackage; // @synthesize deviceAppDataPackage=_deviceAppDataPackage;
@property(copy) NSDictionary *additionalDeviceSubstitutionPaths; // @synthesize additionalDeviceSubstitutionPaths=_additionalDeviceSubstitutionPaths;
@property(readonly) id <IDEBuildableProduct> buildableProduct; // @synthesize buildableProduct=_buildableProduct;
@property(readonly) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(readonly) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
@property int debugServiceFD; // @synthesize debugServiceFD=_debugServiceFD;
@property BOOL debugAsAService; // @synthesize debugAsAService=_debugAsAService;
@property(copy) NSString *remoteInstallPath; // @synthesize remoteInstallPath=_remoteInstallPath;
@property(copy) NSString *sdkPath; // @synthesize sdkPath=_sdkPath;
@property(readonly) NSString *architecture; // @synthesize architecture=_architecture;
@property(copy) NSDictionary *testingEnvironmentVariables; // @synthesize testingEnvironmentVariables=_testingEnvironmentVariables;
@property(copy) NSArray *testingCommandLineArgs; // @synthesize testingCommandLineArgs=_testingCommandLineArgs;
@property(readonly) DVTFilePath *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property(copy) DVTFilePath *replacementRunnableLocation; // @synthesize replacementRunnableLocation=_replacementRunnableLocation;
@property(readonly) NSArray *moduleNamePatternsToLoadDebugSymbolsFor; // @synthesize moduleNamePatternsToLoadDebugSymbolsFor=_moduleNamePatternsToLoadDebugSymbolsFor;
@property(readonly) int launchStyle; // @synthesize launchStyle=_launchStyle;
@property(readonly) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(readonly) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(readonly) NSString *schemeName; // @synthesize schemeName=_schemeName;
@property(readonly) NSString *schemeIdentifier; // @synthesize schemeIdentifier=_schemeIdentifier;
- (id)launchParametersByAppendingPath:(id)arg1 toSearchPathEnvironmentVariable:(id)arg2;
- (id)launchParametersByPrependingPath:(id)arg1 toSearchPathEnvironmentVariable:(id)arg2;
- (id)launchParametersByReplacingEnvironmentVariablesWithDictionary:(id)arg1;
- (id)launchParametersByReplacingCommandLineArgsWithArray:(id)arg1;
@property(readonly) DVTFilePath *runnableLocation; // @synthesize runnableLocation=_runnableLocation;
@property(readonly) NSArray *commandLineArgs; // @synthesize commandLineArgs=_commandLineArgs;
@property(readonly) NSDictionary *environmentVariables; // @synthesize environmentVariables=_environmentVariables;

@end

@interface IDELaunchRunPhasePathEntry : NSObject
{
    NSString *_path;
    BOOL _isEnabled;
}

@property(getter=isEnabled) BOOL enabled; // @synthesize enabled=_isEnabled;
@property(copy) NSString *path; // @synthesize path=_path;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)setIsEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setPathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
@property(readonly) DVTFilePath *filePath;
- (id)description;
- (id)init;
- (id)initWithPathString:(id)arg1 enabled:(BOOL)arg2;

@end

@interface IDELaunchSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    NSDictionary *_additionalOptionEntriesDict;
    NSMutableArray *_additionalSourceCodeEntries;
    NSMutableArray *_additionalDSYMEntries;
    int _launchStyle;
    BOOL _useCustomWorkingDirectory;
    NSString *_customWorkingDirectory;
    NSString *_resolvedCustomWorkingDirectory;
    BOOL _ignoresPersistentStateOnLaunch;
    BOOL _debugDocumentVersioning;
    BOOL _enablesOpenGLESFrameCapture;
    short _shouldAllowOpenGLESOptions;
    NSMutableArray *_modulesToLoadDebugSymbolsFor;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    IDERunnable *_runnable;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    BOOL _allowLocationSimulation;
    IDELocationScenarioReference *_locationScenarioReference;
    NSString *_buildConfiguration;
}

+ (id)keyPathsForValuesAffectingRunnable;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property BOOL enablesOpenGLESFrameCapture; // @synthesize enablesOpenGLESFrameCapture=_enablesOpenGLESFrameCapture;
@property BOOL debugDocumentVersioning; // @synthesize debugDocumentVersioning=_debugDocumentVersioning;
@property BOOL ignoresPersistentStateOnLaunch; // @synthesize ignoresPersistentStateOnLaunch=_ignoresPersistentStateOnLaunch;
@property(retain) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property BOOL allowLocationSimulation; // @synthesize allowLocationSimulation=_allowLocationSimulation;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference; // @synthesize deviceAppDataReference=_deviceAppDataReference;
@property(copy, nonatomic) NSString *customWorkingDirectory; // @synthesize customWorkingDirectory=_customWorkingDirectory;
@property BOOL useCustomWorkingDirectory; // @synthesize useCustomWorkingDirectory=_useCustomWorkingDirectory;
@property int launchStyle; // @synthesize launchStyle=_launchStyle;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(readonly) NSDictionary *additionalOptionEntriesDict; // @synthesize additionalOptionEntriesDict=_additionalOptionEntriesDict;
- (void)addLocationScenarioReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addDeviceAppData:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addModuleMatchers:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalDSYMFilesAndDirs:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalSourceCodeFilesAndDirs:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAdditionalOptions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (BOOL)needsNewSchemeVersionForAppDataPackage;
- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
@property(readonly) BOOL shouldAllowOpenGLESOptions;
- (void)setAllowLocationSimulationFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnablesOpenGLESFrameCaptureFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setDebugDocumentVersioningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
@property(readonly) NSArray *moduleNamePatternsToLoadDebugSymbolsFor;
- (id)runOperationForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 runDestination:(id)arg5 outError:(id *)arg6;
- (id)_realAppNameForRunnablePath:(id)arg1;
@property(retain) IDERunnable *runnable; // @synthesize runnable=_runnable;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(readonly) NSArray *additionalDSYMFilePaths;
@property(readonly) NSArray *additionalSourceCodeFilePaths;
- (id)_additionalOptions;
- (id)_additionalOptionEntries;
- (id)_expandMacrosInString:(id)arg1;
@property(readonly) NSString *resolvedCustomWorkingDirectory; // @synthesize resolvedCustomWorkingDirectory=_resolvedCustomWorkingDirectory;
@property(readonly) NSDictionary *environmentVariables;
- (id)commandLineArgumentsForDevice:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_updateBuildableToUseForMacroExpansion;
- (void)setRunContext:(id)arg1;
- (id)_initAdditionalOptionsDict;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

// Remaining properties
@property(copy) NSArray *additionalDSYMEntries; // @dynamic additionalDSYMEntries;
@property(copy) NSArray *additionalSourceCodeEntries; // @dynamic additionalSourceCodeEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
@property(copy) NSArray *modulesToLoadDebugSymbolsFor; // @dynamic modulesToLoadDebugSymbolsFor;
@property(readonly) NSMutableArray *mutableAdditionalDSYMEntries; // @dynamic mutableAdditionalDSYMEntries;
@property(readonly) NSMutableArray *mutableAdditionalSourceCodeEntries; // @dynamic mutableAdditionalSourceCodeEntries;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(readonly) NSMutableArray *mutableModulesToLoadDebugSymbolsFor; // @dynamic mutableModulesToLoadDebugSymbolsFor;

@end

@interface IDELaunchSession : NSObject
{
    IDEExecutionEnvironment *_executionEnvironment;
    IDEExecutionTracker *_executionTracker;
    NSMutableArray *_debugSessions;
    id <IDEDebugSession> _currentDebugSession;
    id <IDETraceInferiorSession> _currentTraceInferiorSession;
    NSArray *_debuggingAdditions;
    int _state;
    IDELaunchParametersSnapshot *_launchParameters;
    DVTFileDataType *_runnableType;
    int _runnablePID;
    int _simulatorPID;
    BOOL _iconChanged;
    IDERunDestination *_runDestination;
    NSString *_runnableDisplayName;
    int _schemeCommand;
    NSMutableSet *_consoleAdaptors;
    NSMapTable *_targetConsoleAdaptorToTerminationToken;
    int _targetOutputState;
    IDELocationSimulator *_locationSimulator;
}

+ (BOOL)automaticallyNotifiesObserversOfTargetOutputState;
+ (void)initialize;
@property(readonly) IDELocationSimulator *locationSimulator; // @synthesize locationSimulator=_locationSimulator;
@property int schemeCommand; // @synthesize schemeCommand=_schemeCommand;
@property(nonatomic) int targetOutputState; // @synthesize targetOutputState=_targetOutputState;
@property(readonly) NSString *runnableDisplayName; // @synthesize runnableDisplayName=_runnableDisplayName;
@property BOOL iconChanged; // @synthesize iconChanged=_iconChanged;
@property int simulatorPID; // @synthesize simulatorPID=_simulatorPID;
@property int runnablePID; // @synthesize runnablePID=_runnablePID;
@property(readonly) DVTFileDataType *runnableType; // @synthesize runnableType=_runnableType;
@property(retain) IDELaunchParametersSnapshot *launchParameters; // @synthesize launchParameters=_launchParameters;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly) NSArray *debuggingAdditions; // @synthesize debuggingAdditions=_debuggingAdditions;
@property(retain) id <IDETraceInferiorSession> currentTraceInferiorSession; // @synthesize currentTraceInferiorSession=_currentTraceInferiorSession;
@property(retain, nonatomic) id <IDEDebugSession> currentDebugSession; // @synthesize currentDebugSession=_currentDebugSession;
@property(retain) IDEExecutionTracker *executionTracker; // @synthesize executionTracker=_executionTracker;
@property(readonly) IDEExecutionEnvironment *executionEnvironment; // @synthesize executionEnvironment=_executionEnvironment;
- (BOOL)isAlive;
- (void)_willExpire;
- (void)_didStart;
- (void)_removeConsoleAdaptorObservations:(id)arg1;
- (void)_handleConsoleAdaptorOutputTerminated:(id)arg1;
- (void)_handleConsoleItemAdded:(id)arg1;
- (void)removeConsoleAdaptor:(id)arg1;
- (void)addConsoleAdaptor:(id)arg1;
@property(readonly) NSMutableSet *kvoConsoleAdaptors;
@property(readonly) int CPUType;
@property(readonly) IDERunDestination *runDestination;
@property(readonly) NSDictionary *environmentVariables;
@property(readonly) NSArray *commandLineArgs;
@property(readonly) DVTFilePath *workingDirectory;
- (id)initWithExecutionEnvironment:(id)arg1 launchParameters:(id)arg2 runnableDisplayName:(id)arg3 runnableType:(id)arg4 runDestination:(id)arg5;

// Remaining properties
@property(copy) NSArray *debugSessions; // @dynamic debugSessions;
@property(readonly) NSMutableArray *mutableDebugSessions; // @dynamic mutableDebugSessions;

@end

@interface IDELocation : NSObject
{
    NSNumber *_latitude;
    NSNumber *_longitude;
    IDELocationScenario *_scenario;
}

@property(readonly) IDELocationScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly) NSNumber *longitude; // @synthesize longitude=_longitude;
@property(readonly) NSNumber *latitude; // @synthesize latitude=_latitude;
- (id)description;
- (id)initWithLatitude:(id)arg1 longitude:(id)arg2;

@end

@interface IDELocationScenario : NSObject
{
    NSString *_identifier;
    NSArray *_locations;
    BOOL _autorepeat;
    NSNumber *_speed;
    DVTFilePath *_filePath;
    BOOL _hasLoadedContent;
    BOOL _valid;
    NSError *_loadingError;
    BOOL _isCurrentLocation;
}

+ (id)builtInScenarioWithIdentifier:(id)arg1;
+ (id)defaultScenarios;
+ (id)currentLocationScenario;
@property(readonly) BOOL isCurrentLocationScenario; // @synthesize isCurrentLocationScenario=_isCurrentLocation;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSNumber *speed; // @synthesize speed=_speed;
@property(readonly) BOOL autorepeat; // @synthesize autorepeat=_autorepeat;
@property(readonly, getter=isDefaultScenario) BOOL defaultScenario;
- (id)description;
@property(readonly) BOOL isValid;
@property(readonly) NSString *name;
@property(readonly) NSArray *locations; // @dynamic locations;
- (id)_locationsFromReferencedGPXFileWithError:(id *)arg1;
- (id)initWithIdentifier:(id)arg1 referencingFilePath:(id)arg2;
- (id)initWithIdentifier:(id)arg1 locations:(id)arg2 speed:(id)arg3 autorepeat:(BOOL)arg4;
- (id)initWithIdentifier:(id)arg1 locations:(id)arg2;

// Remaining properties
@property(readonly) NSMutableArray *mutableLocations; // @dynamic mutableLocations;

@end

@interface IDELocationScenarioReference : NSObject <DVTXMLUnarchiving>
{
    NSString *_identifier;
    int _referenceType;
    NSString *_resolvedAbsolutePath;
}

@property(copy) NSString *resolvedAbsolutePath; // @synthesize resolvedAbsolutePath=_resolvedAbsolutePath;
@property int referenceType; // @synthesize referenceType=_referenceType;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)setIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

@end

@interface IDELocationSimulator : NSObject
{
    IDELaunchSession *_launchSession;
    IDESimulateLocationService *_service;
    int _state;
    IDELocationScenario *_scenario;
    id <DVTObservingToken> _debugSessionStateObserver;
    BOOL _playingBack;
    NSTimer *_playbackTimer;
    unsigned long long _currentPlaybackIndex;
    IDELocation *_currentPlaybackLocation;
    double _lastUpdateTime;
    NSOperationQueue *_playbackQueue;
}

+ (id)locationSimulatorLogAspect;
@property(retain) IDESimulateLocationService *service; // @synthesize service=_service;
@property(retain, nonatomic) IDELocationScenario *scenario; // @synthesize scenario=_scenario;
@property(readonly) int state; // @synthesize state=_state;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
- (void)_playbackTimerFired:(id)arg1;
- (void)_startOrResumePlayback;
- (void)_pausePlayback;
- (void)_stopPlayback;
- (void)_debugSessionStateChanged;
- (void)_setState:(int)arg1;
- (void)_updateScenarioSimulation;
- (int)_locationSimulatorStateForDebugSessionState:(int)arg1;
- (void)_updateLocationScenario;
- (void)_updateService;
- (id)_simulateLocationCapability;
- (void)stopSimulating;
- (id)initWithLaunchSession:(id)arg1;

@end

@interface IDELogDocumentLocation : DVTDocumentLocation
{
    NSIndexPath *_indexPath;
    BOOL _expandTranscript;
    struct _NSRange _characterRange;
}

@property(readonly) struct _NSRange characterRange; // @synthesize characterRange=_characterRange;
@property(readonly) BOOL expandTranscript; // @synthesize expandTranscript=_expandTranscript;
@property(readonly) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
- (BOOL)isEqual:(id)arg1;
- (long long)compare:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 expandTranscript:(BOOL)arg4;
- (id)initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 characterRange:(struct _NSRange)arg4;
- (id)_initWithDocumentURL:(id)arg1 timestamp:(id)arg2 indexPath:(id)arg3 expandTranscript:(BOOL)arg4 characterRange:(struct _NSRange)arg5;

@end

@interface IDELogManager : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    id _domainItem;
    NSString *_domainName;
    NSArray *_logProviders;
    NSMutableArray *_logRecords;
    DVTMapTable *_logProviderToRecordsIndex;
    NSSet *_cachedRecentLogRecords;
    DVTStackBacktrace *_invalidationBacktrace;
}

+ (void)initialize;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(copy) NSString *domainName; // @synthesize domainName=_domainName;
@property(retain) id domainItem; // @synthesize domainItem=_domainItem;
@property(readonly) NSArray *logProviders; // @synthesize logProviders=_logProviders;
@property(readonly) NSSet *mostRecentLogRecordForEachType;
- (void)_handleLogRecordChangesForProvider:(id)arg1;
- (id)_findLogProviders;
- (id)extensionsFromExtensionPointIdentifier:(id)arg1;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithDomainItem:(id)arg1 domain:(id)arg2;

// Remaining properties
@property(readonly) NSArray *logRecords; // @dynamic logRecords;
@property(readonly) NSMutableArray *mutableLogRecords; // @dynamic mutableLogRecords;

@end

@interface IDEModuleMatcherEntry : NSObject
{
    int _criteria;
    NSString *_stringToMatch;
}

@property(copy) NSString *stringToMatch; // @synthesize stringToMatch=_stringToMatch;
@property int criteria; // @synthesize criteria=_criteria;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)regularExpression;
- (id)init;

@end

@interface IDEMutableBuildParameters : IDEBuildParameters
{
}

@property(copy) IDEOverridingBuildProperties *overridingProperties; // @dynamic overridingProperties;
@property(copy) NSString *activeArchitecture; // @dynamic activeArchitecture;
@property(retain) IDERunDestination *activeRunDestination; // @dynamic activeRunDestination;
@property(copy) NSString *configurationName; // @dynamic configurationName;
@property(copy) NSString *buildAction; // @dynamic buildAction;
@property(copy) IDEWorkspaceArenaSnapshot *workspaceArenaSnapshot; // @dynamic workspaceArenaSnapshot;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEOverridingBuildProperties : NSObject
{
    NSMutableDictionary *_properties;
    NSArray *_arrayRepresentation;
    unsigned long long _hash;
}

- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEmpty;
- (id)dictionaries;
@property(readonly) NSDictionary *propertiesFromEnvironmentXcconfigFile;
@property(readonly) NSDictionary *propertiesFromCommandLineXcconfigFile;
@property(readonly) NSDictionary *propertiesFromCommandLine;
@property(readonly) NSDictionary *synthesizedProperties;
- (void)_setPropertyDictionary:(id)arg1 forLevel:(int)arg2;
- (id)propertyDictionaryForLevel:(int)arg1;
- (id)copyUsingDictionaryClass:(Class)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copyUsingOverridingPropertiesClass:(Class)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface IDEMutableOverridingBuildProperties : IDEOverridingBuildProperties
{
}

@property(copy) NSDictionary *propertiesFromEnvironmentXcconfigFile;
@property(copy) NSDictionary *propertiesFromCommandLineXcconfigFile;
@property(copy) NSDictionary *propertiesFromCommandLine;
@property(copy) NSDictionary *synthesizedProperties;
- (void)setPropertyDictionary:(id)arg1 forLevel:(int)arg2;

@end

@interface IDETestObserver : NSObject
{
}

- (void)stopObservingLaunchSession:(id)arg1;
- (void)startObservingLaunchSession:(id)arg1;

@end

@interface IDEOCUnitTestObserver : IDETestObserver <IDEOCUnitTestOutputParserDelegate>
{
    IDEOCUnitTestRunner *_testRunner;
    id <DVTObservingToken> _launchSessionObservance;
    NSString *_savedPartialContent;
    NSMutableArray *_testsStack;
    NSMapTable *_consoleAdaptorsToFinishedRecievingDataObservationTokens;
    BOOL _isRunningUnitTests;
    IDEOCUnitTestOutputParser *outputParser;
}

+ (BOOL)_initializedForUserInteraction;
+ (void)initialize;
@property(readonly) IDEOCUnitTestRunner *testRunner; // @synthesize testRunner=_testRunner;
- (void)processConsoleText:(id)arg1;
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (id)parsedTestFromTestClass:(id)arg1 method:(id)arg2;
- (id)parsedTestFromTestSuiteIdentifier:(id)arg1;
- (id)currentTestRecord;
- (id)popTestRecord;
- (void)pushTestRecord:(id)arg1;
- (void)stopObservingLaunchSession:(id)arg1;
- (void)startObservingLaunchSession:(id)arg1;
- (void)_handleConsoleAdaptorsChanged:(id)arg1;
- (void)_handleConsoleAdaptorRemoved:(id)arg1;
- (void)_handleConsoleAdaptorAdded:(id)arg1;
- (void)_handleConsoleOutputAdded:(id)arg1;
- (void)_handleConsoleOutputTerminated;
- (id)initWithTestRunner:(id)arg1;

@end

@interface IDEOCUnitTestOutputParser : NSObject
{
    id <IDEOCUnitTestOutputParserDelegate> _delegate;
    DVTRegularExpression *_testSuiteStartedRegex;
    DVTRegularExpression *_testSuiteFinishedRegex;
    DVTRegularExpression *_testSuiteExecutedRegex;
    DVTRegularExpression *_testCaseStartedRegex;
    DVTRegularExpression *_testCaseFinishedRegex;
    DVTRegularExpression *_testCaseFailedRegex;
    NSArray *_performanceTestParsers;
}

+ (void)_initializeRegularExpressionsIfNeeded;
@property(retain, nonatomic) id <IDEOCUnitTestOutputParserDelegate> delegate; // @synthesize delegate=_delegate;
- (void)processConsoleText:(id)arg1;
- (id)init;

@end

@interface IDETestRunner : NSObject
{
    NSMutableArray *_skippedTests;
    NSMutableArray *_testResults;
    id <IDETestable> _testable;
    IDERunnable *_host;
    IDETestableReference *_testableReference;
}

+ (void)initialize;
@property(retain) IDERunnable *host; // @synthesize host=_host;
@property(retain) IDETestableReference *testableReference; // @synthesize testableReference=_testableReference;
@property(retain) id <IDETestable> testable; // @synthesize testable=_testable;
- (void)didRunTest:(id)arg1 withResult:(id)arg2;
- (BOOL)addTestRunningOperationsToOperationGroup:(id)arg1 executionEnvironment:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 workspace:(id)arg5 error:(id *)arg6 launchParametersBlock:(id)arg7;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableSkippedTests; // @dynamic mutableSkippedTests;
@property(readonly) NSMutableArray *mutableTestResults; // @dynamic mutableTestResults;
@property(copy) NSArray *skippedTests; // @dynamic skippedTests;
@property(copy) NSArray *testResults; // @dynamic testResults;

@end

@interface IDEOCUnitTestRunner : IDETestRunner
{
    NSOperationQueue *_commandLineArgsQueue;
    IDEOCUnitTestObserver *_observer;
}

- (BOOL)addTestRunningOperationsToOperationGroup:(id)arg1 executionEnvironment:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 workspace:(id)arg5 error:(id *)arg6 launchParametersBlock:(id)arg7;
- (id)launchNameForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)testRunIdentifiersForBuildParameters:(id)arg1 runDestination:(id)arg2;
- (id)workingDirectoryForWorkspace:(id)arg1;
- (id)architectureForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)environmentVariablesForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)testBundlePathForBuildParameters:(id)arg1 runDestination:(id)arg2 testRunIdentifier:(id)arg3 testRunIdentifiers:(id)arg4;
- (id)stringRepresentationOfTestScopesWithWorkspace:(id)arg1 supportMultiple:(BOOL)arg2 supportInverse:(BOOL)arg3 invert:(char *)arg4;

@end

@interface IDEOCUnitTestable : NSObject <IDETestable>
{
    NSMutableArray *_tests;
}

+ (void)initialize;
- (void)removeTest:(id)arg1;
- (BOOL)canHaveSubtestsForTestWithIdentifier:(id)arg1;
- (id)supertestForTestWithIdentifier:(id)arg1;
- (id)nameForTestWithIdentifier:(id)arg1;
- (id)testForIdentifier:(id)arg1;
- (void)insertTest:(id)arg1 inTests:(id)arg2;
- (id)parentBuildableInWorkspace:(id)arg1;
- (id)testHostBuildableInWorkspace:(id)arg1;
- (id)primaryBuildable;
- (BOOL)matchesBlueprint:(id)arg1;
- (void)waitUntilTestSearchIsFinished;
@property(readonly) BOOL isSearchingForTests;
- (void)searchForTestsInWorkspace:(id)arg1;
- (id)newTestRunner;
@property(readonly) NSString *name;
@property(readonly) id <IDETestableProvider> testableProvider;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableTests; // @dynamic mutableTests;
@property(readonly) NSArray *tests; // @dynamic tests;

@end

@interface IDEOnDiskActivityLogRecord : IDEActivityLogRecord
{
    IDEOnDiskLogStore_Impl *_logStore;
    IDEActivityLogSection *_strongFullLog;
    IDEActivityLogSection *_weakFullLog;
    IDEActivityLogSection *_recorderLog;
    id <DVTObservingToken> _recorderLogObservingToken;
    NSString *_uniqueIdentifier;
    IDETypeIdentifier *_domainType;
    NSString *_title;
    double _timeStartedRecording;
    double _timeStoppedRecording;
    DVTFileDataType *_documentType;
    NSString *_signature;
}

+ (id)keyPathsForValuesAffectingIsRecording;
@property(retain, nonatomic) IDEActivityLogSection *recorderLog; // @synthesize recorderLog=_recorderLog;
@property(nonatomic) double timeStoppedRecording; // @synthesize timeStoppedRecording=_timeStoppedRecording;
- (id)signature;
- (id)documentType;
- (double)timeStartedRecording;
- (id)title;
- (id)domainType;
- (id)uniqueIdentifier;
- (BOOL)isRecording;
- (void)_setRemovedState;
- (void)_makeWeak;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(id)arg1;
- (BOOL)isRemoved;
- (id)initWithUUID:(id)arg1 store:(id)arg2 cacheEntry:(id)arg3 updatedCache:(char *)arg4 error:(id *)arg5;
- (id)initWithLog:(id)arg1 store:(id)arg2;

@end

@interface IDEOnDiskLogStore : IDELogStore
{
}

+ (id)onDiskStoreInWorkspaceArena:(id)arg1 atSubPath:(id)arg2 error:(id *)arg3;
+ (id)onDiskStoreWithRootDirectoryAtPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEOnDiskLogStore_Impl : IDEOnDiskLogStore
{
    NSString *_rootDirectoryPath;
    NSMutableDictionary *_cache;
    NSMutableDictionary *_cachedLogs;
    NSOperationQueue *_asyncOperations;
    BOOL _preserveOldLogs;
}

- (BOOL)preserveOldLogs;
- (void)setPreserveOldLogs:(BOOL)arg1;
- (id)_pathForUniqueIdentifier:(id)arg1;
- (void)_removeAllButTheLatestLog;
- (void)_removeLogRecord:(id)arg1 completionBlock:(id)arg2;
- (void)_moveToRootDirectoryAtPath:(id)arg1 errorBlock:(id)arg2;
- (id)addLog:(id)arg1 completionBlock:(id)arg2;
- (void)_saveLog:(id)arg1 logRecord:(id)arg2 toPath:(id)arg3 completionBlock:(id)arg4;
- (BOOL)_saveCacheWithError:(id *)arg1;
- (id)_cachePath;
- (id)initWithRootDirectoryAtPath:(id)arg1 error:(id *)arg2;

@end

@interface IDEPathRunnable : IDERunnable <DVTXMLUnarchiving>
{
    DVTFilePath *_filePath;
}

+ (id)keyPathsForValuesAffectingHasRunnablePath;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)setFilePathFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (id)runnableUTIType:(id *)arg1;
- (BOOL)hasRunnablePath;
- (id)pathToRunnableForBuildParameters:(id)arg1;
- (id)toolTip;
- (id)displayName;
- (id)description;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDEPosixSpawnLaunchLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDERunOperationPathWorker : IDERunOperationWorker
{
    DVTFilePath *_filePathToBinary;
}

@property(readonly) NSMutableDictionary *compositeEnvironmentVariables;
@property(readonly) DVTFilePath *filePathToBinary;
@property(readonly) DVTFilePath *filePath;

@end

@interface IDEPosixSpawnLauncher : IDERunOperationPathWorker
{
    void *_file_actions;
    BOOL _startSuspended;
    BOOL _terminateCalled;
    BOOL _targetReallyDead;
    DVTDispatchLock *_atomizingLock;
}

@property BOOL startSuspended; // @synthesize startSuspended=_startSuspended;
- (void)terminate;
- (void)start;
- (void)_setPIDOnMainThread:(int)arg1;
- (void)_forceQuit:(id)arg1;
- (BOOL)_convertCmdArgs:(id)arg1 intoPtrArray:(const char ***)arg2 andEnvVars:(id)arg3 intoPtrArray:(const char ***)arg4 andReturnStandardizedPath:(const char **)arg5 error:(id *)arg6;
- (void)_waitForChildExit;
- (void *)_setupPosixSpawnAttributesAndPTY:(id *)arg1;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

@end

@interface IDEPosixSpawnLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDEProductType : NSObject
{
}

+ (id)productTypeForIdentifier:(id)arg1 platform:(id)arg2;
@property(readonly) IDEProductType *superType;
@property(readonly) DVTPlatform *platform;
@property(readonly) NSString *localizedDescription;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;

@end

@interface IDEProfileSchemeAction : IDESchemeAction <DVTXMLUnarchiving>
{
    IDERunnable *_runnable;
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    id <IDEAnalysisToolService> _analysisToolService;
    BOOL _useCustomWorkingDirectory;
    NSString *_customWorkingDirectory;
    NSString *_resolvedCustomWorkingDirectory;
    BOOL _ignoresPersistentStateOnLaunch;
    BOOL _debugDocumentVersioning;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    NSString *_buildConfiguration;
    NSString *_savedToolIdentifier;
    IDESchemeBuildableReference *_profileBuildableReferenceToUseForMacroExpansion;
}

+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (BOOL)automaticallyNotifiesObserversOfAnalysisToolService;
+ (id)keyPathsForValuesAffectingRunnable;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(retain, nonatomic) NSString *savedToolIdentifier; // @synthesize savedToolIdentifier=_savedToolIdentifier;
@property BOOL debugDocumentVersioning; // @synthesize debugDocumentVersioning=_debugDocumentVersioning;
@property BOOL ignoresPersistentStateOnLaunch; // @synthesize ignoresPersistentStateOnLaunch=_ignoresPersistentStateOnLaunch;
@property(copy, nonatomic) NSString *customWorkingDirectory; // @synthesize customWorkingDirectory=_customWorkingDirectory;
@property BOOL useCustomWorkingDirectory; // @synthesize useCustomWorkingDirectory=_useCustomWorkingDirectory;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
@property(readonly) id <IDEAnalysisToolService> analysisToolService; // @synthesize analysisToolService=_analysisToolService;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)setDebugDocumentVersioningFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setIgnoresPersistentStateOnLaunchFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setSavedToolIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setUseCustomWorkingDirectoryFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_expandMacrosInString:(id)arg1;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (id)buildableReferenceToUseForMacroExpansion;
@property(readonly) NSString *resolvedCustomWorkingDirectory; // @synthesize resolvedCustomWorkingDirectory=_resolvedCustomWorkingDirectory;
@property(readonly) NSDictionary *environmentVariables;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
- (id)commandLineArgumentsForDevice:(id)arg1;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
- (id)runOperationForExecutionEnvironment:(id)arg1 withBuildOperation:(id)arg2 buildParameters:(id)arg3 buildableProductDirectories:(id)arg4 runDestination:(id)arg5 outError:(id *)arg6;
- (void)_setAnalysisToolService:(id)arg1;
- (void)_updateCurrentTool;
- (void)_updateAnalysisToolService;
@property(retain) IDERunnable *runnable; // @synthesize runnable=_runnable;
- (void)_updateProfileActionBuildableToUseForMacroExpansion;
- (void)setRunContext:(id)arg1;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)init;

@end

@interface IDEPseudoTerminal : NSObject
{
    int _masterFD;
    NSFileHandle *_masterFileHandle;
    int _slaveFD;
    NSFileHandle *_slaveFileHandle;
    NSString *_slaveName;
}

@property(readonly) NSFileHandle *slaveFileHandle; // @synthesize slaveFileHandle=_slaveFileHandle;
@property(readonly) NSFileHandle *masterFileHandle; // @synthesize masterFileHandle=_masterFileHandle;
@property(readonly) NSString *slaveName; // @synthesize slaveName=_slaveName;
- (BOOL)_openSlaveCounterpart:(int)arg1 error:(id *)arg2;
- (BOOL)_openFirstAvailableMasterWithAccessMode:(int)arg1 error:(id *)arg2;
- (id)initWithAccessMode:(int)arg1 error:(id *)arg2;
- (void)_closeSlaveFD;
- (void)_closeMasterFD;

@end

@interface IDEReadOnlyItemsManager : NSObject
{
}

+ (id)readOnlyItemsManagerAspect;
+ (id)localizedRecoveryMessageForFailedUnlockingAttemptWithStatus:(int)arg1;
+ (id)localizedDescriptionForReadOnlyStatus:(int)arg1 itemName:(id)arg2 pluralized:(BOOL)arg3;
+ (BOOL)shouldShowLockedIndicatorForStatus:(int)arg1;
+ (BOOL)tryToMakeFilePathWritable:(id)arg1 error:(id *)arg2;
+ (BOOL)_addUserWritePermissionToFilePath:(id)arg1 error:(id *)arg2;
+ (int)readOnlyStatusOfFilePath:(id)arg1;

@end

@interface IDERefactoring : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    BOOL _invalidated;
    DVTStackBacktrace *_invalidationBacktrace;
    id _willIndexNotificationObservingToken;
    id _didIndexNotificationObservingToken;
    BOOL _refactoringAllowed;
    id _domainObject;
}

@property(retain) id domainObject; // @synthesize domainObject=_domainObject;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (id)objCOrCCompilationUnitIndexablesForMainFile:(id)arg1 indexableObjects:(id)arg2;
- (BOOL)isFileObjCCompilationUnitOrHeader:(id)arg1 error:(id *)arg2;
- (id)description;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDERefactoringBuildSettings : NSObject
{
    int _status;
}

+ (id)plistFileSettings;
+ (id)dataModelFileSettings;
+ (id)nibFileSettings;
+ (id)fileInNoIndexables;
+ (id)noBuildSettingsFound;
@property int status; // @synthesize status=_status;
- (id)pathForFileName:(id)arg1 includedByFiles:(id)arg2 usingQuotes:(BOOL)arg3;
@property(readonly) NSNumber *arcMode;
@property(readonly) NSString *languageDialect;
@property(readonly) NSArray *undefinedMacroNames;
@property(readonly) NSArray *predefinedMacroNamesAndDefs;
@property(readonly) NSArray *userIncludePaths;
@property(readonly) NSArray *systemIncludePaths;
@property(readonly) NSArray *frameworkSearchPaths;
@property(readonly) NSSet *plistFilePaths;
@property(readonly) NSArray *preincludeFiles;
- (id)init;

@end

@interface IDERefactoringKeyValueAccessorMethodDescriptor : NSObject
{
    NSString *_methodName;
    int _keyStyle;
    unsigned long long _indexOfKey;
}

@property(readonly) unsigned long long indexOfKey; // @synthesize indexOfKey=_indexOfKey;
@property(readonly) int keyStyle; // @synthesize keyStyle=_keyStyle;
@property(readonly) NSString *methodName; // @synthesize methodName=_methodName;
- (id)description;
- (id)initWithMethodName:(const char *)arg1 keyStyle:(int)arg2 indexOfKey:(unsigned long long)arg3;

@end

@interface IDERunContextManager : NSObject <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    NSMutableSet *_customDataStores;
    NSMapTable *_storeToSpecifierMap;
    NSMapTable *_storeToUserDataMap;
    NSMutableArray *_runContexts;
    IDEScheme *_activeRunContext;
    IDERunDestination *_activeRunDestination;
    NSMutableArray *_activeRunDestinationHistory;
    DVTStackBacktrace *_invalidationBacktrace;
    NSMutableArray *_ignoredChangesDevices;
    NSCountedSet *_schemeNameCounts;
    NSMutableDictionary *_containerReloadingDetails;
    BOOL _bulkChangingBlueprints;
    BOOL _blueprintChangedDuringBulkChanges;
    BOOL _isInvalidated;
}

+ (BOOL)automaticallyNotifiesObserversOfActiveRunDestination;
+ (BOOL)automaticallyNotifiesObserversOfActiveRunContext;
+ (void)initialize;
@property(readonly) NSCountedSet *schemeNameCounts; // @synthesize schemeNameCounts=_schemeNameCounts;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(retain, nonatomic) IDERunDestination *activeRunDestination; // @synthesize activeRunDestination=_activeRunDestination;
@property(retain, nonatomic) IDEScheme *activeRunContext; // @synthesize activeRunContext=_activeRunContext;
@property(readonly) NSArray *runContexts; // @synthesize runContexts=_runContexts;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)setActiveRunContext:(id)arg1 andRunDestination:(id)arg2;
- (void)blueprintsDidBulkChange:(id)arg1;
- (void)blueprintsWillBulkChange:(id)arg1;
- (void)blueprintsDidChange:(id)arg1;
- (void)deviceUsabilityDidChange:(id)arg1;
- (void)_invalidateAvailableRunDestinations;
- (void)_invalidateAvailableRunDestinationsForSchemes:(id)arg1;
- (void)_invalidateActiveRunDestination;
- (id)_bestDestinationForScheme:(id)arg1 previousDestination:(id)arg2;
- (void)shouldIgnoreDeviceChangesDidEnd:(id)arg1;
- (void)shouldIgnoreDeviceChangesWillBegin:(id)arg1;
- (void)_updateOrderHint:(unsigned long long)arg1 forRunContext:(id)arg2;
- (void)_updateIsShown:(BOOL)arg1 forRunContext:(id)arg2;
- (id)runContextManagementDictionaryForStore:(id)arg1;
- (void)saveRunContextManagementDictionaryForStore:(id)arg1;
- (void)_lookupIsShown:(char *)arg1 orderHint:(unsigned long long *)arg2 forCustomDataStore:(id)arg3 specifier:(id)arg4;
- (id)_contextUserStateForCustomDataStore:(id)arg1 specifier:(id)arg2 createIfNeeded:(BOOL)arg3;
- (id)_contextUserStateDictForCustomDataStore:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)_contextUserStateKeyForSpecifier:(id)arg1;
- (void)moveRunContext:(id)arg1 toCustomDataStore:(id)arg2 customDataSpecifier:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (void)deleteRunContexts:(id)arg1 completionQueue:(id)arg2 completionBlock:(id)arg3;
- (id)importRunContextAtURL:(id)arg1 withCustomDataStore:(id)arg2 customDataSpecifier:(id)arg3 orderHint:(unsigned long long)arg4 completionQueue:(id)arg5 completionBlock:(id)arg6;
- (id)duplicateRunContext:(id)arg1 withCustomDataSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
- (id)newSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3;
- (id)_newSchemeWithCustomDataStore:(id)arg1 customDataSpecifier:(id)arg2 orderHint:(unsigned long long)arg3 schemeCreationBlock:(id)arg4;
- (void)_addContext:(id)arg1 specifierToRunContextMap:(id)arg2;
- (id)_uniqueSpecifierForSpecifier:(id)arg1 inMap:(id)arg2;
- (void)_customDataStoresDidUpdate;
- (void)_customDataStoresDidChangeFrom:(id)arg1 to:(id)arg2;
- (void)_customDataStoresWillChangeFrom:(id)arg1 to:(id)arg2;
- (void)_restoreActiveSchemeAndRunDestinationUsingReloadDetails:(id)arg1;
- (id)_containerReloadDetails;
- (void)_finishUpdatingRunContexts;
- (void)_startUpdatingRunContexts;
- (void)_ensureActiveRunContext;
- (void)_updateMap:(id)arg1 contextForCustomDataStore:(id)arg2 specifier:(id)arg3;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithWorkspace:(id)arg1;
- (id)init;

@end

@interface IDERunDestination : NSObject
{
    DVTDevice *_targetDevice;
    NSString *_targetArchitecture;
    DVTSDK *_targetSDK;
    NSDictionary *_buildSettingOverrides;
}

+ (id)validRunDestinationsForRunContext:(id)arg1 executionEnvironment:(id)arg2;
+ (id)validRunDestinationsForScheme:(id)arg1 schemeCommands:(id)arg2 executionEnvironment:(id)arg3;
+ (id)defaultRunDestinationForScheme:(id)arg1 fromRunDestinations:(id)arg2;
+ (void)_checkPathRunnablePlatform:(id)arg1 architectures:(id)arg2 againstDevice:(id)arg3 addingToDestinations:(id)arg4;
+ (void)_checkBuildable:(id)arg1 againstDevice:(id)arg2 withConfiguration:(id)arg3 workspaceArena:(id)arg4 addingToDestinations:(id)arg5;
+ (id)runDestinationWithTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;
+ (id)keyPathsForValuesAffectingFullDisplayName;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)_cachedRunDestinationForDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3;
+ (void)_cacheRunDestination:(id)arg1;
+ (void)initialize;
@property(readonly) NSDictionary *buildSettingOverrides; // @synthesize buildSettingOverrides=_buildSettingOverrides;
@property(readonly) DVTSDK *targetSDK; // @synthesize targetSDK=_targetSDK;
@property(readonly) NSString *targetArchitecture; // @synthesize targetArchitecture=_targetArchitecture;
@property(readonly) DVTDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
- (id)activeArchitectureForBuildArchitectures:(id)arg1;
- (void)didBecomeActiveRunDestinationForRunContext:(id)arg1;
- (id)runOperationForLaunchSession:(id)arg1 error:(id *)arg2;
- (id)runWorkerForLaunchSession:(id)arg1 error:(id *)arg2;
- (id)targetArchitectureForSorting;
- (id)targetSDKForSorting;
- (id)targetDeviceForSorting;
- (id)displayOrder;
- (BOOL)isValidRunDestinationsForScheme:(id)arg1 schemeCommand:(int)arg2 executionEnvironment:(id)arg3 error:(id *)arg4;
- (id)description;
@property(readonly) NSString *fullDisplayName;
@property(readonly) NSString *displayNameAdditions;
@property(readonly) NSString *displayName;
- (id)initWithTargetDevice:(id)arg1 architecture:(id)arg2 SDK:(id)arg3 withBuildSettingOverrides:(id)arg4;

@end

@interface IDERunGeneratesOutputAlertEvent : IDEAlertEvent
{
}

- (void)runInWorkspace:(id)arg1 context:(id)arg2 completionBlock:(id)arg3;

@end

@interface IDERunOperation : DVTOperation <IDEExecutingOperationTrackable, IDERunOperationWorkerDelegate>
{
    IDERunOperationWorker *_worker;
    NSMutableArray *_trackers;
    id <DVTCancellationBlockCompletion> _cancellationToken;
    id _finishToken;
}

+ (id)keyPathsForValuesAffectingLaunchSession;
@property(retain) NSMutableArray *trackers; // @synthesize trackers=_trackers;
- (void)registerTracker:(id)arg1;
- (void)_runningTrackerFinished:(id)arg1;
- (void)runningDidFinish;
@property(readonly) IDELaunchSession *launchSession;
- (void)main;
- (void)workerDidComplete:(id)arg1 withError:(id)arg2;
- (id)initWithWorker:(id)arg1;

@end

@interface IDERunOperationWorkerGroup : IDERunOperationWorker <IDERunOperationWorkerDelegate, IDERunOperationWorkerTracker>
{
    NSArray *_subworkers;
    unsigned long long _completedSubworkers;
    unsigned long long _finishedSubworkers;
}

@property(readonly) NSArray *subworkers; // @synthesize subworkers=_subworkers;
- (void)allSubworkersDidFinishWithError:(id)arg1;
- (void)runningDidFinish:(id)arg1 withError:(id)arg2;
- (void)workerDidComplete:(id)arg1 withError:(id)arg2;
- (void)terminate;
- (void)start;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;
- (id)initWithWorkers:(id)arg1 launchSession:(id)arg2;

@end

@interface IDERunOperationSerialWorkerGroup : IDERunOperationWorkerGroup
{
    unsigned long long _currentWorkerIndex;
    BOOL _started;
}

- (void)workerDidComplete:(id)arg1 withError:(id)arg2;
- (void)start;
- (BOOL)_startNextWorker;

@end

@interface IDEScheme : NSObject <DVTInvalidation>
{
    NSString *_identifier;
    IDEBuildSchemeAction *_buildSchemeAction;
    IDETestSchemeAction *_testSchemeAction;
    IDELaunchSchemeAction *_launchSchemeAction;
    IDEArchiveSchemeAction *_archiveSchemeAction;
    IDEProfileSchemeAction *_profileSchemeAction;
    IDEAnalyzeSchemeAction *_analyzeSchemeAction;
    IDEInstallSchemeAction *_installSchemeAction;
    NSString *_lastUpgradeVersion;
    NSString *_cachedLastUpgradeVersion;
    BOOL _hasRunUpgradeCheck;
    BOOL _wasUpgraded;
    IDERunnable *_oldFormatArchivedRunnable;
    IDERunContextManager *_runContextManager;
    IDEContainer<DVTCustomDataStoring> *_customDataStoreContainer;
    DVTCustomDataSpecifier *_customDataSpecifier;
    NSArray *_availableRunDestinations;
    BOOL _isShown;
    unsigned long long _orderHint;
    BOOL _dataStoreClosed;
    BOOL _isValid;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _deferredSaveScheduled;
    BOOL _registeredForIsBuildableNotifications;
    NSNumber *_isArchivable;
    id _isArchivableNotificationToken;
    NSNumber *_isInstallable;
    id _isInstallableNotificationToken;
    BOOL _hasUnsupportedArchiveData;
}

+ (BOOL)automaticallyNotifiesObserversOfOrderHint;
+ (BOOL)automaticallyNotifiesObserversOfIsShown;
+ (id)keyPathsForValuesAffectingDisambiguatedName;
+ (BOOL)automaticallyNotifiesObserversOfCustomDataStoreContainer;
+ (id)keyPathsForValuesAffectingTestable;
+ (id)keyPathsForValuesAffectingAnalyzable;
+ (id)keyPathsForValuesAffectingProfilable;
+ (id)keyPathsForValuesAffectingRunnable;
+ (id)schemeFromXMLData:(id)arg1 withRunContextManager:(id)arg2 customDataStoreContainer:(id)arg3 customDataSpecifier:(id)arg4 isShown:(BOOL)arg5 orderHint:(unsigned long long)arg6 error:(id *)arg7;
+ (id)schemeWithRunContextManager:(id)arg1 customDataStoreContainer:(id)arg2 customDataSpecifier:(id)arg3;
@property(retain) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(nonatomic, getter=isValid) BOOL valid; // @synthesize valid=_isValid;
@property(readonly) DVTCustomDataSpecifier *customDataSpecifier; // @synthesize customDataSpecifier=_customDataSpecifier;
@property(retain, nonatomic) IDEContainer<DVTCustomDataStoring> *customDataStoreContainer; // @synthesize customDataStoreContainer=_customDataStoreContainer;
@property(readonly) IDERunContextManager *runContextManager; // @synthesize runContextManager=_runContextManager;
@property BOOL wasUpgraded; // @synthesize wasUpgraded=_wasUpgraded;
@property BOOL hasRunUpgradeCheck; // @synthesize hasRunUpgradeCheck=_hasRunUpgradeCheck;
@property(copy) NSString *lastUpgradeVersion; // @synthesize lastUpgradeVersion=_lastUpgradeVersion;
@property(copy) NSString *cachedLastUpgradeVersion; // @synthesize cachedLastUpgradeVersion=_cachedLastUpgradeVersion;
@property(readonly) IDEInstallSchemeAction *installSchemeAction; // @synthesize installSchemeAction=_installSchemeAction;
@property(readonly) IDEAnalyzeSchemeAction *analyzeSchemeAction; // @synthesize analyzeSchemeAction=_analyzeSchemeAction;
@property(readonly) IDEProfileSchemeAction *profileSchemeAction; // @synthesize profileSchemeAction=_profileSchemeAction;
@property(readonly) IDEArchiveSchemeAction *archiveSchemeAction; // @synthesize archiveSchemeAction=_archiveSchemeAction;
@property(readonly) IDELaunchSchemeAction *launchSchemeAction; // @synthesize launchSchemeAction=_launchSchemeAction;
@property(readonly) IDETestSchemeAction *testSchemeAction; // @synthesize testSchemeAction=_testSchemeAction;
@property(readonly) IDEBuildSchemeAction *buildSchemeAction; // @synthesize buildSchemeAction=_buildSchemeAction;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLaunchPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildPhase:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addArchiveAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addInstallAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addAnalyzeAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addProfileAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLaunchAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildAction:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setLastUpgradeVersionFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
@property(readonly) NSData *xmlData;
- (BOOL)_executionActionsNeedCurrentArchiveVersion;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_groupAndImposeDependenciesForOrderedOperations:(id)arg1;
- (id)_buildOperationGroupForExecutionEnvironment:(id)arg1 buildConfiguration:(id)arg2 buildPurpose:(int)arg3 buildCommand:(int)arg4 schemeCommand:(int)arg5 overridingProperties:(id)arg6 destination:(id)arg7 buildLog:(id)arg8 filePath:(id)arg9 error:(id *)arg10;
- (id)_executionOperationForExecutionEnvironment:(id)arg1 build:(BOOL)arg2 onlyBuild:(BOOL)arg3 buildPurpose:(int)arg4 buildCommand:(int)arg5 schemeCommand:(int)arg6 overridingProperties:(id)arg7 destination:(id)arg8 buildLog:(id)arg9 filePath:(id)arg10 error:(id *)arg11 testCallbackBlock:(id)arg12;
- (id)installWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 commandName:(id)arg5 error:(id *)arg6;
- (id)archiveWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 commandName:(id)arg5 error:(id *)arg6;
- (id)archiveOperactionWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 commandName:(id)arg5 buildLog:(id)arg6 error:(id *)arg7;
- (id)testWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 commandName:(id)arg6 error:(id *)arg7;
- (id)testOperationWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 commandName:(id)arg6 buildLog:(id)arg7 error:(id *)arg8 testCallbackBlock:(id)arg9;
- (id)profileWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 commandName:(id)arg6 error:(id *)arg7;
- (id)runWithExecutionContext:(id)arg1 buildIfNeeded:(BOOL)arg2 onlyBuild:(BOOL)arg3 destination:(id)arg4 overridingProperties:(id)arg5 commandName:(id)arg6 error:(id *)arg7;
- (id)analyzeWithExecutionContext:(id)arg1 onlyBuild:(BOOL)arg2 destination:(id)arg3 overridingProperties:(id)arg4 commandName:(id)arg5 error:(id *)arg6;
- (id)cleanWithExecutionContext:(id)arg1 destination:(id)arg2 overridingProperties:(id)arg3 commandName:(id)arg4 error:(id *)arg5;
- (id)buildWithPurpose:(int)arg1 buildCommand:(int)arg2 schemeCommand:(int)arg3 executionContext:(id)arg4 destination:(id)arg5 overridingProperties:(id)arg6 commandName:(id)arg7 filePath:(id)arg8 error:(id *)arg9 completionBlock:(id)arg10;
- (void)_updateOrderHint:(unsigned long long)arg1;
@property unsigned long long orderHint;
- (void)_updateIsShown:(BOOL)arg1;
@property BOOL isShown;
@property BOOL isShared;
@property(readonly) NSString *disambiguatedName;
@property(copy) NSString *name;
- (void)_primitiveSetCustomDataStoreContainer:(id)arg1;
- (void)_updateCustomDataStoreContainer:(id)arg1 andSpecifier:(id)arg2;
- (void)_invalidateAvailableRunDestinations;
@property(readonly) NSArray *availableRunDestinations;
- (void)buildConfigurationDidChange:(id)arg1;
- (id)buildParametersForSchemeCommand:(int)arg1 destination:(id)arg2;
- (id)buildConfigurationForSchemeCommand:(int)arg1;
- (id)buildablesForSchemeCommand:(int)arg1;
- (id)runnablePathForSchemeCommand:(int)arg1 destination:(id)arg2;
- (id)schemeActionForSchemeCommand:(int)arg1;
@property(readonly, getter=isInstallable) BOOL installable;
@property(readonly, getter=isArchivable) BOOL archivable;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly, getter=isAnalyzable) BOOL analyzable;
@property(readonly, getter=isProfilable) BOOL profilable;
@property(readonly, getter=isRunnable) BOOL runnable;
@property(readonly, getter=isBuildable) BOOL buildable;
- (void)invalidate;
@property(readonly) BOOL isClosed;
- (void)customDataStoreContainerClosing:(id)arg1;
- (void)performDelayedSave:(id)arg1;
- (void)markSchemeDirty;
- (void)resolveBuildablesFromImport;
- (id)description;
- (id)initFromUnarchiver:(BOOL)arg1 runContextManager:(id)arg2 customDataStoreContainer:(id)arg3 customDataSpecifier:(id)arg4 isShown:(BOOL)arg5 orderHint:(unsigned long long)arg6;

@end

@interface IDESchemeBuildableReference : NSObject <DVTXMLUnarchiving, NSCopying>
{
    NSString *_buildableIdentifier;
    NSString *_blueprintIdentifier;
    NSString *_cachedBuildableName;
    NSString *_cachedBlueprintName;
    NSString *_legacyBuildableIdentifier;
    IDEContainer<IDEBlueprintProvider> *_referencedContainer;
    NSString *_lastArchivedReferencedContainerPath;
    IDEScheme *_scheme;
    id <DVTObservingToken> _referencedContainersObservingToken;
    id <DVTObservingToken> _referencedContainerFilePathObservingToken;
    id <DVTObservingToken> _resolvedBuildableNameObservingToken;
    id <DVTObservingToken> _resolvedBlueprintNameObservingToken;
    BOOL _resolvingBlueprint;
}

+ (id)resolvedBuildableForLegacyIdentifier:(id)arg1 inContainer:(id)arg2;
+ (id)keyPathsForValuesAffectingBlueprintName;
+ (id)keyPathsForValuesAffectingBuildableName;
+ (id)keyPathsForValuesAffectingResolvedBuildable;
+ (id)keyPathsForValuesAffectingResolvedBlueprint;
@property(copy) NSString *cachedBlueprintName; // @synthesize cachedBlueprintName=_cachedBlueprintName;
@property(copy) NSString *cachedBuildableName; // @synthesize cachedBuildableName=_cachedBuildableName;
@property(nonatomic) IDEContainer<IDEBlueprintProvider> *referencedContainer; // @synthesize referencedContainer=_referencedContainer;
@property(copy) NSString *blueprintIdentifier; // @synthesize blueprintIdentifier=_blueprintIdentifier;
@property(copy) NSString *buildableIdentifier; // @synthesize buildableIdentifier=_buildableIdentifier;
@property(retain, nonatomic) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)setReferencedContainerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBlueprintNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableNameFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBlueprintIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setBuildableProductIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)loadLegacyBuildableWithResolutionContextContainer:(id)arg1;
- (void)resolveBuildableFromImport;
- (BOOL)referencesSameBuildableAsReference:(id)arg1;
- (id)currentReferencedContainerPath;
- (id)referencedContainerFromSchemeForArchivedPath:(id)arg1;
- (id)referenceResolutionContext;
- (id)containerReferenceResolver;
@property(readonly) NSString *blueprintName;
@property(readonly) NSString *buildableName;
- (BOOL)updateCachedBuildableName;
- (BOOL)updateCachedBlueprintName;
@property(readonly) id <IDEBuildable> resolvedBuildable;
@property(readonly) id <IDEBlueprint> resolvedBlueprint;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithBuildable:(id)arg1 scheme:(id)arg2;
- (void)_IDESchemeBuildableReferenceSharedInit;

@end

@interface IDEScriptingProxy : IDEScriptingElement
{
    id _key;
    id _collection;
}

+ (id)wrapDictionary:(id)arg1 inProxy:(Class)arg2 forContainer:(id)arg3 andAccessor:(id)arg4;
+ (id)wrapItemOfDictionary:(id)arg1 forKey:(id)arg2 inProxy:(Class)arg3 forContainer:(id)arg4 andAccessor:(id)arg5;
@property(retain) id collection; // @synthesize collection=_collection;
@property(retain) id key; // @synthesize key=_key;
- (id)objectSpecifier;
- (BOOL)isEqual:(id)arg1;
- (void)setValue:(id)arg1;
- (id)value;
- (id)scriptingID;
- (id)name;
- (id)description;

@end

@interface IDESharedLibraryEntry : NSObject
{
    long long _identifer;
    NSString *_name;
    unsigned long long _address;
    NSString *_path;
    int _debugSymbolsLoadState;
}

@property int debugSymbolsLoadState; // @synthesize debugSymbolsLoadState=_debugSymbolsLoadState;
@property(readonly) NSString *path; // @synthesize path=_path;
@property(readonly) unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) long long identifier; // @synthesize identifier=_identifer;
@property(readonly) NSString *displayAddress;
- (id)initWithIdentifer:(long long)arg1 name:(id)arg2 address:(unsigned long long)arg3 path:(id)arg4 debugSymbolsLoadState:(int)arg5;

@end

@interface IDEShellCommandBreakpointAction : IDEBreakpointAction
{
    NSString *_command;
    NSString *_arguments;
    BOOL _waitUntilDone;
}

+ (id)propertiesAffectingPersistenceState;
@property BOOL waitUntilDone; // @synthesize waitUntilDone=_waitUntilDone;
@property(copy) NSString *arguments; // @synthesize arguments=_arguments;
@property(copy) NSString *command; // @synthesize command=_command;
- (void)setWaitUntilDoneFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)_stringForFileHandleData:(id)arg1;
- (id)_taskWithLaunchPath:(id)arg1 arguments:(id)arg2 consoleAdaptor:(id)arg3;
- (id)_errorMessageForShellCommandValidity:(int)arg1 shellCommand:(id)arg2;
- (int)_commandValidity:(id)arg1;
- (id)_fullPathOfCommand:(int *)arg1;
- (void)performActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (id)_argumentsArrayForBreakpoint:(id)arg1;
- (void)_shellCommandActionCommonInit;
- (id)init;

@end

@interface IDESimulateLocationService : DVTDeviceService
{
}

+ (id)capability;
- (void)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2 error:(id *)arg3;
- (void)stopLocationSimulationWithError:(id *)arg1;

@end

@interface IDESnapshotItem : NSObject
{
    NSString *_name;
    NSString *_comment;
    int _type;
    NSDate *_date;
    NSString *_revision;
}

@property(copy) NSString *revision; // @synthesize revision=_revision;
@property(copy) NSDate *date; // @synthesize date=_date;
@property int type; // @synthesize type=_type;
@property(copy) NSString *comment; // @synthesize comment=_comment;
@property(copy) NSString *name; // @synthesize name=_name;
- (id)description;

@end

@interface IDESnapshotsEngine : NSObject
{
}

+ (void)fileAndDirectoryDifferencesBetweenPath:(id)arg1 andPath:(id)arg2 completionBlock:(id)arg3;
+ (id)beginRestoreOfSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3 completionBlock:(id)arg4;
+ (void)finishRestoreOfSnapshotWithContext:(id)arg1 exportedSnapshotLocation:(id)arg2 completionBlock:(id)arg3;
+ (id)exportSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3 completionBlock:(id)arg4;
+ (id)_exportSnapshot:(id)arg1 toLocation:(id)arg2 tmpExportLocation:(id)arg3;
+ (id)_pathForTmpFiles;
+ (id)_removeFilePaths:(id)arg1 inPath:(id)arg2;
+ (id)_copyOrReplaceFilePaths:(id)arg1 fromPath:(id)arg2 toPath:(id)arg3;
+ (BOOL)isPathValidForSnapshots:(id)arg1;
+ (id)_firstInterestingFilePathInLocation:(id)arg1;
+ (id)exportRequestForSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3;
+ (BOOL)commitSnapshot:(id)arg1 withCommitMessage:(id)arg2 error:(id *)arg3;
+ (BOOL)snapshotFiles:(id)arg1 toRepository:(id)arg2 error:(id *)arg3;
+ (id)filesToSnapshotInWorkspace:(id)arg1;
+ (id)consolidatedFilePathFromPaths:(id)arg1 workingTreesRoots:(id)arg2;
+ (BOOL)createSnapshotRepositoryAtPath:(id)arg1 forWorkspace:(id)arg2 error:(id *)arg3;
+ (void)performSyncGitRequest:(int)arg1 files:(id)arg2 repositoryPath:(id)arg3 message:(id)arg4 completionBlock:(id)arg5;

@end

@interface IDESnapshotsManager : NSObject
{
    BOOL _areSnapshotsEnabled;
    DVTPerformanceMetric *_metric;
}

+ (id)sourceControlSystemUsedForSnapshotsWithError:(id *)arg1;
+ (id)snapshotsLogAspect;
+ (id)sharedManager;
- (id)restoreSnapshot:(id)arg1 fromRepositoryAtPath:(id)arg2 toLocation:(id)arg3 completionBlock:(id)arg4;
- (id)tmpFileForFileAtOriginalLocation:(id)arg1 fromSnapshot:(id)arg2 fromRepositoryAtPath:(id)arg3 completionBlock:(id)arg4;
- (id)modifiedFilesBetweenSnapshot:(id)arg1 andPreviousSnapshot:(id)arg2 fromRepositoryAtPath:(id)arg3 completionBlock:(id)arg4;
- (id)snapshotsForRepositoryAtPath:(id)arg1 completionBlock:(id)arg2;
@property BOOL areSnapshotsEnabled; // @synthesize areSnapshotsEnabled=_areSnapshotsEnabled;
- (id)snapshotsFolderPath;
- (id)snapshotExtension;

@end

@interface IDESnapshotsRestoreContext : NSObject
{
    IDESnapshotItem *_snapshot;
    DVTFilePath *_repositoryPath;
    DVTFilePath *_exportLocation;
    NSArray *_pathsToRestore;
}

+ (id)contextWithSnapshot:(id)arg1 repositoryPath:(id)arg2 exportLocation:(id)arg3 pathsToRestore:(id)arg4;
@property(retain) NSArray *pathsToRestore; // @synthesize pathsToRestore=_pathsToRestore;
@property(retain) DVTFilePath *exportLocation; // @synthesize exportLocation=_exportLocation;
@property(retain) DVTFilePath *repositoryPath; // @synthesize repositoryPath=_repositoryPath;
@property(retain) IDESnapshotItem *snapshot; // @synthesize snapshot=_snapshot;

@end

@interface IDESourceControlBranch : NSObject
{
    NSString *_name;
    IDESourceControlTree *_sourceTree;
    BOOL _isTrunk;
    BOOL _orphaned;
}

@property BOOL orphaned; // @synthesize orphaned=_orphaned;
@property(readonly) BOOL isTrunk; // @synthesize isTrunk=_isTrunk;
@property(readonly) IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
@property(readonly) NSString *name; // @synthesize name=_name;
- (BOOL)isEqualTo:(id)arg1;
- (id)nameOfTrackingBranch:(id)arg1;
- (id)revisionsWithStartingRevision:(id)arg1 endingRevision:(id)arg2 limit:(unsigned long long)arg3 branch:(id)arg4 completionBlock:(id)arg5;
- (id)currentRevisionWithCompletionBlock:(id)arg1;
@property(readonly) NSString *repositoryURLString;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (id)initWithName:(id)arg1 sourceTree:(id)arg2 isTrunk:(BOOL)arg3;

@end

@interface IDESourceControlDocumentLocation : DVTDocumentLocation
{
    NSString *_branchName;
    NSString *_revisionName;
}

@property(readonly) NSString *revisionName; // @synthesize revisionName=_revisionName;
@property(readonly) NSString *branchName; // @synthesize branchName=_branchName;
- (id)description;
- (BOOL)isEqualDisregardingTimestamp:(id)arg1;
- (id)workingTreeItem;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentLocation:(id)arg1 branchName:(id)arg2 revisionName:(id)arg3;
- (id)initWithDocumentURL:(id)arg1 branchName:(id)arg2 revisionName:(id)arg3;

@end

@interface IDESourceControlExtension : NSObject
{
    id <IDESourceControlProtocol> _delegate;
    NSString *_identifier;
    NSString *_title;
    NSString *_directoryIdentifier;
    Class _delegateClass;
    NSArray *_supportedProtocols;
    BOOL _distributed;
    BOOL _requiresUsernameInURL;
    BOOL _commitMessageRequired;
    BOOL _supportsLocalBlame;
    BOOL _supportsFineGrainedCheckouts;
    BOOL _repositoryLayoutNeeded;
    BOOL _supportsRemotes;
}

@property(readonly) BOOL supportsRemotes; // @synthesize supportsRemotes=_supportsRemotes;
@property(readonly) BOOL repositoryLayoutNeeded; // @synthesize repositoryLayoutNeeded=_repositoryLayoutNeeded;
@property(readonly) BOOL supportsFineGrainedCheckouts; // @synthesize supportsFineGrainedCheckouts=_supportsFineGrainedCheckouts;
@property(readonly) BOOL supportsLocalBlame; // @synthesize supportsLocalBlame=_supportsLocalBlame;
@property(readonly) BOOL commitMessageRequired; // @synthesize commitMessageRequired=_commitMessageRequired;
@property(readonly) BOOL requiresUsernameInURL; // @synthesize requiresUsernameInURL=_requiresUsernameInURL;
@property(readonly) BOOL distributed; // @synthesize distributed=_distributed;
@property(readonly) NSArray *supportedProtocols; // @synthesize supportedProtocols=_supportedProtocols;
@property(readonly) Class delegateClass; // @synthesize delegateClass=_delegateClass;
@property(readonly) NSString *directoryIdentifier; // @synthesize directoryIdentifier=_directoryIdentifier;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSString *Xcode3Title;
@property(readonly) id <IDESourceControlProtocol> delegate; // @synthesize delegate=_delegate;
- (id)initWithDVTExtension:(id)arg1;

@end

@interface IDESourceControlIssueProvider : IDEIssueProvider
{
    IDEWorkspace *_workspace;
    id <DVTObservingToken> _scmMonitorObservingToken;
    id _didUpdateServerStatusNotificationToken;
    id _didUpdateLocalStatusNotificationToken;
    NSDictionary *_localizedStrings;
}

+ (id)_issueScanningQueue;
- (id)ideModelObjectTypeIdentifier;
- (id)_issueTypeIdentifierForStatus:(int)arg1;
- (id)_shortMessageForItem:(id)arg1;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (id)_locationsOfTextualConflictsAtPath:(id)arg1;
- (id)_issuesForItemWithStatus:(id)arg1;
- (void)_scanForIssues;
- (void)invalidate;
- (void)_setUpSourceControlObserving;
- (id)_localizedStringForKey:(id)arg1;
- (void)_generateLocalizedStrings;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDESourceControlLogProvider : IDELogProvider
{
}

+ (id)keyPathsForValuesAffectingLogRecords;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;

@end

@interface IDESourceControlManager : NSObject
{
    NSMutableArray *_repositories;
    NSMutableArray *_extensions;
    NSOperationQueue *_operationQueue;
    NSMutableDictionary *_workingCopyRootDirectories;
    NSMutableArray *_holdingQueue;
    DVTDispatchLock *_holdingQueueLock;
    DVTDispatchLock *_sharedRepositoryLock;
    unsigned long long _maxConcurrentOperationCount;
    BOOL _localStatusCheckingEnabled;
    BOOL _remoteStatusCheckingEnabled;
    BOOL _waitingForAuthentication;
}

+ (id)sourceControlProfilingLogAspect;
+ (id)sourceControlAuthenticationLogAspect;
+ (id)sourceControlFileScanningLogAspect;
+ (id)sourceControlLogAspect;
+ (id)sharedSourceControlManager;
@property(copy) NSMutableDictionary *workingCopyRootDirectories; // @synthesize workingCopyRootDirectories=_workingCopyRootDirectories;
@property(readonly) NSArray *repositories; // @synthesize repositories=_repositories;
@property(readonly) NSArray *extensions; // @synthesize extensions=_extensions;
- (void)cancelRequest:(id)arg1;
- (void)performRequest:(id)arg1 withCompletionBlock:(id)arg2;
- (void)performRequest:(id)arg1 waitUntilFinished:(BOOL)arg2 withCompletionBlock:(id)arg3;
- (void)handleError:(id)arg1 forRequest:(id)arg2 operation:(id)arg3 waitUntilFinished:(BOOL)arg4 withCompletionBlock:(id)arg5;
- (BOOL)validateRequest:(id)arg1 error:(id *)arg2;
@property BOOL waitingForAuthentication; // @synthesize waitingForAuthentication=_waitingForAuthentication;
@property unsigned long long maxConcurrentOperationCount; // @synthesize maxConcurrentOperationCount=_maxConcurrentOperationCount;
- (void)_finishLogForRequest:(id)arg1 operation:(id)arg2 withResult:(int)arg3;
- (void)_startLogForRequest:(id)arg1 operation:(id)arg2;
- (void)removeAssociatedRepositoryRoot:(id)arg1 withFilePath:(id)arg2;
- (void)associateRepositoryRoot:(id)arg1 withFilePath:(id)arg2;
- (void)remoteRootPathForFilePath:(id)arg1 sourceControlExtension:(id)arg2 completionBlock:(id)arg3;
- (void)workingTreeRootForFilePath:(id)arg1 sourceControlExtension:(id)arg2 completionBlock:(id)arg3;
- (void)workingTreeRootForFilePath:(id)arg1 completionBlock:(id)arg2;
- (void)workingTreeForFilePath:(id)arg1 completionBlock:(id)arg2;
- (id)workingTreeForFilePath:(id)arg1;
- (id)extensionForRequest:(id)arg1;
- (id)commonExtensionForPaths:(id)arg1;
- (id)extensionForURL:(id)arg1;
- (id)extensionToUseForFilePath:(id)arg1;
- (void)scanForExtensionsInFilePath:(id)arg1;
- (id)extensionsAtFilePath:(id)arg1;
- (void)invalidateExtensionsForFilePath:(id)arg1;
- (id)extensionsAssociatedWithFilePath:(id)arg1;
- (void)removeAssociatedExtension:(id)arg1 withPath:(id)arg2;
- (void)associateExtension:(id)arg1 withPath:(id)arg2;
- (id)extensionMatchingDirectoryIdentifier:(id)arg1;
- (id)extensionsMatchingProtocol:(id)arg1;
- (id)extensionMatchingIdentifier:(id)arg1;
- (void)removeRepository:(id)arg1 removePasswordFromKeychain:(BOOL)arg2;
- (void)addRepository:(id)arg1;
- (BOOL)containsRepository:(id)arg1;
- (void)updateUserDefaults;
- (id)arrayOfRepositoryDictionaries;
- (id)repositoryForLocation:(id)arg1 sourceControlExtension:(id)arg2;
- (id)repositoriesForExtension:(id)arg1;
@property BOOL remoteStatusCheckingEnabled; // @synthesize remoteStatusCheckingEnabled=_remoteStatusCheckingEnabled;
@property BOOL localStatusCheckingEnabled; // @synthesize localStatusCheckingEnabled=_localStatusCheckingEnabled;
- (id)_directoryIdentifiers;
- (void)loadRepositories;
- (void)loadExtensions;
- (id)defaultExtension;
- (id)initWithSavedRepositories:(BOOL)arg1;

@end

@interface IDESourceControlMultipleStepInvalidationToken : NSObject <DVTInvalidation>
{
    IDESourceControlRequest *_currentRequest;
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property __weak IDESourceControlRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;

@end

@interface IDESourceControlOperation : DVTOperation
{
    NSArray *_result;
    IDESourceControlRequest *_request;
    NSString *_rawInput;
    NSString *_rawStandardOutput;
    NSString *_rawErrorOutput;
}

@property(readonly) IDESourceControlRequest *request; // @synthesize request=_request;
@property(retain) NSArray *result; // @synthesize result=_result;
- (void)cancel;
@property(retain) NSString *rawErrorOutput; // @synthesize rawErrorOutput=_rawErrorOutput;
@property(retain) NSString *rawStandardOutput; // @synthesize rawStandardOutput=_rawStandardOutput;
@property(retain) NSString *rawInput; // @synthesize rawInput=_rawInput;
- (id)initWithRequest:(id)arg1;

@end

@interface IDESourceControlTree : DVTModelTree <DVTInvalidation>
{
    DVTDispatchLock *_childrenChangeLock;
    IDESourceControlManager *_sourceControlManager;
    IDESourceControlExtension *_sourceControlExtension;
    DVTStackBacktrace *_invalidationBacktrace;
    NSString *_location;
    NSString *_name;
    NSString *_origin;
    int _reachabilityFlags;
    unsigned long long _state;
    long long _reachable;
    BOOL _isInvalidated;
    BOOL _disallowLoadingChildren;
    BOOL _isObservingReachability;
}

+ (void)initialize;
+ (id)keyPathsForValuesAffectingConnected;
+ (id)treeLoadingModelObjectGraph;
@property BOOL isObservingReachability; // @synthesize isObservingReachability=_isObservingReachability;
@property long long reachable; // @synthesize reachable=_reachable;
@property BOOL disallowLoadingChildren; // @synthesize disallowLoadingChildren=_disallowLoadingChildren;
@property unsigned long long state; // @synthesize state=_state;
@property int reachabilityFlags; // @synthesize reachabilityFlags=_reachabilityFlags;
@property(readonly) NSString *origin; // @synthesize origin=_origin;
@property(copy) NSString *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
@property(readonly) IDESourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (id)branchesWithCompletionBlock:(id)arg1;
- (id)description;
- (BOOL)isSameAsSourceTreeAtLocation:(id)arg1;
- (BOOL)containsItemAtLocation:(id)arg1;
- (void)endObservingReachability;
- (void)startObservingReachability;
@property(readonly) BOOL connected;
- (void)_setOrigin:(id)arg1;
- (id)subclass_createRootNode;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlExtension:(id)arg2 sourceControlManager:(id)arg3;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

// Remaining properties
@property(readonly) IDESourceControlTreeGroup *rootGroup; // @dynamic rootGroup;

@end

@interface IDESourceControlRepository : IDESourceControlTree /* <NSURLConnectionDelegate> */
{
    struct __SCNetworkReachability *_reachabilityRef;
    NSMutableArray *_workingTrees;
    DVTDispatchLock *_branchesLock;
    NSMutableArray *_branches;
    NSURL *_trunkLocation;
    NSURL *_branchesLocation;
    NSURL *_tagsLocation;
    NSDate *_branchesInvalidationDate;
    DVTDispatchLock *_remotesLock;
    NSMutableArray *_remotes;
    NSURL *_URL;
    NSString *_root;
    NSString *_user;
    NSString *_password;
    NSString *_keychainName;
    IDESourceControlBranch *_trunkBranch;
    NSMutableDictionary *_authenticationDictionary;
    NSString *_relativeTrunkLocation;
    NSString *_relativeBranchesLocation;
    NSString *_relativeTagsLocation;
    NSMutableArray *_itemsWithStatus;
    DVTDispatchLock *_itemsWithStatusLock;
    IDESourceControlRequest *_repositorySetupRequest;
    BOOL _authenticated;
    BOOL _doNotAuthenticate;
    BOOL _shouldRetryAuthentication;
}

+ (id)keyPathsForValuesAffectingRelativeTagsLocation;
+ (id)keyPathsForValuesAffectingRelativeBranchesLocation;
+ (id)keyPathsForValuesAffectingRelativeTrunkLocation;
+ (unsigned int)securityProtocolForURL:(id)arg1;
@property BOOL shouldRetryAuthentication; // @synthesize shouldRetryAuthentication=_shouldRetryAuthentication;
@property(copy, nonatomic) NSString *relativeTagsLocation; // @synthesize relativeTagsLocation=_relativeTagsLocation;
@property(copy, nonatomic) NSString *relativeBranchesLocation; // @synthesize relativeBranchesLocation=_relativeBranchesLocation;
@property(copy, nonatomic) NSString *relativeTrunkLocation; // @synthesize relativeTrunkLocation=_relativeTrunkLocation;
@property(readonly) IDESourceControlBranch *trunkBranch; // @synthesize trunkBranch=_trunkBranch;
@property(nonatomic) BOOL doNotAuthenticate; // @synthesize doNotAuthenticate=_doNotAuthenticate;
@property(nonatomic) BOOL authenticated; // @synthesize authenticated=_authenticated;
@property(readonly) NSArray *workingTrees; // @synthesize workingTrees=_workingTrees;
@property(readonly) NSString *root; // @synthesize root=_root;
- (id)stripBaseURLOrStartingSlash:(id)arg1;
- (void)checkForExistanceOfPathComponent:(id)arg1 withCompletionBlock:(id)arg2;
- (BOOL)isSameAsSourceTreeAtLocation:(id)arg1;
@property(copy) NSURL *tagsLocation; // @synthesize tagsLocation=_tagsLocation;
@property(copy) NSURL *trunkLocation; // @synthesize trunkLocation=_trunkLocation;
@property(copy) NSURL *branchesLocation; // @synthesize branchesLocation=_branchesLocation;
- (id)trackRemoteBranch:(id)arg1 withLocalBranchName:(id)arg2 completionBlock:(id)arg3;
- (id)removeRemoteWithName:(id)arg1 completionBlock:(id)arg2;
- (id)newRemoteWithName:(id)arg1 location:(id)arg2 completionBlock:(id)arg3;
- (id)remotesWithCompletionBlock:(id)arg1;
- (id)_remoteWithName:(id)arg1 andLocation:(id)arg2;
- (void)setRemotes:(id)arg1;
@property(readonly) NSMutableArray *remotes;
- (id)removeBranchWithName:(id)arg1 message:(id)arg2 force:(BOOL)arg3 completionBlock:(id)arg4;
- (id)newBranchWithName:(id)arg1 source:(id)arg2 message:(id)arg3 completionBlock:(id)arg4;
- (id)branchesWithCompletionBlock:(id)arg1;
- (id)defaultBranchStartingPoint;
- (void)setBranches:(id)arg1;
@property(readonly) NSMutableArray *branches;
- (void)removeWorkingTree:(id)arg1;
- (void)addWorkingTree:(id)arg1;
- (void)endObservingReachability;
- (void)startObservingReachability;
- (void)testReachabilityWithCompletionBlock:(id)arg1;
- (long long)reachable;
- (BOOL)connected;
- (id)localURL;
- (void)authenticateWithCompletionBlock:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)testCredentialsWithCompletionBlock:(id)arg1;
- (int)removePasswordFromKeychain;
- (void)savePasswordToKeychain;
- (void)savePasswordToKeychainForSubversionHTTPWithProtectionSpace:(id)arg1;
- (int)setGenericPassword:(id)arg1 item:(struct OpaqueSecKeychainItemRef *)arg2;
- (struct OpaqueSecAccessRef *)setAccessForKeychainItem:(struct OpaqueSecKeychainItemRef *)arg1 withAccessLabel:(id)arg2;
- (void)setPassword:(id)arg1 forSubversionHTTPWithProtectionSpace:(id)arg2;
@property(copy) NSString *password; // @synthesize password=_password;
- (id)Xcode3ApplicationPassword;
- (id)Xcode3AccountName;
- (id)passwordForSubversionHTTP;
- (id)internetPassword;
- (void)invalidate;
@property(readonly) BOOL isRemoteDistributedRepository;
- (id)ideModelObjectTypeIdentifier;
- (void)clearServerStatus;
- (void)clearLocalStatus;
- (void)clearLocalAndServerStatus;
- (void)clearStatusForItem:(id)arg1;
- (void)addItemWithStatus:(id)arg1;
@property(readonly) NSArray *itemsWithStatus;
- (BOOL)containsItemAtLocation:(id)arg1;
- (id)itemAtURL:(id)arg1 isGroup:(BOOL)arg2;
- (void)_setRoot:(id)arg1;
@property(copy) NSString *user; // @synthesize user=_user;
@property(readonly) NSURL *URL; // @synthesize URL=_URL;
- (void)setLocation:(id)arg1;
- (void)setupRepositoryInformationWithCompletionBlock:(id)arg1;
- (void)setSourceControlExtension:(id)arg1;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1 sourceControlExtension:(id)arg2 sourceControlManager:(id)arg3;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

@end

@interface IDESourceControlRemote : IDESourceControlRepository
{
    IDESourceControlRepository *_repository;
    BOOL _representsGitSVNBridge;
}

@property BOOL representsGitSVNBridge; // @synthesize representsGitSVNBridge=_representsGitSVNBridge;
@property(readonly) IDESourceControlRepository *repository; // @synthesize repository=_repository;
- (void)setRelativeTagsLocation:(id)arg1;
- (void)setRelativeBranchesLocation:(id)arg1;
- (void)setRelativeTrunkLocation:(id)arg1;
- (void)setTagsLocation:(id)arg1;
- (void)setTrunkLocation:(id)arg1;
- (void)setBranchesLocation:(id)arg1;
- (id)tagsLocation;
- (id)trunkLocation;
- (id)branchesLocation;
- (id)removeRemoteWithName:(id)arg1 completionBlock:(id)arg2;
- (id)newRemoteWithName:(id)arg1 location:(id)arg2 completionBlock:(id)arg3;
- (id)remotesWithCompletionBlock:(id)arg1;
- (void)setRemotes:(id)arg1;
- (id)remotes;
- (id)removeBranchWithName:(id)arg1 message:(id)arg2 force:(BOOL)arg3 completionBlock:(id)arg4;
- (id)defaultBranchStartingPoint;
- (void)removeWorkingTree:(id)arg1;
- (void)addWorkingTree:(id)arg1;
- (void)setupRepositoryInformationWithCompletionBlock:(id)arg1;
- (id)initWithName:(id)arg1 location:(id)arg2 repository:(id)arg3 sourceControlManager:(id)arg4 sourceControlExtension:(id)arg5;

@end

@interface IDESourceControlRequest : NSObject <DVTInvalidation>
{
    IDESourceControlTree *_sourceTree;
    IDESourceControlRemote *_remote;
    int _type;
    NSString *_startingRevision;
    NSString *_endingRevision;
    NSString *_destination;
    NSArray *_files;
    NSDictionary *_options;
    IDEActivityLogSection *_log;
    IDEActivityLogSection *_logSection;
    NSString *_shortTitle;
    NSString *_longTitle;
    id _domain;
    IDESourceControlExtension *_sourceControlExtension;
    NSString *_message;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _isInvalidated;
    BOOL _stopAllActivityWhenCanceled;
    BOOL _shouldGenerateLog;
    BOOL _cancelable;
}

@property BOOL cancelable; // @synthesize cancelable=_cancelable;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) id domain; // @synthesize domain=_domain;
@property BOOL shouldGenerateLog; // @synthesize shouldGenerateLog=_shouldGenerateLog;
@property(retain) IDEActivityLogSection *logSection; // @synthesize logSection=_logSection;
@property(retain) IDEActivityLogSection *log; // @synthesize log=_log;
@property BOOL stopAllActivityWhenCanceled; // @synthesize stopAllActivityWhenCanceled=_stopAllActivityWhenCanceled;
@property(copy) NSDictionary *options; // @synthesize options=_options;
@property(copy) NSArray *files; // @synthesize files=_files;
@property(copy) NSString *destination; // @synthesize destination=_destination;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *endingRevision; // @synthesize endingRevision=_endingRevision;
@property(copy) NSString *startingRevision; // @synthesize startingRevision=_startingRevision;
@property int type; // @synthesize type=_type;
@property(retain) IDESourceControlRemote *remote; // @synthesize remote=_remote;
@property(retain) IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)setShouldGenerateLog:(BOOL)arg1 forDomain:(id)arg2;
@property(readonly) NSString *longTitle; // @synthesize longTitle=_longTitle;
@property(readonly) NSString *shortTitle; // @synthesize shortTitle=_shortTitle;
- (BOOL)isRequestBlacklistedFromLogging;
- (id)description;
@property(readonly) IDESourceControlRepository *repositoryToAuthenticate;
@property(retain) IDESourceControlExtension *sourceControlExtension; // @synthesize sourceControlExtension=_sourceControlExtension;
- (id)initWithType:(int)arg1 startingRevision:(id)arg2 destination:(id)arg3 options:(id)arg4;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 files:(id)arg3 options:(id)arg4;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 destination:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 destination:(id)arg3 startingRevision:(id)arg4 endingRevision:(id)arg5 files:(id)arg6 options:(id)arg7;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 startingRevision:(id)arg3 endingRevision:(id)arg4 files:(id)arg5 options:(id)arg6;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 message:(id)arg3 files:(id)arg4 options:(id)arg5;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2 files:(id)arg3;
- (id)initWithType:(int)arg1 sourceTree:(id)arg2;

@end

@interface IDESourceControlRevision : NSObject
{
    NSString *_revision;
    NSString *_author;
    NSDate *_date;
    NSString *_message;
    BOOL _isHEAD;
    BOOL _isBASE;
    BOOL _isCurrent;
}

+ (id)inMemoryRevision;
+ (id)localRevision;
+ (id)keyPathsForValuesAffectingLongRevisionString;
@property BOOL isCurrent; // @synthesize isCurrent=_isCurrent;
@property BOOL isBASE; // @synthesize isBASE=_isBASE;
@property BOOL isHEAD; // @synthesize isHEAD=_isHEAD;
@property(readonly) NSString *message; // @synthesize message=_message;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) NSString *author; // @synthesize author=_author;
@property(readonly) NSString *revision; // @synthesize revision=_revision;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) NSString *longRevisionString;
- (id)ideModelObjectTypeIdentifier;
- (id)description;
- (id)initWithRevision:(id)arg1 author:(id)arg2 date:(id)arg3 message:(id)arg4;

@end

@interface IDESourceControlRevisionWrapper : IDEScriptingWrapper
{
}

- (void)setTimestamp:(id)arg1;
- (id)timestamp;
- (void)setTag:(id)arg1;
- (id)tag;
- (void)setRevision:(id)arg1;
- (id)revision;
- (id)name;
- (void)setCommitMessage:(id)arg1;
- (id)commitMessage;
- (void)setAuthor:(id)arg1;
- (id)author;

@end

@interface IDESourceControlTaskOperation : IDESourceControlOperation
{
    DVTTask *_task;
    DVTTask *_pipeTask;
    NSString *_launchPath;
    NSString *_currentDirectoryPath;
    NSArray *_arguments;
    NSMutableData *_data;
    NSMutableData *_errorData;
    DVTPerformanceMetric *_metric;
}

+ (id)_authenticationAgentExecutablePath;
+ (id)sourceControlTaskOperationLogAspect;
@property(retain) NSMutableData *errorData; // @synthesize errorData=_errorData;
@property(retain) NSMutableData *data; // @synthesize data=_data;
@property(retain) NSArray *arguments; // @synthesize arguments=_arguments;
@property(copy) NSString *currentDirectoryPath; // @synthesize currentDirectoryPath=_currentDirectoryPath;
@property(copy) NSString *launchPath; // @synthesize launchPath=_launchPath;
@property(retain) DVTTask *pipeTask; // @synthesize pipeTask=_pipeTask;
@property(readonly) DVTTask *task; // @synthesize task=_task;
- (void)parseDataOrGenerateErrorForTask:(id)arg1 operation:(id)arg2;
- (void)main;
- (id)pipeToOperation;
- (id)rawErrorOutput;
- (id)rawStandardOutput;
- (id)rawInput;
- (id)errorFromErrorMessage:(id)arg1;
- (void)parseData;

@end

@interface IDESourceControlTreeItem : DVTModelTreeNode <DVTInvalidation>
{
    IDESourceControlRevision *_headRevision;
    IDESourceControlRevision *_currentRevision;
    NSMutableDictionary *_revisions;
    DVTDispatchLock *_revisionsLock;
    NSString *_name;
    NSString *_pathString;
    DVTStackBacktrace *_invalidationBacktrace;
    unsigned long long _state;
    int _sourceControlLocalStatus;
    int _sourceControlServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    BOOL _isInvalidated;
}

+ (BOOL)automaticallyNotifiesObserversOfCurrentRevision;
+ (void)initialize;
@property unsigned long long conflictStateForUpdateOrMerge; // @synthesize conflictStateForUpdateOrMerge=_conflictStateForUpdateOrMerge;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property int sourceControlServerStatus; // @synthesize sourceControlServerStatus=_sourceControlServerStatus;
@property int sourceControlLocalStatus; // @synthesize sourceControlLocalStatus=_sourceControlLocalStatus;
@property unsigned long long state; // @synthesize state=_state;
@property(readonly) NSString *pathString; // @synthesize pathString=_pathString;
@property(copy) NSString *name; // @synthesize name=_name;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)exportToFileURL:(id)arg1 completionBlock:(id)arg2;
- (void)clearAllRevisions;
- (id)revisionsWithStartingRevision:(id)arg1 endingRevision:(id)arg2 limit:(unsigned long long)arg3 branch:(id)arg4 completionBlock:(id)arg5;
@property(readonly) NSArray *revisions;
- (id)revisionsDictionary;
- (void)addRevision:(id)arg1;
- (void)clearCurrentRevision;
- (id)currentRevisionWithCompletionBlock:(id)arg1;
- (void)setCurrentRevision:(id)arg1;
@property(readonly) IDESourceControlRevision *currentRevision;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (id)baseRevisionWithCompletionBlock:(id)arg1;
- (id)headRevisionWithCompletionBlock:(id)arg1;
- (void)setHEADRevision:(id)arg1;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(id)arg2;
@property(readonly) NSString *repositoryURLString;
- (void)_setPathString:(id)arg1;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithPathString:(id)arg1;

// Remaining properties
@property(readonly) IDESourceControlTreeGroup *parentGroup; // @dynamic parentGroup;
@property(readonly) IDESourceControlTree *sourceTree; // @dynamic sourceTree;

@end

@interface IDESourceControlTreeGroup : IDESourceControlTreeItem
{
    BOOL _areChildrenLoaded;
}

+ (id)keyPathsForValuesAffectingSparseChildren;
+ (void)initialize;
@property BOOL areChildrenLoaded; // @synthesize areChildrenLoaded=_areChildrenLoaded;
- (void)clearAllRevisions;
- (void)reload;
@property(readonly) NSMutableArray *mutableChildren; // @dynamic mutableChildren;
@property(copy) NSArray *children; // @dynamic children;
- (id)sparseChildren;
- (void)computeChildrenIfNeeded;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDESourceControlWorkingTree : IDESourceControlTree
{
    IDESourceControlRepository *_repository;
    IDESourceControlBranch *_currentBranch;
    NSMutableArray *_itemsWithStatus;
    DVTDispatchLock *_itemsWithStatusLock;
    NSOperationQueue *_status_processing_queue;
    DVTFilePath *_filePath;
    NSMutableDictionary *_localStatusRequests;
    NSMutableDictionary *_serverStatusRequests;
    BOOL _initialLocalStatusUpdateIsComplete;
    BOOL _initialServerStatusUpdateIsComplete;
    NSMutableSet *_delayedLocalStatusUpdateForDirectories;
    DVTDispatchLock *_delayedLocalStatusUpdateForDirectoriesLock;
}

@property(readonly) BOOL initialServerStatusUpdateIsComplete; // @synthesize initialServerStatusUpdateIsComplete=_initialServerStatusUpdateIsComplete;
@property(readonly) BOOL initialLocalStatusUpdateIsComplete; // @synthesize initialLocalStatusUpdateIsComplete=_initialLocalStatusUpdateIsComplete;
@property(readonly) IDESourceControlRepository *repository; // @synthesize repository=_repository;
@property(copy) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void)invalidateServerStatus;
- (void)clearServerStatus;
- (void)invalidateLocalStatus;
- (void)clearLocalAndServerStatus;
- (void)clearStatusForItem:(id)arg1;
- (void)mergeStatusOperationResults:(id)arg1 forLocalStatusOnly:(BOOL)arg2;
- (void)addNewItemsWithStatusWithResults:(id)arg1;
- (id)updateLocalStatusForDirectory:(id)arg1 cancelable:(BOOL)arg2 completionBlock:(id)arg3;
- (id)updateLocalStatusForDirectory:(id)arg1 completionBlock:(id)arg2;
- (void)setBatchedUpdateLocalStatusForDirectory:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)emptyBatchedUpdateLocalStatus;
- (id)updateServerStatusForDirectory:(id)arg1 cancelable:(BOOL)arg2 completionBlock:(id)arg3;
- (id)updateServerStatusForDirectory:(id)arg1 completionBlock:(id)arg2;
@property(readonly) NSArray *itemsWithStatus; // @synthesize itemsWithStatus=_itemsWithStatus;
- (void)invalidateCurrentBranch;
- (id)switchToBranch:(id)arg1 completionBlock:(id)arg2;
- (id)currentBranchWithCompletionBlock:(id)arg1;
- (id)branchesWithCompletionBlock:(id)arg1;
- (void)endObservingReachability;
- (void)startObservingReachability;
- (BOOL)connected;
- (id)itemForFilePath:(id)arg1;
- (BOOL)containsItemAtLocation:(id)arg1;
- (BOOL)containsItemAtFilePath:(id)arg1;
- (id)subclass_createRootNode;
- (id)description;
- (id)ideModelObjectTypeIdentifier;
- (BOOL)isSameAsSourceTreeAtLocation:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) IDESourceControlBranch *currentBranch; // @synthesize currentBranch=_currentBranch;
- (void)_setRepository:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)invalidate;
- (id)initWithDictionary:(id)arg1 repository:(id)arg2 sourceControlExtension:(id)arg3 sourceControlManager:(id)arg4;
- (id)initWithLocation:(id)arg1 sourceControlManager:(id)arg2;
- (id)_initWithLocation:(id)arg1 sourceControlManager:(id)arg2;

@end

@interface IDESourceControlWorkingTreeGroup : IDESourceControlTreeGroup
{
    DVTFilePath *_filePath;
    NSMutableDictionary *_statusForKeyDictionary;
    BOOL _edited;
}

+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (int)aggregateSourceControlServerStatus;
- (int)aggregateSourceControlLocalStatus;
- (void)setSourceControlStatus:(int)arg1 forKey:(id)arg2;
- (int)sourceControlStatusForKey:(id)arg1;
- (void)setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)setSourceControlServerStatus:(int)arg1;
- (void)setSourceControlLocalStatus:(int)arg1;
- (id)blameEntriesForRevisionNumber:(id)arg1 completionBlock:(id)arg2;
- (id)temporaryFolderForBranchName:(id)arg1 revisionNumber:(id)arg2 completionBlock:(id)arg3;
- (id)currentRevisionWithCompletionBlock:(id)arg1;
- (void)computeChildrenIfNeeded;
@property BOOL edited; // @synthesize edited=_edited;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(id)arg2;
- (id)repositoryURLString;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)invalidate;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDESourceControlWorkingTreeItem : IDESourceControlTreeItem
{
    DVTFilePath *_filePath;
    NSMutableDictionary *_statusForKeyDictionary;
    BOOL _edited;
}

+ (BOOL)automaticallyNotifiesObserversOfConflictStateForUpdateOrMerge;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlServerStatus;
+ (BOOL)automaticallyNotifiesObserversOfSourceControlLocalStatus;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void)setSourceControlStatus:(int)arg1 forKey:(id)arg2;
- (int)sourceControlStatusForKey:(id)arg1;
- (id)blameEntriesForRevisionNumber:(id)arg1 completionBlock:(id)arg2;
- (id)temporaryFileForBranchName:(id)arg1 revisionNumber:(id)arg2 completionBlock:(id)arg3;
- (id)currentRevisionWithCompletionBlock:(id)arg1;
@property BOOL edited; // @synthesize edited=_edited;
- (void)setConflictStateForUpdateOrMerge:(unsigned long long)arg1;
- (void)setSourceControlServerStatus:(int)arg1;
- (void)setSourceControlLocalStatus:(int)arg1;
- (id)ideModelObjectTypeIdentifier;
- (void)repositoryURLStringAtBranch:(id)arg1 completionBlock:(id)arg2;
- (id)repositoryURLString;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)invalidate;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDESourceControlWorkingTreeItemHolder : NSObject
{
    NSMutableArray *_workingTreeItems;
}

- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (void)addFilePath:(id)arg1;
@property(readonly) NSMutableArray *workingTreeItems; // @synthesize workingTreeItems=_workingTreeItems;

@end

@interface IDESourceControlWorkspaceMonitor : NSObject <DVTInvalidation>
{
    IDESourceControlManager *_sourceControlManager;
    IDEContainerQuery *_query;
    NSMutableSet *_fileRefSet;
    NSDate *_startDate;
    NSDate *_endDate;
    NSMutableArray *_workingTrees;
    DVTDispatchLock *_workingTreesLock;
    NSMapTable *_workspaceRootForWorkingTreeMapTable;
    DVTDispatchLock *_workspaceRootMapTableLock;
    IDELogStore *_logStore;
    id <DVTObservingToken> _containerQueryMatchesObserver;
    struct dispatch_queue_s *_scmQueue;
    struct dispatch_group_s *_scmGroup;
    IDESourceControlRequest *_sourceControlInfoRequest;
    double _serverStatusUpdateInterval;
    NSTimer *_statusUpdateTimer;
    struct dispatch_source_s *_scanningTimer;
    DVTStackBacktrace *_invalidationBacktrace;
    NSString *_developerFolderPathString;
    BOOL _localStatusCheckingEnabled;
    BOOL _remoteStatusCheckingEnabled;
    BOOL _idleNotificationPosted;
    BOOL _isInvalidated;
    BOOL _isPerformingInitialWorkspaceScan;
}

+ (id)keyPathsForValuesAffectingLogRecords;
@property(retain) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL isPerformingInitialWorkspaceScan; // @synthesize isPerformingInitialWorkspaceScan=_isPerformingInitialWorkspaceScan;
@property(copy) NSTimer *statusUpdateTimer; // @synthesize statusUpdateTimer=_statusUpdateTimer;
@property double serverStatusUpdateInterval; // @synthesize serverStatusUpdateInterval=_serverStatusUpdateInterval;
@property(readonly) NSMapTable *workspaceRootForWorkingTreeMapTable; // @synthesize workspaceRootForWorkingTreeMapTable=_workspaceRootForWorkingTreeMapTable;
@property __weak IDESourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
- (void)updateLogsWithRequest:(id)arg1;
@property(readonly) NSArray *logRecords;
- (void)_findWorkingTreesForFilePath:(id)arg1;
- (void)_scanFinished;
- (void)_startScanTimer;
- (void)forceUpdateLocalStatusForWorkingTreesWithCompletionBlock:(id)arg1;
- (void)updateLocalStatusForWorkingTrees;
- (void)forceUpdateServerStatusForWorkingTreesWithCompletionBlock:(id)arg1;
- (void)updateServerStatusForWorkingTrees;
@property BOOL remoteStatusCheckingEnabled; // @synthesize remoteStatusCheckingEnabled=_remoteStatusCheckingEnabled;
- (void)endPeriodicServerStatusUpdates;
- (void)beginPeriodicServerStatusUpdates;
@property BOOL localStatusCheckingEnabled; // @synthesize localStatusCheckingEnabled=_localStatusCheckingEnabled;
- (void)endObservingWorkingTree:(id)arg1;
- (void)beginObservingWorkingTree:(id)arg1;
- (id)itemsWithStatusInWorkspaceForWorkingTree:(id)arg1;
- (void)evaluteWorkspaceRootForWorkingTree:(id)arg1 relativeToFilePath:(id)arg2;
- (id)rootDirectoryInWorkspaceForWorkingTree:(id)arg1;
- (void)_processFileRefsBatch:(id)arg1;
- (void)loadSourceControlLogsForWorkspace:(id)arg1;
- (void)startScanningWorkspace:(id)arg1;
- (void)addWorkingTree:(id)arg1;
@property(readonly) NSArray *workingTrees; // @synthesize workingTrees=_workingTrees;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)init;

@end

@interface IDESourceTrees : NSObject
{
}

+ (BOOL)stringContainsSourceTreeReference:(id)arg1;
+ (id)stringByExpandingSourceTreeReferencesInString:(id)arg1;
+ (Class)sourceTreeProviderClass;

@end

@interface IDESymbolicBreakpointWrapper : IDEBreakpointWrapper
{
}

- (void)setSymbolName:(id)arg1;
- (id)symbolName;

@end

@interface IDETaskLaunchLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDETaskLauncher : IDERunOperationPathWorker
{
    NSTask *_task;
    BOOL _handledAppLaunch;
}

@property(retain) NSTask *task; // @synthesize task=_task;
- (void)applicationDidLaunch:(id)arg1;
- (void)taskDidTerminate:(id)arg1;
- (void)terminate;
- (void)_setFinishedRunning;
- (void)start;
- (void)_setupPTY;

@end

@interface IDETaskLocalService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDETest : NSObject
{
    id <IDETestable> _testable;
    NSString *_identifier;
    NSString *_name;
    IDETest *_supertest;
    NSMutableArray *_subtests;
    BOOL _canHaveSubtests;
}

+ (void)initialize;
@property(readonly) BOOL canHaveSubtests; // @synthesize canHaveSubtests=_canHaveSubtests;
@property(readonly) IDETest *supertest; // @synthesize supertest=_supertest;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) id <IDETestable> testable; // @synthesize testable=_testable;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithTestable:(id)arg1 identifier:(id)arg2;

// Remaining properties
@property(readonly) NSMutableArray *mutableSubtests; // @dynamic mutableSubtests;
@property(copy) NSArray *subtests; // @dynamic subtests;

@end

@interface IDETestIssueProvider : IDEIssueProvider
{
    IDETestManager *_testManager;
    NSMutableArray *_testResultObservationTokens;
    id <DVTObservingToken> _testRunnerObserver;
}

+ (int)providerType;
@property(readonly) IDETestManager *testManager; // @synthesize testManager=_testManager;
- (void)invalidate;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (id)_documentLocationForFilePath:(id)arg1 lineNumber:(id)arg2 timestamp:(id)arg3;
- (id)_headingNameForTest:(id)arg1;
- (void)_trackIssuesForTestRunner:(id)arg1;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDETestManager : NSObject
{
    IDEWorkspace *_workspace;
    NSMutableArray *_testRunners;
}

+ (BOOL)_initializedForUserInteraction;
+ (id)_stringForCurrentTime;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) NSArray *testRunners; // @synthesize testRunners=_testRunners;
- (id)testOperationForTestableReferences:(id)arg1 executionEnvironment:(id)arg2 buildParameters:(id)arg3 runDestination:(id)arg4 workspace:(id)arg5 error:(id *)arg6 launchParametersBlock:(id)arg7 testCallbackBlock:(void)arg8;
- (void)_writeTestResultsBundleForTestRunners:(id)arg1 allTestsPassed:(char *)arg2;
- (id)description;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDETestResult : NSObject
{
    IDETest *_test;
    int _status;
    NSDate *_date;
    double _duration;
    DVTPerformanceTestOutput *_performanceTestOutput;
    NSArray *_messages;
}

@property(readonly) NSArray *messages; // @synthesize messages=_messages;
@property(readonly) DVTPerformanceTestOutput *performanceTestOutput; // @synthesize performanceTestOutput=_performanceTestOutput;
@property(readonly) double duration; // @synthesize duration=_duration;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) int status; // @synthesize status=_status;
@property(readonly) IDETest *test; // @synthesize test=_test;
- (id)initWithTest:(id)arg1 status:(int)arg2 date:(id)arg3 duration:(double)arg4 performanceTestOutput:(id)arg5 messages:(id)arg6;

@end

@interface IDETestResultMessage : NSObject
{
    NSString *_text;
    int _messageType;
    NSString *_filePath;
    NSNumber *_lineNumber;
}

@property(readonly) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(readonly) NSString *filePath; // @synthesize filePath=_filePath;
@property(readonly) int messageType; // @synthesize messageType=_messageType;
@property(readonly) NSString *text; // @synthesize text=_text;
- (id)initWithText:(id)arg1 messageType:(int)arg2 filePath:(id)arg3 lineNumber:(id)arg4;

@end

@interface IDETestRunOperation : IDERunOperation
{
    id _runningFinishedBlock;
    IDETestObserver *_testObserver;
    BOOL _previousOperationFinished;
}

+ (id)keyPathsForValuesAffectingIsReady;
@property(retain) IDETestObserver *testObserver; // @synthesize testObserver=_testObserver;
@property BOOL previousOperationFinished; // @synthesize previousOperationFinished=_previousOperationFinished;
@property(copy) id runningFinishedBlock; // @synthesize runningFinishedBlock=_runningFinishedBlock;
- (void)cancel;
- (BOOL)isReady;
- (void)runningDidFinish;

@end

@interface IDETestSchemeAction : IDESchemeAction
{
    NSMutableArray *_testableReferences;
    NSMutableArray *_loadingTestableReferences;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    id <DVTObservingToken> _testablesObservingToken;
    id <DVTObservingToken> _skippedTestsObservingToken;
    id <DVTObservingToken> _workspaceRunnableProductsToken;
    NSString *_buildConfiguration;
    NSArray *_hostBuildableReferences;
    IDESchemeBuildableReference *_testBuildableReferenceToUseForMacroExpansion;
}

+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (id)keyPathsForValuesAffectingTestBuildableReferences;
+ (BOOL)_initializedForUserInteraction;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (BOOL)needsNewSchemeVersionForAppDataPackages;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)invalidate;
- (id)_expandMacrosInString:(id)arg1;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (id)buildableReferenceToUseForMacroExpansion;
@property(readonly) NSDictionary *environmentVariables;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
@property(readonly) NSArray *commandLineArguments;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
- (void)_updateTestActionBuildableToUseForMacroExpansion;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
- (void)setRunContext:(id)arg1;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly) NSArray *testBuildableReferences;
@property(readonly) NSArray *hostBuildableReferences;
- (void)testableDidChangeHost:(id)arg1;
- (id)testOperationWithTestManager:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 runDestination:(id)arg5 outError:(id *)arg6 testCallbackBlock:(id)arg7;
- (BOOL)doesNonActionWork;
- (id)subtitle;
- (id)name;
- (void)_commonInit;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableTestableReferences; // @dynamic mutableTestableReferences;
@property(copy) NSArray *testableReferences; // @dynamic testableReferences;

@end

@interface IDETestableReference : NSObject <DVTXMLUnarchiving>
{
    IDESchemeBuildableReference *_buildableReference;
    NSArray *_skippedTests;
    IDEDeviceAppDataReference *_deviceAppDataReference;
    IDELocationScenarioReference *_locationScenarioReference;
    BOOL _skipped;
}

+ (id)keyPathsForValuesAffectingScheme;
+ (void)initialize;
@property(retain) IDELocationScenarioReference *locationScenarioReference; // @synthesize locationScenarioReference=_locationScenarioReference;
@property(retain) IDEDeviceAppDataReference *deviceAppDataReference; // @synthesize deviceAppDataReference=_deviceAppDataReference;
@property BOOL skipped; // @synthesize skipped=_skipped;
@property(readonly) IDESchemeBuildableReference *buildableReference; // @synthesize buildableReference=_buildableReference;
- (void)setSkippedFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addLocationScenarioReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addDeviceAppData:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addBuildableReference:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addSkippedTests:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@property(retain) IDEScheme *scheme;
- (void)resolveBuildableFromImport;
- (id)testableName;
- (id)testable;
- (id)init;
- (id)initWithTestable:(id)arg1 scheme:(id)arg2;

// Remaining properties
@property(readonly) NSMutableArray *mutableSkippedTests; // @dynamic mutableSkippedTests;
@property(copy) NSArray *skippedTests; // @dynamic skippedTests;

@end

@interface IDETestableReferenceTestIdentifier : NSObject <DVTXMLUnarchiving>
{
    NSString *_identifier;
}

@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void)setIdentifierFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;

@end

@interface IDETestingSystem : NSObject
{
    NSString *_name;
    NSString *_identifier;
    Class _testableClass;
}

+ (id)testingSystems;
+ (id)testingSystemForIdentifier:(id)arg1;
+ (id)_testingSystemForExtension:(id)arg1;
+ (void)initialize;
@property(readonly) Class testableClass; // @synthesize testableClass=_testableClass;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)description;
- (id)initWithTestingSystemExtension:(id)arg1;

@end

@interface IDETypeIdentifier : NSObject
{
    NSString *_stringRepresentation;
    NSArray *_subTypes;
    IDETypeIdentifier *_parentType;
}

+ (id)typeIdentifierForStringRepresentation:(id)arg1;
+ (id)registerTypeIdentifierWithStringRepresentation:(id)arg1 basedOn:(id)arg2;
+ (id)_registerTypeIdentifierWithStringRepresentation:(id)arg1 basedOn:(id)arg2;
+ (id)_rootType;
+ (void)_registerBasicTypeIdentifiers;
@property(retain) IDETypeIdentifier *parentType; // @synthesize parentType=_parentType;
@property(retain) NSArray *subTypes; // @synthesize subTypes=_subTypes;
@property(copy) NSString *stringRepresentation; // @synthesize stringRepresentation=_stringRepresentation;
- (id)typeIdentifierLineage;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isKindOfType:(id)arg1;
- (void)addSubType:(id)arg1;
- (id)description;
- (id)initWithStringRepresentation:(id)arg1;

@end

@interface IDEUpgradeContext : NSObject
{
}

@end

@interface IDEUpgradeBlueprintContext : IDEUpgradeContext
{
    id <IDEBlueprint> _blueprint;
}

@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
- (id)description;
- (id)initWithBlueprint:(id)arg1;

@end

@interface IDEUpgradeContainerContext : IDEUpgradeContext
{
    IDEContainer *_container;
}

@property(readonly) IDEContainer *container; // @synthesize container=_container;
- (id)description;
- (id)initWithContainer:(id)arg1;

@end

@interface IDEUpgradeSchemeContext : IDEUpgradeContext
{
    IDEScheme *_scheme;
}

@property(readonly) IDEScheme *scheme; // @synthesize scheme=_scheme;
- (id)description;
- (id)initWithScheme:(id)arg1;

@end

@interface IDEUpgradeTask : NSObject
{
    NSString *_title;
    NSString *_subtitle;
    NSString *_category;
    IDEUpgradeContext *_context;
    BOOL _selected;
}

+ (id)analyzeInScheme:(id)arg1;
+ (id)analyzeInContext:(id)arg1;
+ (id)metricLogAspect;
@property BOOL selected; // @synthesize selected=_selected;
@property(readonly) IDEUpgradeContext *context; // @synthesize context=_context;
@property(readonly) NSString *category; // @synthesize category=_category;
@property(readonly) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly) NSString *title; // @synthesize title=_title;
- (void)_setCategory:(id)arg1;
- (BOOL)upgrade;
- (id)initWithTitle:(id)arg1 subtitle:(id)arg2 context:(id)arg3;

@end

@interface IDEVersionedFileManager : NSObject
{
    unsigned long long _batchEditModeCounter;
    NSMutableSet *_workingCopiesWeHaveTouchedInBatchEditMode;
    DVTDispatchLock *_batchEditLock;
}

+ (id)_errorWithUnderlyingErrors:(id)arg1 type:(int)arg2;
+ (id)_errorDescriptionForType:(int)arg1;
+ (void)_callCompletionBlockWithResult:(BOOL)arg1 error:(id)arg2 queue:(struct dispatch_queue_s *)arg3 completionBlock:(id)arg4;
+ (void)_delegatePerformBlock:(id)arg1;
+ (void)setDelegate:(id)arg1 withDispatchQueue:(struct dispatch_queue_s *)arg2;
+ (void)initialize;
- (void)moveItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 inContext:(id)arg3 completionBlockDispatchQueue:(struct dispatch_queue_s *)arg4 completionBlock:(id)arg5;
- (void)copyItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 completionBlockDispatchQueue:(struct dispatch_queue_s *)arg3 completionBlock:(id)arg4;
- (void)addItemsAtFilePaths:(id)arg1 completionBlockDispatchQueue:(struct dispatch_queue_s *)arg2 completionBlock:(id)arg3;
- (BOOL)_addItemsAtFilePaths:(id)arg1 error:(id *)arg2;
- (void)removeItemsAtFilePaths:(id)arg1 moveToTrash:(BOOL)arg2 completionBlockDispatchQueue:(struct dispatch_queue_s *)arg3 completionBlock:(id)arg4;
- (void)createDirectoryAtFilePath:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 completionBlockDispatchQueue:(struct dispatch_queue_s *)arg4 completionBlock:(id)arg5;
- (id)init;
- (void)finalize;
- (void)setupBatchEditMode:(id)arg1;
- (BOOL)isInBatchEditMode;
- (void)endBatchEdits;
- (void)startBatchEdits;

@end

@interface IDEWatchpoint : IDEBreakpoint
{
    NSString *_expression;
    NSString *_variableName;
    unsigned long long _address;
    NSString *_hexAddress;
}

+ (id)_displayStringForAddress:(unsigned long long)arg1;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingHexAddress;
@property unsigned long long address; // @synthesize address=_address;
@property(readonly) NSString *variableName; // @synthesize variableName=_variableName;
@property(readonly) NSString *expression; // @synthesize expression=_expression;
- (id)displayName;
@property(readonly) NSString *hexAddress;
- (id)initWithExpression:(id)arg1 variableName:(id)arg2;

@end

@interface IDEWatchpointNotificationInfo : NSObject
{
    IDEWatchpoint *_watchpoint;
    NSString *_watchpointID;
    NSString *_expression;
    NSString *_oldValue;
    NSString *_newValue;
    NSString *_thread;
}

@property(readonly) NSString *thread; // @synthesize thread=_thread;
@property(readonly) NSString *newValue; // @synthesize newValue=_newValue;
@property(readonly) NSString *oldValue; // @synthesize oldValue=_oldValue;
@property(readonly) NSString *expression; // @synthesize expression=_expression;
@property(readonly) NSString *watchpointID; // @synthesize watchpointID=_watchpointID;
@property(readonly) IDEWatchpoint *watchpoint; // @synthesize watchpoint=_watchpoint;
- (id)consoleOutputStyleDisplayString;
- (id)titleStyleDisplayString;
- (id)initWithWatchpoint:(id)arg1 watchpointID:(id)arg2 expression:(id)arg3 oldValue:(id)arg4 newValue:(id)arg5 thread:(id)arg6;

@end

@interface IDEXMLPackageContainer : IDEContainer <DVTXMLUnarchiverDelegate, DVTXMLUnarchiving, DVTCustomDataStoring>
{
    IDEGroup *_unarchivingGroup;
    NSMutableDictionary *_unarchivingProperties;
    DVTDirectoryBasedCustomDataStore *_customDataStore;
    NSMapTable *_unsavedXMLDataForCustomDataStoreSpecifier;
    BOOL _hasUnhandledArchiveData;
}

+ (id)containerDataFilePathsForFilePath:(id)arg1;
+ (id)xmlArchiveFileName;
+ (id)rootElementName;
+ (BOOL)supportsFilePersistence;
@property(readonly) BOOL hasUnhandledArchiveData; // @synthesize hasUnhandledArchiveData=_hasUnhandledArchiveData;
@property(retain) DVTDirectoryBasedCustomDataStore *customDataStore; // @synthesize customDataStore=_customDataStore;
@property(readonly) float maxSupportedArchiveVersion;
@property(readonly) float archiveVersion;
@property(readonly) NSString *displayName;
- (BOOL)supportsCustomDataForOwnership:(id)arg1;
- (void)moveCustomDataWithSpecifier:(id)arg1 toSpecifier:(id)arg2 completionQueue:(id)arg3 completionBlock:(id)arg4;
- (void)removeCustomDataWithSpecifier:(id)arg1 completionQueue:(id)arg2 completionBlock:(id)arg3;
- (void)writeCustomData:(id)arg1 withSpecifier:(id)arg2 forceOverwrite:(BOOL)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (id)readCustomDataWithSpecifier:(id)arg1 error:(id *)arg2;
- (id)customDataOwnershipsForGrouping:(id)arg1;
- (id)customDataSpecifiersForGrouping:(id)arg1 ownership:(id)arg2;
- (void)invalidate;
- (void)_handleFilePathDidChange:(id)arg1;
- (BOOL)writeToFilePath:(id)arg1 forceWrite:(BOOL)arg2 error:(id *)arg3;
- (id)_xmlData;
- (BOOL)didReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)willReadFromFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFilePath:(id)arg1 error:(id *)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)customDataStoreClosing:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_createCustomDataStore:(id)arg1;
- (id)_archiveFilePathForFilePath:(id)arg1;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_addObject:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_setProperty:(id)arg1 fromUTF8String:(const char *)arg2 fromXMLUnarchiver:(id)arg3;

@end

@interface IDEWorkspace : IDEXMLPackageContainer <IDEClientTracking, IDEIntegrityLogDataSource>
{
    NSString *_untitledName;
    IDEWorkspaceArena *_workspaceArena;
    DVTFilePath *_headerMapFilePath;
    IDEExecutionEnvironment *_executionEnvironment;
    IDEContainerQuery *_containerQuery;
    id <DVTObservingToken> _containerQueryObservingToken;
    NSMutableSet *_referencedContainers;
    DVTHashTable *_fileRefsWithContainerLoadingIssues;
    IDEActivityLogSection *_containerLoadingIntegrityLog;
    NSMutableSet *_customDataStores;
    IDEWorkspaceUserSettings *_userSettings;
    IDEWorkspaceSharedSettings *_sharedSettings;
    NSMapTable *_blueprintProviderObserverMap;
    NSMutableSet *_referencedBlueprints;
    NSMapTable *_testableProviderObserverMap;
    NSMutableSet *_referencedTestables;
    BOOL _initialContainerScanComplete;
    NSMutableArray *_referencedRunnableBuildableProducts;
    IDERunContextManager *_runContextManager;
    IDELogManager *_logManager;
    IDEIssueManager *_issueManager;
    IDEBreakpointManager *_breakpointManager;
    IDEBatchFindManager *_batchFindManager;
    IDETestManager *_testManager;
    IDEContainerQuery *_indexableSourceQuery;
    id <DVTObservingToken> _indexableSourceQueryObservingToken;
    IDEContainerQuery *_indexableFileQuery;
    id <DVTObservingToken> _indexableFileQueryObservingToken;
    IDEIndex *_index;
    IDERefactoring *_refactoring;
    NSMapTable *_fileRefsToResolvedFilePaths;
    NSMutableSet *_fileRefsToRegisterForIndexing;
    IDESourceControlWorkspaceMonitor *_sourceControlWorkspaceMonitor;
    IDEWorkspaceSnapshotManager *_snapshotManager;
    DVTFilePath *_wrappedXcode3ProjectPath;
    IDEContainer *_wrappedXcode3Project;
    id <DVTObservingToken> _wrappedXcode3ProjectValidObservingToken;
    NSHashTable *_pendingReferencedFileReferences;
    NSHashTable *_pendingReferencedContainers;
    IDEConcreteClientTracker *_clientTracker;
    DVTHashTable *_fileReferencesForProblem8727051;
    id <DVTObservingToken> _finishedLoadingObservingToken;
    NSDictionary *_Problem9887530_preferredStructurePaths;
    BOOL _simpleFilesFocused;
    BOOL _hasPostedIndexingRegistrationBatchNotification;
    BOOL _didFinishLoadingFirstStage;
    BOOL _finishedLoading;
    BOOL _pendingFileReferencesAndContainers;
    BOOL _didProcessFileReferencesForProblem8727051;
    BOOL _isCleaningBuildFolder;
    BOOL _indexingAndRefactoringRestartScheduled;
    BOOL _sourceControlStatusUpdatePending;
    NSHashTable *_sourceControlStatusUpdatePendingFileReferences;
    id _openingPerformanceMetricIdentifier;
    DVTStackBacktrace *_finishedLoadingBacktrace;
}

+ (BOOL)_shouldTrackReadOnlyStatus;
+ (id)keyPathsForValuesAffectingRepresentingCustomDataStore;
+ (id)keyPathsForValuesAffectingHostOnlyXcode3Project;
+ (id)keyPathsForValuesAffectingRepresentingTitle;
+ (id)keyPathsForValuesAffectingRepresentingFilePath;
+ (id)keyPathsForValuesAffectingName;
+ (id)_workspaceFileExtension;
+ (id)containerTypeDisplayName;
+ (id)containerFileDataType;
+ (id)xmlArchiveFileName;
+ (id)rootElementName;
+ (id)_wrappedWorkspacePathForProjectPath:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversOfWrappedXcode3ProjectPath;
+ (BOOL)_shouldLoadUISubsystems;
+ (BOOL)automaticallyNotifiesObserversOfFileRefsWithContainerLoadingIssues;
+ (void)initialize;
@property BOOL isCleaningBuildFolder; // @synthesize isCleaningBuildFolder=_isCleaningBuildFolder;
@property(nonatomic) BOOL finishedLoading; // @synthesize finishedLoading=_finishedLoading;
@property(nonatomic) BOOL pendingFileReferencesAndContainers; // @synthesize pendingFileReferencesAndContainers=_pendingFileReferencesAndContainers;
@property BOOL initialContainerScanComplete; // @synthesize initialContainerScanComplete=_initialContainerScanComplete;
@property(retain) IDESourceControlWorkspaceMonitor *sourceControlWorkspaceMonitor; // @synthesize sourceControlWorkspaceMonitor=_sourceControlWorkspaceMonitor;
@property(readonly) IDERefactoring *refactoring; // @synthesize refactoring=_refactoring;
@property(retain) IDEIndex *index; // @synthesize index=_index;
@property(retain, nonatomic) IDEWorkspaceArena *workspaceArena; // @synthesize workspaceArena=_workspaceArena;
@property(readonly) DVTFilePath *wrappedXcode3ProjectPath; // @synthesize wrappedXcode3ProjectPath=_wrappedXcode3ProjectPath;
- (id)buildableProductsForBaseName:(id)arg1;
- (void)_updateIndexables:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)invalidate;
- (void)initializeIndexAndRefactoring:(id)arg1;
- (void)_setupSourceControlWorkspaceMonitor;
- (id)tearDownIndexAndRefactoring;
- (void)_restartIndexingAndRefactoring;
- (void)_scheduleIndexingAndRefactoringRestart;
- (void)_updateIndexableFiles:(id)arg1;
- (void)_processIndexRegistrationBatch:(id)arg1;
- (void)_updateIndexableSources:(id)arg1;
@property(readonly) IDEContainer<DVTCustomDataStoring> *representingCustomDataStore;
- (void)_updateWrappedXcode3Project;
- (void)_setWrappedXcode3Project:(id)arg1;
@property(readonly, getter=isSimpleFilesFocused) BOOL simpleFilesFocused;
- (void)_setSimpleFilesFocused:(BOOL)arg1;
- (void)_primitiveSetSimpleFilesFocused:(BOOL)arg1;
- (void)setSimpleFilesFocused:(BOOL)arg1;
@property(readonly) BOOL hostsOnlyXcode3Project;
@property(readonly) NSString *representingTitle;
@property(readonly) DVTFilePath *representingFilePath;
@property(readonly) IDEExecutionEnvironment *executionEnvironment;
- (void)_setupExecutionEnvironment;
- (float)maxSupportedArchiveVersion;
- (float)archiveVersion;
- (id)displayName;
@property(readonly) NSString *name;
@property(readonly) IDEWorkspaceSharedSettings *sharedSettings;
@property(readonly) IDEWorkspaceUserSettings *userSettings;
@property(readonly) IDETestManager *testManager; // @dynamic testManager;
@property(readonly) IDEBatchFindManager *batchFindManager;
@property(retain) IDEWorkspaceSnapshotManager *snapshotManager; // @synthesize snapshotManager=_snapshotManager;
@property(readonly) IDEBreakpointManager *breakpointManager; // @dynamic breakpointManager;
@property(readonly) IDEIssueManager *issueManager; // @synthesize issueManager=_issueManager;
- (void)_setupIssueManagerIfNeeded;
@property(readonly) IDELogManager *logManager; // @synthesize logManager=_logManager;
- (void)_setupLogManagerIfNeeded;
@property(readonly) IDERunContextManager *runContextManager;
- (void)_setupRunContextManager;
@property(readonly) NSSet *customDataStores;
@property(readonly) NSSet *referencedRunnableBuildableProducts;
@property(readonly) NSSet *referencedTestables;
@property(readonly) NSSet *referencedTestableProviders;
@property(readonly) NSSet *referencedBlueprints;
@property(readonly) NSSet *referencedBlueprintProviders;
@property(readonly) NSSet *referencedContainers;
- (void)_referencedContainersDidUpdate;
- (void)invokeChangingValueForKey:(id)arg1 fromSet:(id)arg2 toSet:(id)arg3 block:(id)arg4;
- (void)_referencedTestablesOfProvider:(id)arg1 didChange:(id)arg2;
- (void)_referencedBlueprintsDidUpdateForProvider:(id)arg1;
- (void)_setupContainerQueries;
- (id)_Problem9887530_preferredStructurePathForContainerAtPath:(id)arg1;
- (id)_Problem9887530_preferredStructurePaths;
- (id)_Problem9887530_preferredStructurePathsForContainerToContainerFileReferences:(id)arg1;
- (id)_Problem9887530_wrappedContainerFileReferences:(id)arg1 forPath:(id)arg2;
- (void)_processFileReferencesForProblem8727051;
- (void)_addFileReferenceForProblem8727051:(id)arg1;
- (void)cancelTrackedClients;
- (id)clientsNotSupportingCancellation;
- (id)clientsRequiringCancellationPrompt;
- (id)registerClientWithName:(id)arg1;
- (id)registerClientWithName:(id)arg1 promptForCancellation:(BOOL)arg2 cancellationBlock:(id)arg3;
@property(readonly) IDEConcreteClientTracker *clientTracker;
- (BOOL)setContainerFilePath:(id)arg1 error:(id *)arg2;
- (BOOL)_setContainerFilePath:(id)arg1 upgradeToWorkspace:(BOOL)arg2 error:(id *)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2 upgradeToWorkspace:(BOOL)arg3;
- (void)_changeContainerFilePath:(id)arg1 inContext:(id)arg2;
- (BOOL)_configureWrappedWorkspaceWithError:(id *)arg1;
- (id)_wrappingContainerPath;
- (void)_setWrappedXcode3ProjectPath:(id)arg1;
- (id)initWithFilePath:(id)arg1 extension:(id)arg2 workspace:(id)arg3 error:(id *)arg4;
- (void)_buildProductsLocationDidChange;
- (void)_containerDidLoad;
- (void)_checkIfHasFinishedLoading;
- (void)_finishLoadingAsynchronously:(BOOL)arg1 shouldUpgradeFromSimpleFilesFocused:(BOOL)arg2;
- (void)_setupWorkspaceArenaIfNeeded;
- (void)_unregisterFileReferenceForSourceControlStatusUpdate:(id)arg1;
- (void)_registerFileReferenceForSourceControlStatusUpdate:(id)arg1;
- (void)_updateSourceControlStatusIfNeeded;
- (void)_scheduleUpdateSourceControlStatusIfNeededTimer;
- (void)_invalidateUpdateSourceControlStatusIfNeededTimer;
@property(readonly) IDEActivityLogSection *integrityLog;
- (void)analyzeModelIntegrity;
- (void)_setFileRefsWithContainerLoadingIssues:(id)arg1;
- (void)_handleContainerResolutionFailureForFileReference:(id)arg1;
- (void)_clearPendingFileReferencesAndContainerLoadingTokens;
- (void)_removePendingReferencedContainerPath:(id)arg1;
- (void)_addPendingReferencedContainerPath:(id)arg1;
- (void)_removePendingReferencedFileReference:(id)arg1;
- (void)_addPendingReferencedFileReference:(id)arg1;
@property(retain) id _applicationDelegate; // @dynamic _applicationDelegate;
@property(retain) id <IDEWorkspaceDelegate> workspaceDelegate;
- (id)_openingPerformanceMetricIdentifier;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)insertInSdefSupport_symbolicBreakpoints:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInSdefSupport_fileBreakpoints:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertInSdefSupport_breakpoints:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)sdefSupport_newXcode3GroupWithProperties:(id)arg1;
- (id)sdefSupport_newXcode3FileReferenceWithProperties:(id)arg1;
- (id)sdefSupport_newSymbolicBreakpointWithProperties:(id)arg1;
- (id)sdefSupport_newRunContextWithProperties:(id)arg1;
- (id)sdefSupport_newProjectForDocument:(id)arg1 withContentsValue:(id)arg2 andProperties:(id)arg3;
- (id)sdefSupport_newItemReferenceWithProperties:(id)arg1;
- (id)sdefSupport_newGroupWithProperties:(id)arg1;
- (id)sdefSupport_newFileReferenceWithProperties:(id)arg1;
- (id)sdefSupport_newFileBreakpointWithProperties:(id)arg1;
- (id)sdefSupport_newBuildMessagesWithProperties:(id)arg1;
- (id)sdefSupport_newBreakpointWithProperties:(id)arg1;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)sdefSupport_symbolicBreakpointsForDocument:(id)arg1;
- (id)sdefSupport_fileBreakpointsForDocument:(id)arg1;
- (id)sdefSupport_breakpointsForDocument:(id)arg1;
- (void)setSdefSupport_buildFolderName:(id)arg1;
- (id)sdefSupport_buildFolderName;
- (id)ideModelObjectTypeIdentifier;

@end

@interface IDEWorkspaceArena : NSObject
{
    IDEWorkspace *_workspace;
    DVTFilePath *_cachedDerivedDataLocation;
    DVTFilePath *_cachedBuildFolderPath;
    DVTFilePath *_cachedBuildProductsFolderPath;
    DVTFilePath *_cachedBuildIntermediatesFolderPath;
    NSString *_cachedWorkspaceArenaFolderName;
    BOOL _hasWorkspaceRelativeDerivedDataLocation;
    BOOL didSetUpCachedWorkspaceArenaFolderNameObservations;
    id _pathObservingToken;
    id _derivedDataNotificationToken;
    id _derivedDataSourceTreesNotificationToken;
    IDEWorkspaceArenaSnapshot *_cachedSnapshot;
}

+ (id)defaultBuildSubdirectoryName;
+ (id)defaultWorkspaceRelativeDerivedDataDirLocation;
+ (BOOL)shouldUniqueWorkspaceFoldersInStandardDerivedDataLocation;
+ (id)standardWorkspaceDerivedDataLocationForWorkspace:(id)arg1;
+ (id)_standardDerivedDataLocationPathFragment;
+ (id)keyPathsForValuesAffectingWorkspaceArenaInfo;
+ (id)keyPathsForValuesAffectingTestResultsFolderPath;
+ (id)keyPathsForValuesAffectingLogFolderPath;
+ (id)keyPathsForValuesAffectingIndexPrecompiledHeadersFolderPath;
+ (id)keyPathsForValuesAffectingIndexFolderPath;
+ (id)buildIntermediatesFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)buildProductsFolderPathForSettings:(id)arg1 usingPlaceholderOfType:(int *)arg2;
+ (id)keyPathsForValuesAffectingPrecompiledHeadersFolderPath;
+ (id)keyPathsForValuesAffectingInstallingBuildFolderPath;
+ (id)keyPathsForValuesAffectingArchivingBuildFolderPath;
+ (id)keyPathsForValuesAffectingBuildIntermediatesFolderPath;
+ (id)keyPathsForValuesAffectingBuildProductsFolderPath;
+ (void)_buildResultsPathForBuildResultsType:(int)arg1 settings:(id)arg2 workspaceArena:(id)arg3 returningFilePath:(id *)arg4 orReturningPathString:(id *)arg5 withPlaceholder:(int *)arg6;
+ (id)_resolvedBuildFolderSettingsGivenSettings:(id)arg1;
+ (id)keyPathsForValuesAffectingPath;
+ (id)nameForWorkspaceArenaWithBaseName:(id)arg1 gristInput:(id)arg2;
@property BOOL hasWorkspaceRelativeDerivedDataLocation; // @synthesize hasWorkspaceRelativeDerivedDataLocation=_hasWorkspaceRelativeDerivedDataLocation;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (id)description;
- (void)createWorkspaceArenaFolderIfNecessary;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithWorkspace:(id)arg1;
@property(readonly) IDEWorkspaceArenaInfo *workspaceArenaInfo;
@property(readonly) DVTFilePath *testResultsFolderPath;
@property(readonly) DVTFilePath *logFolderPath;
@property(readonly) DVTFilePath *indexPrecompiledHeadersFolderPath;
@property(readonly) DVTFilePath *indexFolderPath;
@property(readonly) DVTFilePath *precompiledHeadersFolderPath;
@property(readonly) DVTFilePath *installingBuildFolderPath;
@property(readonly) DVTFilePath *archivingBuildFolderPath;
@property(readonly) DVTFilePath *buildIntermediatesFolderPath;
- (id)buildIntermediatesFolderPathForSettings:(id)arg1;
@property(readonly) DVTFilePath *buildProductsFolderPath;
- (id)buildProductsFolderPathForSettings:(id)arg1;
- (id)_buildResultsPathForBuildResultsType:(int)arg1 settings:(id)arg2;
@property(readonly) DVTFilePath *buildFolderPath;
- (id)_buildFolderPathForSettings:(id)arg1;
- (void)buildFolderSettingsDidChange:(id)arg1;
- (id)presumptiveBuildFolderPathWithName:(id)arg1 baseBuildFolderLocation:(id)arg2;
@property(readonly) DVTFilePath *path;
- (BOOL)_shouldUniqueWorkspaceInDerivedDataForDerivedDataLocationStyle:(int)arg1 customDerivedDataLocation:(id)arg2;
- (id)derivedDataLocation;
- (id)workspaceArenaFolderName;
@property(readonly) IDEWorkspaceArenaSnapshot *currentSnapshot;

@end

@interface IDEWorkspaceArenaInfo : NSObject
{
    NSDictionary *_infoDict;
    DVTFilePath *_workspacePath;
}

+ (id)workspaceArenaInfoFromFileAtPath:(id)arg1 error:(id *)arg2;
+ (id)workspaceArenaInfoWithWorkspacePath:(id)arg1;
- (BOOL)writeToFileAtPath:(id)arg1 withRelativeWorkspacePath:(BOOL)arg2 error:(id *)arg3;
@property(readonly) DVTFilePath *workspacePath;

@end

@interface IDEWorkspaceArenaSnapshot : NSObject
{
    DVTFilePath *_buildProductsFolderPath;
    DVTFilePath *_buildIntermediatesFolderPath;
    DVTFilePath *_precompiledHeadersFolderPath;
    DVTFilePath *_indexFolderPath;
    DVTFilePath *_indexPrecompiledHeadersFolderPath;
    DVTFilePath *_logFolderPath;
    unsigned long long _hash;
}

+ (id)workspaceArenaSnapshotForWorkspaceArena:(id)arg1;
@property(readonly) DVTFilePath *logFolderPath; // @synthesize logFolderPath=_logFolderPath;
@property(readonly) DVTFilePath *indexPrecompiledHeadersFolderPath; // @synthesize indexPrecompiledHeadersFolderPath=_indexPrecompiledHeadersFolderPath;
@property(readonly) DVTFilePath *indexFolderPath; // @synthesize indexFolderPath=_indexFolderPath;
@property(readonly) DVTFilePath *precompiledHeadersFolderPath; // @synthesize precompiledHeadersFolderPath=_precompiledHeadersFolderPath;
@property(readonly) DVTFilePath *buildIntermediatesFolderPath; // @synthesize buildIntermediatesFolderPath=_buildIntermediatesFolderPath;
@property(readonly) DVTFilePath *buildProductsFolderPath; // @synthesize buildProductsFolderPath=_buildProductsFolderPath;
- (id)copy;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface IDEXMLPackageContainerCore : IDEContainerCore <IDEXMLPackageContainerCore>
{
}

- (BOOL)writeToFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface IDEWorkspaceCore : IDEXMLPackageContainerCore <IDEContainerCore>
{
}


// Remaining properties
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
@end

@interface IDEWorkspaceIntegrityIssueProvider : IDEIssueProvider
{
    id _modelObjectDidChangeObserver;
    id <DVTObservingToken> _referencedContainersObserverToken;
    NSMapTable *_referencedContainersToIssueObserverTokensMapTable;
    NSMapTable *_referencedContainersToProviderContextsMapTable;
    id <DVTObservingToken> _blueprintsObserverToken;
    NSMapTable *_blueprintsToIssueObserverTokensMapTable;
    NSMapTable *_blueprintsToProviderContextsMapTable;
}

+ (int)providerType;
+ (void)initialize;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_blueprintsDidChange;
- (void)_referencedContainersDidChange;
- (id)_integrityIssuesForDataSource:(id)arg1;
- (id)_issueForMessage:(id)arg1;
- (void)invalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDEWorkspaceIntegrityIssueProviderContext : NSObject
{
    IDEIssueProvider *_issueProvider;
    id <IDEIntegrityLogDataSource> _dataSource;
    unsigned long long _hash;
}

@property(readonly) id <IDEIntegrityLogDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly) IDEIssueProvider *issueProvider; // @synthesize issueProvider=_issueProvider;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIssueManager:(id)arg1 dataSource:(id)arg2;

@end

@interface IDEWorkspaceSettings : NSObject
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_workspaceSettings;
    BOOL _loadedExistingSettings;
}

@property(readonly) BOOL loadedExistingSettings; // @synthesize loadedExistingSettings=_loadedExistingSettings;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)loadSettings;
- (void)saveSettings;
- (id)customDataSpecifier;
- (id)settingsOwnership;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (BOOL)boolForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEWorkspaceSharedSettings : IDEWorkspaceSettings
{
}

@property BOOL autocreateContextsIfNeeded;
- (id)settingsOwnership;

@end

@interface IDEWorkspaceSnapshotManager : NSObject
{
    IDESnapshotsManager *_snapshotsManager;
    DVTPerformanceMetric *_metric;
    IDEWorkspace *_workspace;
    DVTFilePath *_repositoryPath;
    BOOL _userIntentToSnapshot;
    NSString *_currentOperationName;
    id <IDESnapshotConfirmationDelegate> _confirmationDelegate;
    struct dispatch_queue_s *_snapshotManagerQueue;
    NSDictionary *_localizedStrings;
}

@property(retain) id <IDESnapshotConfirmationDelegate> confirmationDelegate; // @synthesize confirmationDelegate=_confirmationDelegate;
@property(copy) NSString *currentOperationName; // @synthesize currentOperationName=_currentOperationName;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)createSnapshotWithType:(int)arg1 name:(id)arg2 description:(id)arg3 origin:(id)arg4 completionBlock:(id)arg5;
- (void)createAutomaticSnapshotBefore:(id)arg1 generatedBy:(id)arg2 type:(int)arg3 completionBlock:(id)arg4;
- (BOOL)_shouldCreateSnapshotWithType:(int)arg1 error:(id *)arg2;
@property(retain) DVTFilePath *repositoryPath; // @synthesize repositoryPath=_repositoryPath;
- (void)_snapshotsSettingsDidChange:(id)arg1;
- (id)_localizedStringForKey:(id)arg1;
- (void)_generateLocalizedStrings;
- (void)finalize;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEWorkspaceUserSettings : IDEWorkspaceSettings
{
}

+ (BOOL)automaticallyNotifiesObserversForIssueFilterStyle;
+ (BOOL)automaticallyNotifiesObserversForLiveSourceIssuesEnabled;
+ (BOOL)automaticallyNotifiesObserversForHasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
+ (BOOL)automaticallyNotifiesObserversForTakeSnapshotsBeforeSignificantChanges;
+ (BOOL)automaticallyNotifiesObserversForSnapshotCustomLocation;
+ (BOOL)automaticallyNotifiesObserversForSnapshotLocationStyle;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildIntermediatesPath;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildProductsPath;
+ (BOOL)automaticallyNotifiesObserversForSharedBuildFolderName;
+ (BOOL)automaticallyNotifiesObserversForCustomBuildLocationType;
+ (BOOL)automaticallyNotifiesObserversForBuildLocationStyle;
+ (BOOL)automaticallyNotifiesObserversForDerivedDataCustomLocation;
+ (BOOL)automaticallyNotifiesObserversForDerivedDataLocationStyle;
- (void)loadSettings;
- (void)saveSettings;
@property int issueFilterStyle;
@property BOOL liveSourceIssuesEnabled;
@property BOOL hasAskedToTakeAutomaticSnapshotBeforeSignificantChanges;
@property BOOL takeSnapshotsBeforeSignificantChanges;
@property(retain) NSString *snapshotCustomLocation;
@property int snapshotLocationStyle;
@property(retain) NSString *customBuildIntermediatesPath;
@property(retain) NSString *customBuildProductsPath;
@property(retain) NSString *sharedBuildFolderName;
@property int customBuildLocationType;
@property int buildLocationStyle;
@property(retain) NSString *derivedDataCustomLocation;
@property int derivedDataLocationStyle;
- (id)settingsOwnership;

@end

@interface NSFileManager (IDESourceControlUtilities)
- (BOOL)idescm_fileExistsAtFilePathCaseSensitive:(id)arg1;
@end

@interface NSNumber (IDESourceControlAdditions)
- (int)ideSourceControlStatusValue;
@end

@interface NSObject (IDEModelObjectTypeIdentification)
- (id)ideModelObjectTypeIdentifier;
@end

@interface NSString (IDEIndexAdditions)
- (id)ideIndex_resolvedFilePath;
- (id)ideIndex_stringByResolvingSymlinksInPath;
- (id)ideIndex_firstNonPrefixString;
- (id)ideIndex_normalizedFoldedString;
@end

@interface _IDEDeferredInitializationInvocation : NSObject
{
    Class _initializerClass;
    int _options;
    DVTExtension *_extension;
}

- (void)invokeWithFailureHandler:(id)arg1;
- (id)initWithInitalizerClass:(Class)arg1 options:(int)arg2 extension:(id)arg3;

@end

@interface _IDEFolderRootGroup : IDEGroup
{
}

- (BOOL)subitemsAreEditable;

@end

@interface _IDEFoundationPrivateClassForFindingBundle : NSObject
{
}

@end

@interface _IDEIssueProvisionInfo : NSObject
{
    id <IDEBlueprint> _blueprint;
    IDEContainer *_container;
    NSMutableArray *_issues;
    DVTMapTable *_issueToGroupingObjectsMap;
    IDEIssueProviderSession *_session;
}

@property(readonly) NSMutableArray *_mutableIssues; // @synthesize _mutableIssues=_issues;
@property(readonly) IDEIssueProviderSession *session; // @synthesize session=_session;
@property(copy) DVTMapTable *issueToGroupingObjectsMap; // @synthesize issueToGroupingObjectsMap=_issueToGroupingObjectsMap;
@property(readonly) IDEContainer *container; // @synthesize container=_container;
@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
- (void)removeIssues:(id)arg1;
- (void)addIssues:(id)arg1;
@property(readonly) NSArray *issues;
@property(readonly) IDEIssueProvider *issueProvider;
- (id)initWithBlueprint:(id)arg1 container:(id)arg2 issues:(id)arg3 session:(id)arg4;

@end

@interface _IDELegacyUserDefaultsImporter : NSObject <IDEInitialization>
{
}

+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;

@end

@interface _IDEOCUnitTestRecord : NSObject
{
    IDETest *_test;
    NSMutableArray *_outputMessages;
    int _status;
    NSDate *_startDate;
    double _duration;
    DVTPerformanceTestOutput *_performanceTestOutput;
}

+ (void)initialize;
@property(copy) DVTPerformanceTestOutput *performanceTestOutput; // @synthesize performanceTestOutput=_performanceTestOutput;
@property double duration; // @synthesize duration=_duration;
@property(copy) NSDate *startDate; // @synthesize startDate=_startDate;
@property int status; // @synthesize status=_status;
@property(readonly) IDETest *test; // @synthesize test=_test;
@property(readonly) IDETestResult *result;
- (id)initWithTest:(id)arg1;

// Remaining properties
@property(readonly) NSMutableArray *mutableOutputMessages; // @dynamic mutableOutputMessages;
@property(copy) NSArray *outputMessages; // @dynamic outputMessages;

@end

